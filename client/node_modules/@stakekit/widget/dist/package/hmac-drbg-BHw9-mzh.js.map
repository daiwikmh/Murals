{"version":3,"file":"hmac-drbg-BHw9-mzh.js","sources":["../../../../node_modules/minimalistic-assert/index.js","../../../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../../../node_modules/brorand/index.js","../../../../node_modules/hash.js/lib/hash/utils.js","../../../../node_modules/hash.js/lib/hash/common.js","../../../../node_modules/hash.js/lib/hash/sha/common.js","../../../../node_modules/hash.js/lib/hash/sha/1.js","../../../../node_modules/hash.js/lib/hash/sha/256.js","../../../../node_modules/hash.js/lib/hash/sha/224.js","../../../../node_modules/hash.js/lib/hash/sha/512.js","../../../../node_modules/hash.js/lib/hash/sha/384.js","../../../../node_modules/hash.js/lib/hash/sha.js","../../../../node_modules/hash.js/lib/hash/ripemd.js","../../../../node_modules/hash.js/lib/hash/hmac.js","../../../../node_modules/hash.js/lib/hash.js","../../../../node_modules/hmac-drbg/lib/hmac-drbg.js"],"sourcesContent":["module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n"],"names":["minimalisticAssert","assert","val","msg","l","r","utils","exports","toArray","enc","res","i","c","hi","lo","zero2","word","toHex","arr","brorandModule","len","Rand","rand","n","crypto","require$$0","inherits","require$$1","isSurrogatePair","p","htonl","w","toHex32","endian","zero8","join32","start","end","k","split32","m","rotr32","b","rotl32","sum32","a","sum32_3","sum32_4","d","sum32_5","sum64","buf","pos","ah","al","bh","bl","sum64_hi","sum64_lo","sum64_4_hi","ch","cl","dh","dl","carry","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","num","rotr64_lo","shr64_hi","shr64_lo","BlockHash","common","bytes","t","ft_1","s","x","y","z","ch32","p32","maj32","s0_256","s1_256","g0_256","g1_256","shaCommon","require$$2","sha1_K","SHA1","_1","W","e","require$$3","sha256_K","SHA256","_256","f","g","h","T1","T2","SHA224","_224","sha512_K","SHA512","_512","c0_hi","g1_512_hi","c0_lo","g1_512_lo","c1_hi","c1_lo","c2_hi","g0_512_hi","c2_lo","g0_512_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","s1_512_hi","s1_512_lo","ch64_hi","ch64_lo","c4_hi","c4_lo","T1_hi","T1_lo","s0_512_hi","s0_512_lo","maj64_hi","maj64_lo","T2_hi","T2_lo","xh","xl","yh","yl","zh","zl","SHA384","_384","sha","require$$4","RIPEMD160","ripemd","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","j","T","K","rh","Kh","sh","Hmac","hash","key","hmac","HmacDRBG","options","entropy","nonce","pers","hmacDrbg","seed","kmac","entropyEnc","add","addEnc","temp"],"mappings":";;;IAAAA,IAAiBC;AAEjB,SAASA,GAAOC,GAAKC,GAAK;AACxB,MAAI,CAACD;AACH,UAAM,IAAI,MAAMC,KAAO,kBAAkB;AAC7C;AAEAF,GAAO,QAAQ,SAAqBG,GAAGC,GAAGF,GAAK;AAC7C,MAAIC,KAAKC;AACP,UAAM,IAAI,MAAMF,KAAQ,uBAAuBC,IAAI,SAASC,CAAE;AAClE;;;ACRA,MAAIC,IAAQC;AAEZ,WAASC,EAAQL,GAAKM,GAAK;AACzB,QAAI,MAAM,QAAQN,CAAG;AACnB,aAAOA,EAAI;AACb,QAAI,CAACA;AACH,aAAO;AACT,QAAIO,IAAM,CAAA;AACV,QAAI,OAAOP,KAAQ,UAAU;AAC3B,eAASQ,IAAI,GAAGA,IAAIR,EAAI,QAAQQ;AAC9B,QAAAD,EAAIC,CAAC,IAAIR,EAAIQ,CAAC,IAAI;AACpB,aAAOD;AAAA,IACR;AACD,QAAID,MAAQ,OAAO;AACjB,MAAAN,IAAMA,EAAI,QAAQ,gBAAgB,EAAE,GAChCA,EAAI,SAAS,MAAM,MACrBA,IAAM,MAAMA;AACd,eAASQ,IAAI,GAAGA,IAAIR,EAAI,QAAQQ,KAAK;AACnC,QAAAD,EAAI,KAAK,SAASP,EAAIQ,CAAC,IAAIR,EAAIQ,IAAI,CAAC,GAAG,EAAE,CAAC;AAAA,IAChD;AACI,eAASA,IAAI,GAAGA,IAAIR,EAAI,QAAQQ,KAAK;AACnC,YAAIC,IAAIT,EAAI,WAAWQ,CAAC,GACpBE,IAAKD,KAAK,GACVE,IAAKF,IAAI;AACb,QAAIC,IACFH,EAAI,KAAKG,GAAIC,CAAE,IAEfJ,EAAI,KAAKI,CAAE;AAAA,MACd;AAEH,WAAOJ;AAAA,EACR;AACD,EAAAJ,EAAM,UAAUE;AAEhB,WAASO,EAAMC,GAAM;AACnB,WAAIA,EAAK,WAAW,IACX,MAAMA,IAENA;AAAA,EACV;AACD,EAAAV,EAAM,QAAQS;AAEd,WAASE,EAAMd,GAAK;AAElB,aADIO,IAAM,IACDC,IAAI,GAAGA,IAAIR,EAAI,QAAQQ;AAC9B,MAAAD,KAAOK,EAAMZ,EAAIQ,CAAC,EAAE,SAAS,EAAE,CAAC;AAClC,WAAOD;AAAA,EACR;AACD,EAAAJ,EAAM,QAAQW,GAEdX,EAAM,SAAS,SAAgBY,GAAKT,GAAK;AACvC,WAAIA,MAAQ,QACHQ,EAAMC,CAAG,IAETA;AAAA;;0BCxDPb;AAEJc,GAAA,UAAiB,SAAcC,GAAK;AAClC,SAAKf,OACHA,KAAI,IAAIgB,EAAK,IAAI,IAEZhB,GAAE,SAASe,CAAG;AACvB;AAEA,SAASC,EAAKC,GAAM;AAClB,OAAK,OAAOA;AACd;AACmBH,GAAA,QAAA,OAAGE;AAEtBA,EAAK,UAAU,WAAW,SAAkBD,GAAK;AAC/C,SAAO,KAAK,MAAMA,CAAG;AACvB;AAGAC,EAAK,UAAU,QAAQ,SAAeE,GAAG;AACvC,MAAI,KAAK,KAAK;AACZ,WAAO,KAAK,KAAK,SAASA,CAAC;AAG7B,WADIb,IAAM,IAAI,WAAWa,CAAC,GACjBZ,IAAI,GAAGA,IAAID,EAAI,QAAQC;AAC9B,IAAAD,EAAIC,CAAC,IAAI,KAAK,KAAK,QAAO;AAC5B,SAAOD;AACT;AAEA,IAAI,OAAO,QAAS;AAClB,EAAI,KAAK,UAAU,KAAK,OAAO,kBAE7BW,EAAK,UAAU,QAAQ,SAAeE,GAAG;AACvC,QAAIL,IAAM,IAAI,WAAWK,CAAC;AAC1B,gBAAK,OAAO,gBAAgBL,CAAG,GACxBA;AAAA,EACb,IACa,KAAK,YAAY,KAAK,SAAS,kBAExCG,EAAK,UAAU,QAAQ,SAAeE,GAAG;AACvC,QAAIL,IAAM,IAAI,WAAWK,CAAC;AAC1B,gBAAK,SAAS,gBAAgBL,CAAG,GAC1BA;AAAA,EACb,IAGa,OAAO,UAAW,aAE3BG,EAAK,UAAU,QAAQ,WAAW;AAChC,UAAM,IAAI,MAAM,qBAAqB;AAAA,EAC3C;AAAA;AAIE,MAAI;AACF,QAAIG,KAASC;AACb,QAAI,OAAOD,GAAO,eAAgB;AAChC,YAAM,IAAI,MAAM,eAAe;AAEjC,IAAAH,EAAK,UAAU,QAAQ,SAAeE,GAAG;AACvC,aAAOC,GAAO,YAAYD,CAAC;AAAA,IACjC;AAAA,EACG,QAAW;AAAA,EACX;sCC7DCtB,KAASwB,GACTC,KAAWC;AAECrB,EAAA,WAAGoB;AAEnB,SAASE,GAAgBzB,GAAKQ,GAAG;AAI/B,UAHKR,EAAI,WAAWQ,CAAC,IAAI,WAAY,SAGjCA,IAAI,KAAKA,IAAI,KAAKR,EAAI,SACjB,MAEDA,EAAI,WAAWQ,IAAI,CAAC,IAAI,WAAY;AAC9C;AAEA,SAASH,GAAQL,GAAKM,GAAK;AACzB,MAAI,MAAM,QAAQN,CAAG;AACnB,WAAOA,EAAI;AACb,MAAI,CAACA;AACH,WAAO;AACT,MAAIO,IAAM,CAAA;AACV,MAAI,OAAOP,KAAQ;AACjB,QAAKM;AAyBE,UAAIA,MAAQ;AAIjB,aAHAN,IAAMA,EAAI,QAAQ,gBAAgB,EAAE,GAChCA,EAAI,SAAS,MAAM,MACrBA,IAAM,MAAMA,IACTQ,IAAI,GAAGA,IAAIR,EAAI,QAAQQ,KAAK;AAC/B,UAAAD,EAAI,KAAK,SAASP,EAAIQ,CAAC,IAAIR,EAAIQ,IAAI,CAAC,GAAG,EAAE,CAAC;AAAA,UAxB5C,UADIkB,IAAI,GACClB,IAAI,GAAGA,IAAIR,EAAI,QAAQQ,KAAK;AACnC,UAAIC,IAAIT,EAAI,WAAWQ,CAAC;AACxB,MAAIC,IAAI,MACNF,EAAImB,GAAG,IAAIjB,IACFA,IAAI,QACbF,EAAImB,GAAG,IAAKjB,KAAK,IAAK,KACtBF,EAAImB,GAAG,IAAKjB,IAAI,KAAM,OACbgB,GAAgBzB,GAAKQ,CAAC,KAC/BC,IAAI,UAAYA,IAAI,SAAW,OAAOT,EAAI,WAAW,EAAEQ,CAAC,IAAI,OAC5DD,EAAImB,GAAG,IAAKjB,KAAK,KAAM,KACvBF,EAAImB,GAAG,IAAMjB,KAAK,KAAM,KAAM,KAC9BF,EAAImB,GAAG,IAAMjB,KAAK,IAAK,KAAM,KAC7BF,EAAImB,GAAG,IAAKjB,IAAI,KAAM,QAEtBF,EAAImB,GAAG,IAAKjB,KAAK,KAAM,KACvBF,EAAImB,GAAG,IAAMjB,KAAK,IAAK,KAAM,KAC7BF,EAAImB,GAAG,IAAKjB,IAAI,KAAM;AAAA,IAEzB;AAAA;AASH,SAAKD,IAAI,GAAGA,IAAIR,EAAI,QAAQQ;AAC1B,MAAAD,EAAIC,CAAC,IAAIR,EAAIQ,CAAC,IAAI;AAEtB,SAAOD;AACT;AACeJ,EAAA,UAAGE;AAElB,SAASS,GAAMd,GAAK;AAElB,WADIO,IAAM,IACDC,IAAI,GAAGA,IAAIR,EAAI,QAAQQ;AAC9B,IAAAD,KAAOK,GAAMZ,EAAIQ,CAAC,EAAE,SAAS,EAAE,CAAC;AAClC,SAAOD;AACT;AACaJ,EAAA,QAAGW;AAEhB,SAASa,GAAMC,GAAG;AAChB,MAAIrB,IAAOqB,MAAM,KACLA,MAAM,IAAK,QACXA,KAAK,IAAK,YACVA,IAAI,QAAS;AACzB,SAAOrB,MAAQ;AACjB;AACaJ,EAAA,QAAGwB;AAEhB,SAASE,GAAQ7B,GAAK8B,GAAQ;AAE5B,WADIvB,IAAM,IACDC,IAAI,GAAGA,IAAIR,EAAI,QAAQQ,KAAK;AACnC,QAAIoB,IAAI5B,EAAIQ,CAAC;AACb,IAAIsB,MAAW,aACbF,IAAID,GAAMC,CAAC,IACbrB,KAAOwB,GAAMH,EAAE,SAAS,EAAE,CAAC;AAAA,EAC5B;AACD,SAAOrB;AACT;AACeJ,EAAA,UAAG0B;AAElB,SAASjB,GAAMC,GAAM;AACnB,SAAIA,EAAK,WAAW,IACX,MAAMA,IAENA;AACX;AACaV,EAAA,QAAGS;AAEhB,SAASmB,GAAMlB,GAAM;AACnB,SAAIA,EAAK,WAAW,IACX,MAAMA,IACNA,EAAK,WAAW,IAChB,OAAOA,IACPA,EAAK,WAAW,IAChB,QAAQA,IACRA,EAAK,WAAW,IAChB,SAASA,IACTA,EAAK,WAAW,IAChB,UAAUA,IACVA,EAAK,WAAW,IAChB,WAAWA,IACXA,EAAK,WAAW,IAChB,YAAYA,IAEZA;AACX;AACaV,EAAA,QAAG4B;AAEhB,SAASC,GAAOhC,GAAKiC,GAAOC,GAAKJ,GAAQ;AACvC,MAAIb,IAAMiB,IAAMD;AAChBnC,EAAAA,GAAOmB,IAAM,MAAM,CAAC;AAEpB,WADIV,IAAM,IAAI,MAAMU,IAAM,CAAC,GAClB,IAAI,GAAGkB,IAAIF,GAAO,IAAI1B,EAAI,QAAQ,KAAK4B,KAAK,GAAG;AACtD,QAAIP;AACJ,IAAIE,MAAW,QACbF,IAAK5B,EAAImC,CAAC,KAAK,KAAOnC,EAAImC,IAAI,CAAC,KAAK,KAAOnC,EAAImC,IAAI,CAAC,KAAK,IAAKnC,EAAImC,IAAI,CAAC,IAEvEP,IAAK5B,EAAImC,IAAI,CAAC,KAAK,KAAOnC,EAAImC,IAAI,CAAC,KAAK,KAAOnC,EAAImC,IAAI,CAAC,KAAK,IAAKnC,EAAImC,CAAC,GACzE5B,EAAI,CAAC,IAAIqB,MAAM;AAAA,EAChB;AACD,SAAOrB;AACT;AACcJ,EAAA,SAAG6B;AAEjB,SAASI,GAAQpC,GAAK8B,GAAQ;AAE5B,WADIvB,IAAM,IAAI,MAAMP,EAAI,SAAS,CAAC,GACzBQ,IAAI,GAAG2B,IAAI,GAAG3B,IAAIR,EAAI,QAAQQ,KAAK2B,KAAK,GAAG;AAClD,QAAIE,IAAIrC,EAAIQ,CAAC;AACb,IAAIsB,MAAW,SACbvB,EAAI4B,CAAC,IAAIE,MAAM,IACf9B,EAAI4B,IAAI,CAAC,IAAKE,MAAM,KAAM,KAC1B9B,EAAI4B,IAAI,CAAC,IAAKE,MAAM,IAAK,KACzB9B,EAAI4B,IAAI,CAAC,IAAIE,IAAI,QAEjB9B,EAAI4B,IAAI,CAAC,IAAIE,MAAM,IACnB9B,EAAI4B,IAAI,CAAC,IAAKE,MAAM,KAAM,KAC1B9B,EAAI4B,IAAI,CAAC,IAAKE,MAAM,IAAK,KACzB9B,EAAI4B,CAAC,IAAIE,IAAI;AAAA,EAEhB;AACD,SAAO9B;AACT;AACeJ,EAAA,UAAGiC;AAElB,SAASE,GAAOV,GAAGW,GAAG;AACpB,SAAQX,MAAMW,IAAMX,KAAM,KAAKW;AACjC;AACcpC,EAAA,SAAGmC;AAEjB,SAASE,GAAOZ,GAAGW,GAAG;AACpB,SAAQX,KAAKW,IAAMX,MAAO,KAAKW;AACjC;AACcpC,EAAA,SAAGqC;AAEjB,SAASC,GAAMC,GAAGH,GAAG;AACnB,SAAQG,IAAIH,MAAO;AACrB;AACapC,EAAA,QAAGsC;AAEhB,SAASE,GAAQD,GAAGH,GAAG9B,GAAG;AACxB,SAAQiC,IAAIH,IAAI9B,MAAO;AACzB;AACeN,EAAA,UAAGwC;AAElB,SAASC,GAAQF,GAAGH,GAAG9B,GAAGoC,GAAG;AAC3B,SAAQH,IAAIH,IAAI9B,IAAIoC,MAAO;AAC7B;AACe1C,EAAA,UAAGyC;AAElB,SAASE,GAAQJ,GAAGH,GAAG9B,GAAGoC,GAAG,GAAG;AAC9B,SAAQH,IAAIH,IAAI9B,IAAIoC,IAAI,MAAO;AACjC;AACe1C,EAAA,UAAG2C;AAElB,SAASC,GAAMC,GAAKC,GAAKC,GAAIC,GAAI;AAC/B,MAAIC,IAAKJ,EAAIC,CAAG,GACZI,IAAKL,EAAIC,IAAM,CAAC,GAEhBtC,IAAMwC,IAAKE,MAAQ,GACnB3C,KAAMC,IAAKwC,IAAK,IAAI,KAAKD,IAAKE;AAClC,EAAAJ,EAAIC,CAAG,IAAIvC,MAAO,GAClBsC,EAAIC,IAAM,CAAC,IAAItC;AACjB;AACaR,EAAA,QAAG4C;AAEhB,SAASO,GAASJ,GAAIC,GAAIC,GAAIC,GAAI;AAChC,MAAI1C,IAAMwC,IAAKE,MAAQ,GACnB3C,KAAMC,IAAKwC,IAAK,IAAI,KAAKD,IAAKE;AAClC,SAAO1C,MAAO;AAChB;AACgBP,EAAA,WAAGmD;AAEnB,SAASC,GAASL,GAAIC,GAAIC,GAAIC,GAAI;AAChC,MAAI1C,IAAKwC,IAAKE;AACd,SAAO1C,MAAO;AAChB;AACgBR,EAAA,WAAGoD;AAEnB,SAASC,GAAWN,GAAIC,GAAIC,GAAIC,GAAII,GAAIC,GAAIC,GAAIC,GAAI;AAClD,MAAIC,IAAQ,GACRlD,IAAKwC;AACT,EAAAxC,IAAMA,IAAK0C,MAAQ,GACnBQ,KAASlD,IAAKwC,IAAK,IAAI,GACvBxC,IAAMA,IAAK+C,MAAQ,GACnBG,KAASlD,IAAK+C,IAAK,IAAI,GACvB/C,IAAMA,IAAKiD,MAAQ,GACnBC,KAASlD,IAAKiD,IAAK,IAAI;AAEvB,MAAIlD,IAAKwC,IAAKE,IAAKK,IAAKE,IAAKE;AAC7B,SAAOnD,MAAO;AAChB;AACkBP,EAAA,aAAGqD;AAErB,SAASM,GAAWZ,GAAIC,GAAIC,GAAIC,GAAII,GAAIC,GAAIC,GAAIC,GAAI;AAClD,MAAIjD,IAAKwC,IAAKE,IAAKK,IAAKE;AACxB,SAAOjD,MAAO;AAChB;AACkBR,EAAA,aAAG2D;AAErB,SAASC,GAAWb,GAAIC,GAAIC,GAAIC,GAAII,GAAIC,GAAIC,GAAIC,GAAII,GAAIC,GAAI;AAC1D,MAAIJ,IAAQ,GACRlD,IAAKwC;AACT,EAAAxC,IAAMA,IAAK0C,MAAQ,GACnBQ,KAASlD,IAAKwC,IAAK,IAAI,GACvBxC,IAAMA,IAAK+C,MAAQ,GACnBG,KAASlD,IAAK+C,IAAK,IAAI,GACvB/C,IAAMA,IAAKiD,MAAQ,GACnBC,KAASlD,IAAKiD,IAAK,IAAI,GACvBjD,IAAMA,IAAKsD,MAAQ,GACnBJ,KAASlD,IAAKsD,IAAK,IAAI;AAEvB,MAAIvD,IAAKwC,IAAKE,IAAKK,IAAKE,IAAKK,IAAKH;AAClC,SAAOnD,MAAO;AAChB;AACkBP,EAAA,aAAG4D;AAErB,SAASG,GAAWhB,GAAIC,GAAIC,GAAIC,GAAII,GAAIC,GAAIC,GAAIC,GAAII,GAAIC,GAAI;AAC1D,MAAItD,IAAKwC,IAAKE,IAAKK,IAAKE,IAAKK;AAE7B,SAAOtD,MAAO;AAChB;AACkBR,EAAA,aAAG+D;AAErB,SAASC,GAAUjB,GAAIC,GAAIiB,GAAK;AAC9B,MAAIlE,IAAKiD,KAAO,KAAKiB,IAASlB,MAAOkB;AACrC,SAAOlE,MAAM;AACf;AACiBC,EAAA,YAAGgE;AAEpB,SAASE,GAAUnB,GAAIC,GAAIiB,GAAK;AAC9B,MAAIlE,IAAKgD,KAAO,KAAKkB,IAASjB,MAAOiB;AACrC,SAAOlE,MAAM;AACf;AACiBC,EAAA,YAAGkE;AAEpB,SAASC,GAASpB,GAAIC,GAAIiB,GAAK;AAC7B,SAAOlB,MAAOkB;AAChB;AACgBjE,EAAA,WAAGmE;AAEnB,SAASC,GAASrB,GAAIC,GAAIiB,GAAK;AAC7B,MAAIlE,IAAKgD,KAAO,KAAKkB,IAASjB,MAAOiB;AACrC,SAAOlE,MAAM;AACf;AACAC,EAAA,WAAmBoE;YCnRfpE,KAAQmB,GACRxB,KAAS0B;AAEb,SAASgD,IAAY;AACnB,OAAK,UAAU,MACf,KAAK,eAAe,GACpB,KAAK,YAAY,KAAK,YAAY,WAClC,KAAK,UAAU,KAAK,YAAY,SAChC,KAAK,eAAe,KAAK,YAAY,cACrC,KAAK,YAAY,KAAK,YAAY,YAAY,GAC9C,KAAK,SAAS,OAEd,KAAK,UAAU,KAAK,YAAY,GAChC,KAAK,WAAW,KAAK,YAAY;AACnC;AACiBC,EAAA,YAAGD;AAEpBA,EAAU,UAAU,SAAS,SAAgBxE,GAAKM,GAAK;AAUrD,MARAN,IAAMG,GAAM,QAAQH,GAAKM,CAAG,GACvB,KAAK,UAGR,KAAK,UAAU,KAAK,QAAQ,OAAON,CAAG,IAFtC,KAAK,UAAUA,GAGjB,KAAK,gBAAgBA,EAAI,QAGrB,KAAK,QAAQ,UAAU,KAAK,SAAS;AACvC,IAAAA,IAAM,KAAK;AAGX,QAAIE,IAAIF,EAAI,SAAS,KAAK;AAC1B,SAAK,UAAUA,EAAI,MAAMA,EAAI,SAASE,GAAGF,EAAI,MAAM,GAC/C,KAAK,QAAQ,WAAW,MAC1B,KAAK,UAAU,OAEjBA,IAAMG,GAAM,OAAOH,GAAK,GAAGA,EAAI,SAASE,GAAG,KAAK,MAAM;AACtD,aAASM,IAAI,GAAGA,IAAIR,EAAI,QAAQQ,KAAK,KAAK;AACxC,WAAK,QAAQR,GAAKQ,GAAGA,IAAI,KAAK,QAAQ;AAAA,EACzC;AAED,SAAO;AACT;AAEAgE,EAAU,UAAU,SAAS,SAAgBlE,GAAK;AAChD,cAAK,OAAO,KAAK,KAAM,CAAA,GACvBR,GAAO,KAAK,YAAY,IAAI,GAErB,KAAK,QAAQQ,CAAG;AACzB;AAEAkE,EAAU,UAAU,OAAO,WAAe;AACxC,MAAIvD,IAAM,KAAK,cACXyD,IAAQ,KAAK,SACbvC,IAAIuC,KAAUzD,IAAM,KAAK,aAAayD,GACtCnE,IAAM,IAAI,MAAM4B,IAAI,KAAK,SAAS;AACtC,EAAA5B,EAAI,CAAC,IAAI;AACT,WAASC,IAAI,GAAGA,IAAI2B,GAAG3B;AACrB,IAAAD,EAAIC,CAAC,IAAI;AAIX,MADAS,MAAQ,GACJ,KAAK,WAAW,OAAO;AACzB,aAAS0D,IAAI,GAAGA,IAAI,KAAK,WAAWA;AAClC,MAAApE,EAAIC,GAAG,IAAI;AAEb,IAAAD,EAAIC,GAAG,IAAI,GACXD,EAAIC,GAAG,IAAI,GACXD,EAAIC,GAAG,IAAI,GACXD,EAAIC,GAAG,IAAI,GACXD,EAAIC,GAAG,IAAKS,MAAQ,KAAM,KAC1BV,EAAIC,GAAG,IAAKS,MAAQ,KAAM,KAC1BV,EAAIC,GAAG,IAAKS,MAAQ,IAAK,KACzBV,EAAIC,GAAG,IAAIS,IAAM;AAAA,EACrB;AAUI,SATAV,EAAIC,GAAG,IAAIS,IAAM,KACjBV,EAAIC,GAAG,IAAKS,MAAQ,IAAK,KACzBV,EAAIC,GAAG,IAAKS,MAAQ,KAAM,KAC1BV,EAAIC,GAAG,IAAKS,MAAQ,KAAM,KAC1BV,EAAIC,GAAG,IAAI,GACXD,EAAIC,GAAG,IAAI,GACXD,EAAIC,GAAG,IAAI,GACXD,EAAIC,GAAG,IAAI,GAENmE,IAAI,GAAGA,IAAI,KAAK,WAAWA;AAC9B,MAAApE,EAAIC,GAAG,IAAI;AAGf,SAAOD;AACT;oBCzFIJ,KAAQmB,GACRgB,IAASnC,GAAM;AAEnB,SAASyE,GAAKC,GAAGC,GAAGC,GAAGC,GAAG;AACxB,MAAIH,MAAM;AACR,WAAOI,GAAKH,GAAGC,GAAGC,CAAC;AACrB,MAAIH,MAAM,KAAKA,MAAM;AACnB,WAAOK,GAAIJ,GAAGC,GAAGC,CAAC;AACpB,MAAIH,MAAM;AACR,WAAOM,GAAML,GAAGC,GAAGC,CAAC;AACxB;AACYP,EAAA,OAAGG;AAEf,SAASK,GAAKH,GAAGC,GAAGC,GAAG;AACrB,SAAQF,IAAIC,IAAO,CAACD,IAAKE;AAC3B;AACYP,EAAA,OAAGQ;AAEf,SAASE,GAAML,GAAGC,GAAGC,GAAG;AACtB,SAAQF,IAAIC,IAAMD,IAAIE,IAAMD,IAAIC;AAClC;AACaP,EAAA,QAAGU;AAEhB,SAASD,GAAIJ,GAAGC,GAAGC,GAAG;AACpB,SAAOF,IAAIC,IAAIC;AACjB;AACWP,EAAA,MAAGS;AAEd,SAASE,GAAON,GAAG;AACjB,SAAOxC,EAAOwC,GAAG,CAAC,IAAIxC,EAAOwC,GAAG,EAAE,IAAIxC,EAAOwC,GAAG,EAAE;AACpD;AACcL,EAAA,SAAGW;AAEjB,SAASC,GAAOP,GAAG;AACjB,SAAOxC,EAAOwC,GAAG,CAAC,IAAIxC,EAAOwC,GAAG,EAAE,IAAIxC,EAAOwC,GAAG,EAAE;AACpD;AACcL,EAAA,SAAGY;AAEjB,SAASC,GAAOR,GAAG;AACjB,SAAOxC,EAAOwC,GAAG,CAAC,IAAIxC,EAAOwC,GAAG,EAAE,IAAKA,MAAM;AAC/C;AACcL,EAAA,SAAGa;AAEjB,SAASC,GAAOT,GAAG;AACjB,SAAOxC,EAAOwC,GAAG,EAAE,IAAIxC,EAAOwC,GAAG,EAAE,IAAKA,MAAM;AAChD;AACAL,EAAA,SAAiBc;AC9CjB,IAAIpF,IAAQmB,GACRmD,KAASjD,GACTgE,KAAYC,GAEZjD,KAASrC,EAAM,QACfsC,IAAQtC,EAAM,OACd2C,KAAU3C,EAAM,SAChByE,KAAOY,GAAU,MACjBhB,KAAYC,GAAO,WAEnBiB,KAAS;AAAA,EACX;AAAA,EAAY;AAAA,EACZ;AAAA,EAAY;AACd;AAEA,SAASC,IAAO;AACd,MAAI,EAAE,gBAAgBA;AACpB,WAAO,IAAIA,EAAI;AAEjBnB,EAAAA,GAAU,KAAK,IAAI,GACnB,KAAK,IAAI;AAAA,IACP;AAAA,IAAY;AAAA,IAAY;AAAA,IACxB;AAAA,IAAY;AAAA,EAAU,GACxB,KAAK,IAAI,IAAI,MAAM,EAAE;AACvB;AAEArE,EAAM,SAASwF,GAAMnB,EAAS;IAC9BoB,KAAiBD;AAEjBA,EAAK,YAAY;AACjBA,EAAK,UAAU;AACfA,EAAK,eAAe;AACpBA,EAAK,YAAY;AAEjBA,EAAK,UAAU,UAAU,SAAiB3F,GAAKiC,GAAO;AAGpD,WAFI4D,IAAI,KAAK,GAEJrF,IAAI,GAAGA,IAAI,IAAIA;AACtB,IAAAqF,EAAErF,CAAC,IAAIR,EAAIiC,IAAQzB,CAAC;AAEtB,SAAMA,IAAIqF,EAAE,QAAQrF;AAClB,IAAAqF,EAAErF,CAAC,IAAIgC,GAAOqD,EAAErF,IAAI,CAAC,IAAIqF,EAAErF,IAAI,CAAC,IAAIqF,EAAErF,IAAI,EAAE,IAAIqF,EAAErF,IAAI,EAAE,GAAG,CAAC;AAE9D,MAAI,IAAI,KAAK,EAAE,CAAC,GACZ+B,IAAI,KAAK,EAAE,CAAC,GACZ9B,IAAI,KAAK,EAAE,CAAC,GACZoC,IAAI,KAAK,EAAE,CAAC,GACZiD,IAAI,KAAK,EAAE,CAAC;AAEhB,OAAKtF,IAAI,GAAGA,IAAIqF,EAAE,QAAQrF,KAAK;AAC7B,QAAIqE,IAAI,CAAC,EAAErE,IAAI,KACXmE,IAAI7B,GAAQN,GAAO,GAAG,CAAC,GAAGoC,GAAKC,GAAGtC,GAAG9B,GAAGoC,CAAC,GAAGiD,GAAGD,EAAErF,CAAC,GAAGkF,GAAOb,CAAC,CAAC;AAClE,IAAAiB,IAAIjD,GACJA,IAAIpC,GACJA,IAAI+B,GAAOD,GAAG,EAAE,GAChBA,IAAI,GACJ,IAAIoC;AAAA,EACL;AAED,OAAK,EAAE,CAAC,IAAIlC,EAAM,KAAK,EAAE,CAAC,GAAG,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAIA,EAAM,KAAK,EAAE,CAAC,GAAGF,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAIE,EAAM,KAAK,EAAE,CAAC,GAAGhC,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAIgC,EAAM,KAAK,EAAE,CAAC,GAAGI,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAIJ,EAAM,KAAK,EAAE,CAAC,GAAGqD,CAAC;AAChC;AAEAH,EAAK,UAAU,UAAU,SAAgBrF,GAAK;AAC5C,SAAIA,MAAQ,QACHH,EAAM,QAAQ,KAAK,GAAG,KAAK,IAE3BA,EAAM,QAAQ,KAAK,GAAG,KAAK;AACtC;ACvEA,IAAIA,IAAQmB,GACRmD,KAASjD,GACTgE,IAAYC,GACZ3F,KAASiG,GAETtD,IAAQtC,EAAM,OACdyC,KAAUzC,EAAM,SAChB2C,KAAU3C,EAAM,SAChB8E,KAAOO,EAAU,MACjBL,KAAQK,EAAU,OAClBJ,KAASI,EAAU,QACnBH,KAASG,EAAU,QACnBF,KAASE,EAAU,QACnBD,KAASC,EAAU,QAEnBhB,KAAYC,GAAO,WAEnBuB,KAAW;AAAA,EACb;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AACtC;AAEA,SAASC,IAAS;AAChB,MAAI,EAAE,gBAAgBA;AACpB,WAAO,IAAIA,EAAM;AAEnBzB,EAAAA,GAAU,KAAK,IAAI,GACnB,KAAK,IAAI;AAAA,IACP;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,EACxC,GACE,KAAK,IAAIwB,IACT,KAAK,IAAI,IAAI,MAAM,EAAE;AACvB;AACA7F,EAAM,SAAS8F,GAAQzB,EAAS;IAChC0B,KAAiBD;AAEjBA,EAAO,YAAY;AACnBA,EAAO,UAAU;AACjBA,EAAO,eAAe;AACtBA,EAAO,YAAY;AAEnBA,EAAO,UAAU,UAAU,SAAiBjG,GAAKiC,GAAO;AAGtD,WAFI4D,IAAI,KAAK,GAEJrF,IAAI,GAAGA,IAAI,IAAIA;AACtB,IAAAqF,EAAErF,CAAC,IAAIR,EAAIiC,IAAQzB,CAAC;AACtB,SAAOA,IAAIqF,EAAE,QAAQrF;AACnB,IAAAqF,EAAErF,CAAC,IAAIoC,GAAQ2C,GAAOM,EAAErF,IAAI,CAAC,CAAC,GAAGqF,EAAErF,IAAI,CAAC,GAAG8E,GAAOO,EAAErF,IAAI,EAAE,CAAC,GAAGqF,EAAErF,IAAI,EAAE,CAAC;AAEzE,MAAI,IAAI,KAAK,EAAE,CAAC,GACZ+B,IAAI,KAAK,EAAE,CAAC,GACZ9B,IAAI,KAAK,EAAE,CAAC,GACZoC,IAAI,KAAK,EAAE,CAAC,GACZiD,IAAI,KAAK,EAAE,CAAC,GACZK,IAAI,KAAK,EAAE,CAAC,GACZC,IAAI,KAAK,EAAE,CAAC,GACZC,IAAI,KAAK,EAAE,CAAC;AAGhB,OADAvG,GAAO,KAAK,EAAE,WAAW+F,EAAE,MAAM,GAC5BrF,IAAI,GAAGA,IAAIqF,EAAE,QAAQrF,KAAK;AAC7B,QAAI8F,IAAKxD,GAAQuD,GAAGhB,GAAOS,CAAC,GAAGb,GAAKa,GAAGK,GAAGC,CAAC,GAAG,KAAK,EAAE5F,CAAC,GAAGqF,EAAErF,CAAC,CAAC,GACzD+F,IAAK9D,EAAM2C,GAAO,CAAC,GAAGD,GAAM,GAAG5C,GAAG9B,CAAC,CAAC;AACxC,IAAA4F,IAAID,GACJA,IAAID,GACJA,IAAIL,GACJA,IAAIrD,EAAMI,GAAGyD,CAAE,GACfzD,IAAIpC,GACJA,IAAI8B,GACJA,IAAI,GACJ,IAAIE,EAAM6D,GAAIC,CAAE;AAAA,EACjB;AAED,OAAK,EAAE,CAAC,IAAI9D,EAAM,KAAK,EAAE,CAAC,GAAG,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAIA,EAAM,KAAK,EAAE,CAAC,GAAGF,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAIE,EAAM,KAAK,EAAE,CAAC,GAAGhC,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAIgC,EAAM,KAAK,EAAE,CAAC,GAAGI,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAIJ,EAAM,KAAK,EAAE,CAAC,GAAGqD,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAIrD,EAAM,KAAK,EAAE,CAAC,GAAG0D,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAI1D,EAAM,KAAK,EAAE,CAAC,GAAG2D,CAAC,GAC9B,KAAK,EAAE,CAAC,IAAI3D,EAAM,KAAK,EAAE,CAAC,GAAG4D,CAAC;AAChC;AAEAJ,EAAO,UAAU,UAAU,SAAgB3F,GAAK;AAC9C,SAAIA,MAAQ,QACHH,EAAM,QAAQ,KAAK,GAAG,KAAK,IAE3BA,EAAM,QAAQ,KAAK,GAAG,KAAK;AACtC;ACtGA,IAAIA,KAAQmB,GACR2E,KAASzE;AAEb,SAASgF,IAAS;AAChB,MAAI,EAAE,gBAAgBA;AACpB,WAAO,IAAIA,EAAM;AAEnB,EAAAP,GAAO,KAAK,IAAI,GAChB,KAAK,IAAI;AAAA,IACP;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA;AACxC;AACA9F,GAAM,SAASqG,GAAQP,EAAM;IAC7BQ,KAAiBD;AAEjBA,EAAO,YAAY;AACnBA,EAAO,UAAU;AACjBA,EAAO,eAAe;AACtBA,EAAO,YAAY;AAEnBA,EAAO,UAAU,UAAU,SAAgBlG,GAAK;AAE9C,SAAIA,MAAQ,QACHH,GAAM,QAAQ,KAAK,EAAE,MAAM,GAAG,CAAC,GAAG,KAAK,IAEvCA,GAAM,QAAQ,KAAK,EAAE,MAAM,GAAG,CAAC,GAAG,KAAK;AAClD;AC1BA,IAAIA,IAAQmB,GACRmD,KAASjD,GACT1B,KAAS2F,GAETtB,IAAYhE,EAAM,WAClBkE,IAAYlE,EAAM,WAClBmE,KAAWnE,EAAM,UACjBoE,KAAWpE,EAAM,UACjB4C,IAAQ5C,EAAM,OACdmD,KAAWnD,EAAM,UACjBoD,KAAWpD,EAAM,UACjBqD,KAAarD,EAAM,YACnB2D,KAAa3D,EAAM,YACnB4D,KAAa5D,EAAM,YACnB+D,KAAa/D,EAAM,YAEnBqE,KAAYC,GAAO,WAEnBiC,KAAW;AAAA,EACb;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AACtC;AAEA,SAASC,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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}