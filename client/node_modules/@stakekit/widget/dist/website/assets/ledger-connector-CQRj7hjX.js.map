{"version":3,"file":"ledger-connector-CQRj7hjX.js","sources":["../../../../../node_modules/rxjs/dist/esm5/internal/util/lift.js","../../../../../node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../../../../../node_modules/rxjs/dist/esm5/internal/operators/map.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/accounts/serializers.js","../../../../../node_modules/zod/lib/index.mjs","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/accounts/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/currencies/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/common.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/algorand/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/bitcoin/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/celo/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/cosmos/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/crypto_org/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/ethereum/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/near/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/hedera/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/filecoin/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/neo/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/polkadot/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/ripple/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/stellar/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/tezos/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/ton/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/tron/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/elrond/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/cardano/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/solana/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/vechain/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/stacks/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/internet_computer/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/casper/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/serializer.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/algorand/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/bitcoin/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/celo/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/cosmos/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/crypto_org/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/ethereum/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/near/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/neo/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/polkadot/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/ripple/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/solana/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/stellar/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/tezos/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/ton/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/tron/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/hedera/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/filecoin/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/elrond/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/cardano/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/vechain/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/stacks/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/internet_computer/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/casper/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/families/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/logger/index.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/transports/WindowMessageTransport.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/types/index.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/errors/types.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/errors/creators.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/errors/ServerError.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/JSONRPC/RPCError.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/JSONRPC/types.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/JSONRPC/validation.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/JSONRPC/helpers.js","../../../../../node_modules/@ledgerhq/wallet-api-core/node_modules/@ledgerhq/errors/lib-es/helpers.js","../../../../../node_modules/@ledgerhq/wallet-api-core/node_modules/@ledgerhq/errors/lib-es/index.js","../../../../../node_modules/@ledgerhq/wallet-api-core/node_modules/uuid/dist/esm-browser/rng.js","../../../../../node_modules/@ledgerhq/wallet-api-core/node_modules/uuid/dist/esm-browser/stringify.js","../../../../../node_modules/@ledgerhq/wallet-api-core/node_modules/uuid/dist/esm-browser/native.js","../../../../../node_modules/@ledgerhq/wallet-api-core/node_modules/uuid/dist/esm-browser/v4.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/JSONRPC/RpcNode.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/AccountList.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/AccountReceive.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/AccountRequest.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/BitcoinGetAddress.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/BitcoinGetPublicKey.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/BitcoinGetXPub.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/CurrencyList.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/Device.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/DeviceClose.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/DeviceExchange.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/DeviceOpen.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/DeviceSelect.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/DeviceTransport.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/ExchangeComplete.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/ExchangeStart.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/MessageSign.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/StorageGet.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/StorageSet.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/TransactionSign.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/TransactionSignAndBroadcast.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/WalletCapabilities.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/WalletInfo.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/types/WalletUserId.js","../../../../../node_modules/@ledgerhq/wallet-api-core/lib-es/spec/methods.js","../../../../../node_modules/@ledgerhq/wallet-api-client/node_modules/@ledgerhq/errors/lib-es/helpers.js","../../../../../node_modules/@ledgerhq/wallet-api-client/node_modules/@ledgerhq/errors/lib-es/index.js","../../../../../node_modules/@ledgerhq/wallet-api-client/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/TransportWalletAPI.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/modules/Account.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/modules/Bitcoin.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/modules/Currency.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/modules/Device.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/modules/Exchange.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/modules/Message.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/modules/Storage.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/modules/Transaction.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/modules/Wallet.js","../../../../../node_modules/@ledgerhq/wallet-api-client/lib-es/WalletAPIClient.js","../../../src/providers/ledger/utils.ts","../../../src/providers/ledger/ledger-connector.ts"],"sourcesContent":["import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this.shouldUnsubscribe = shouldUnsubscribe;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var closed_1 = this.closed;\n            _super.prototype.unsubscribe.call(this);\n            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import BigNumber from \"bignumber.js\";\n/**\n * Serialize an [[Account]] object in order to send it over JSON-RPC protocol\n * to the Ledger Live platform\n * @param account - The account object to serialize\n *\n * @returns The raw representation of the provided account object\n */\nexport function serializeAccount({ id, name, address, currency, balance, spendableBalance, blockHeight, lastSyncDate, parentAccountId, }) {\n    return {\n        id,\n        name,\n        address,\n        currency,\n        balance: balance.toString(),\n        spendableBalance: spendableBalance.toString(),\n        blockHeight,\n        lastSyncDate: lastSyncDate.toISOString(),\n        parentAccountId,\n    };\n}\n/**\n * Deserialize a [[RawAccount]] object after it has been received over JSON-RPC\n * protocol from the Ledger Live platform\n * @param rawAccount - The raw account representation to deserialize\n *\n * @returns The object account of the provided raw account representation\n */\nexport function deserializeAccount({ id, name, address, currency, balance, spendableBalance, blockHeight, lastSyncDate, parentAccountId, }) {\n    return {\n        id,\n        name,\n        address,\n        currency,\n        balance: new BigNumber(balance),\n        spendableBalance: new BigNumber(spendableBalance),\n        blockHeight,\n        lastSyncDate: new Date(lastSyncDate),\n        parentAccountId,\n    };\n}\n//# sourceMappingURL=serializers.js.map","var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_+-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * @deprecated Use z.string().min(1) instead.\n     * @see {@link ZodString.min}\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.issues.length) {\n                return {\n                    status: \"dirty\",\n                    value: ctx.data,\n                };\n            }\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        if (isValid(result)) {\n            result.value = Object.freeze(result.value);\n        }\n        return result;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nconst custom = (check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n","import { z } from \"zod\";\nexport const schemaRawAccount = z.object({\n    id: z.string(),\n    name: z.string(),\n    address: z.string(),\n    currency: z.string(),\n    balance: z.string(),\n    spendableBalance: z.string(),\n    blockHeight: z.union([z.number(), z.undefined()]),\n    lastSyncDate: z.string(),\n    parentAccountId: z.string().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nexport const schemaCurrencyType = z.enum([\"CryptoCurrency\", \"TokenCurrency\"]);\nexport const schemaTokenStandard = z.enum([\"ERC20\"]);\nexport const schemaBaseCurrency = z.object({\n    color: z.string(),\n    ticker: z.string(),\n    id: z.string(),\n    name: z.string(),\n    decimals: z.number(),\n});\nexport const schemaCryptoCurrency = schemaBaseCurrency.extend({\n    type: z.literal(schemaCurrencyType.enum.CryptoCurrency),\n    family: z.string(),\n});\nexport const schemaTokenCurrency = schemaBaseCurrency.extend({\n    type: z.literal(schemaCurrencyType.enum.TokenCurrency),\n    parent: z.string(),\n});\nexport const schemaERC20TokenCurrency = schemaTokenCurrency.extend({\n    standard: schemaTokenStandard,\n    contract: z.string(),\n});\nexport const schemaCurrency = z.discriminatedUnion(\"type\", [\n    schemaCryptoCurrency,\n    schemaERC20TokenCurrency,\n]);\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nexport const schemaTransactionCommon = z.object({\n    amount: z.string(),\n    recipient: z.string(),\n});\nexport const FAMILIES = [\n    \"algorand\",\n    \"bitcoin\",\n    \"cardano\",\n    \"casper\",\n    \"celo\",\n    \"crypto_org\",\n    \"cosmos\",\n    \"elrond\",\n    \"ethereum\",\n    \"filecoin\",\n    \"hedera\",\n    \"internet_computer\",\n    \"near\",\n    \"neo\",\n    \"polkadot\",\n    \"ripple\",\n    \"solana\",\n    \"stacks\",\n    \"stellar\",\n    \"tezos\",\n    \"ton\",\n    \"tron\",\n    \"vechain\",\n];\nexport const schemaFamilies = z.enum(FAMILIES);\n//# sourceMappingURL=common.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeAlgorandTransaction = ({ family, mode, fees, assetId, memo, amount, recipient, }) => ({\n    family,\n    amount: amount.toString(),\n    recipient,\n    fees: fees ? fees.toString() : undefined,\n    memo,\n    mode,\n    assetId,\n});\nexport const deserializeAlgorandTransaction = ({ family, mode, fees, assetId, memo, amount, recipient, }) => ({\n    family,\n    amount: new BigNumber(amount),\n    recipient,\n    fees: fees ? new BigNumber(fees) : undefined,\n    memo,\n    mode,\n    assetId,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport function serializeBitcoinTransaction({ family, amount, recipient, feePerByte, opReturnData, }) {\n    return {\n        family,\n        amount: amount.toString(),\n        recipient,\n        feePerByte: feePerByte?.toString(),\n        opReturnDataHex: opReturnData?.toString(\"hex\"),\n    };\n}\nexport function deserializeBitcoinTransaction({ family, amount, recipient, feePerByte, opReturnDataHex, }) {\n    return {\n        family,\n        amount: new BigNumber(amount),\n        recipient,\n        feePerByte: feePerByte ? new BigNumber(feePerByte) : undefined,\n        opReturnData: opReturnDataHex\n            ? Buffer.from(opReturnDataHex, \"hex\")\n            : undefined,\n    };\n}\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport function serializeCeloTransaction({ amount, family, fees = undefined, index = undefined, mode, recipient, }) {\n    return {\n        amount: amount.toString(),\n        family,\n        fees: fees ? fees.toString() : undefined,\n        index,\n        mode,\n        recipient,\n    };\n}\nexport function deserializeCeloTransaction({ amount, family, fees = undefined, index = undefined, mode, recipient, }) {\n    return {\n        amount: new BigNumber(amount),\n        family,\n        fees: fees ? new BigNumber(fees) : undefined,\n        index,\n        mode,\n        recipient,\n    };\n}\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeCosmosTransaction = ({ amount, recipient, family, mode, fees, gas, memo, sourceValidator, validators, }) => ({\n    amount: amount.toString(),\n    recipient,\n    family,\n    mode,\n    fees: fees ? fees.toString() : undefined,\n    gas: gas ? gas.toString() : undefined,\n    memo,\n    sourceValidator: sourceValidator ?? undefined,\n    validators: validators\n        ? validators.map((val) => ({\n            ...val,\n            amount: val.amount.toString(),\n        }))\n        : undefined,\n});\nexport const deserializeCosmosTransaction = ({ amount, recipient, family, mode, fees, gas, memo, sourceValidator, validators, }) => ({\n    amount: new BigNumber(amount),\n    recipient,\n    family,\n    mode,\n    fees: fees ? new BigNumber(fees) : undefined,\n    gas: gas ? new BigNumber(gas) : undefined,\n    memo,\n    sourceValidator: sourceValidator ?? undefined,\n    validators: validators\n        ? validators.map((val) => ({\n            ...val,\n            amount: new BigNumber(val.amount),\n        }))\n        : undefined,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeCryptoOrgTransaction = ({ family, mode, fees, amount, recipient, }) => ({\n    family,\n    amount: amount.toString(),\n    recipient,\n    fees: fees ? fees.toString() : undefined,\n    mode,\n});\nexport const deserializeCryptoOrgTransaction = ({ family, mode, fees, amount, recipient, }) => ({\n    family,\n    amount: new BigNumber(amount),\n    recipient,\n    fees: fees ? new BigNumber(fees) : undefined,\n    mode,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport function serializeEthereumTransaction({ family, amount, recipient, nonce, data, gasPrice, gasLimit, maxPriorityFeePerGas, maxFeePerGas, }) {\n    return {\n        family,\n        amount: amount.toString(),\n        recipient,\n        nonce,\n        data: data ? data.toString(\"hex\") : undefined,\n        gasPrice: gasPrice ? gasPrice.toString() : undefined,\n        gasLimit: gasLimit ? gasLimit.toString() : undefined,\n        maxPriorityFeePerGas: maxPriorityFeePerGas\n            ? maxPriorityFeePerGas.toString()\n            : undefined,\n        maxFeePerGas: maxFeePerGas ? maxFeePerGas.toString() : undefined,\n    };\n}\nexport function deserializeEthereumTransaction({ family, amount, recipient, nonce, data, gasPrice, gasLimit, maxPriorityFeePerGas, maxFeePerGas, }) {\n    return {\n        family,\n        amount: new BigNumber(amount),\n        recipient,\n        nonce,\n        data: data ? Buffer.from(data, \"hex\") : undefined,\n        gasPrice: gasPrice ? new BigNumber(gasPrice) : undefined,\n        gasLimit: gasLimit ? new BigNumber(gasLimit) : undefined,\n        maxPriorityFeePerGas: maxPriorityFeePerGas\n            ? new BigNumber(maxPriorityFeePerGas)\n            : undefined,\n        maxFeePerGas: maxFeePerGas ? new BigNumber(maxFeePerGas) : undefined,\n    };\n}\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport function serialize({ amount, recipient, family, mode, fees, }) {\n    return {\n        amount: amount.toString(),\n        recipient,\n        family,\n        mode,\n        fees: fees?.toString(),\n    };\n}\nexport function deserialize({ amount, recipient, family, mode, fees, }) {\n    return {\n        amount: new BigNumber(amount),\n        recipient,\n        family,\n        mode,\n        fees: fees ? new BigNumber(fees) : undefined,\n    };\n}\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport function serializeHederaTransaction({ amount, family, memo = undefined, recipient, }) {\n    return {\n        amount: amount.toString(),\n        family,\n        memo,\n        recipient,\n    };\n}\nexport function deserializeHederaTransaction({ amount, family, memo = undefined, recipient, }) {\n    return {\n        amount: new BigNumber(amount),\n        family,\n        memo,\n        recipient,\n    };\n}\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport function serializeFilecoinTransaction({ amount, data = undefined, family, method, nonce, params = undefined, gasLimit, gasFeeCap, gasPremium, recipient, version, }) {\n    return {\n        amount: amount.toString(),\n        data: data ? data.toString(\"hex\") : undefined,\n        family,\n        gasLimit: gasLimit.toNumber(),\n        gasFeeCap: gasFeeCap.toString(),\n        gasPremium: gasPremium.toString(),\n        method,\n        nonce,\n        params,\n        recipient,\n        version,\n    };\n}\nexport function deserializeFilecoinTransaction({ amount, data = undefined, family, method, nonce, params = undefined, gasLimit, gasFeeCap, gasPremium, recipient, version, }) {\n    return {\n        amount: new BigNumber(amount),\n        data: data ? Buffer.from(data, \"hex\") : undefined,\n        family,\n        gasLimit: new BigNumber(gasLimit),\n        gasFeeCap: new BigNumber(gasFeeCap),\n        gasPremium: new BigNumber(gasPremium),\n        nonce,\n        method,\n        params,\n        recipient,\n        version,\n    };\n}\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport function serialize({ amount, recipient, family, }) {\n    return {\n        amount: amount.toString(),\n        recipient,\n        family,\n    };\n}\nexport function deserialize({ amount, recipient, family, }) {\n    return {\n        amount: new BigNumber(amount),\n        recipient,\n        family,\n    };\n}\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializePolkadotTransaction = ({ amount, recipient, family, mode, fee, era, validators, numOfSlashingSpans, rewardDestination, }) => ({\n    amount: amount.toString(),\n    recipient,\n    family,\n    mode,\n    fee: fee ? fee.toString() : undefined,\n    era,\n    validators,\n    numOfSlashingSpans,\n    rewardDestination,\n});\nexport const deserializePolkadotTransaction = ({ amount, recipient, family, mode, fee, era, validators, numOfSlashingSpans, rewardDestination, }) => ({\n    amount: new BigNumber(amount),\n    recipient,\n    family,\n    mode,\n    fee: fee ? new BigNumber(fee) : undefined,\n    era,\n    validators,\n    numOfSlashingSpans,\n    rewardDestination,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeRippleTransaction = ({ family, fee, tag, amount, recipient, }) => ({\n    family,\n    amount: amount.toString(),\n    recipient,\n    fee: fee ? fee.toString() : undefined,\n    tag,\n});\nexport const deserializeRippleTransaction = ({ family, fee, tag, amount, recipient, }) => ({\n    family,\n    amount: new BigNumber(amount),\n    recipient,\n    fee: fee ? new BigNumber(fee) : undefined,\n    tag,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeStellarTransaction = ({ amount, recipient, family, fees, memoType, memoValue, }) => ({\n    amount: amount.toString(),\n    recipient,\n    family,\n    fees: fees ? fees.toString() : undefined,\n    memoType,\n    memoValue,\n});\nexport const deserializeStellarTransaction = ({ amount, recipient, family, fees, memoType, memoValue, }) => ({\n    amount: new BigNumber(amount),\n    recipient,\n    family,\n    fees: fees ? new BigNumber(fees) : undefined,\n    memoType,\n    memoValue,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeTezosTransaction = ({ amount, recipient, family, mode, fees, gasLimit, }) => ({\n    amount: amount.toString(),\n    recipient,\n    family,\n    mode,\n    fees: fees ? fees.toString() : undefined,\n    gasLimit: gasLimit ? gasLimit.toString() : undefined,\n});\nexport const deserializeTezosTransaction = ({ amount, recipient, family, mode, fees, gasLimit, }) => ({\n    amount: new BigNumber(amount),\n    recipient,\n    family,\n    mode,\n    fees: fees ? new BigNumber(fees) : undefined,\n    gasLimit: gasLimit ? new BigNumber(gasLimit) : undefined,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeTonTransaction = ({ amount, recipient, family, fees, comment, }) => ({\n    amount: amount.toString(),\n    recipient,\n    family,\n    fees: fees.toString(),\n    comment,\n});\nexport const deserializeTonTransaction = ({ amount, recipient, family, fees, comment, }) => ({\n    amount: new BigNumber(amount),\n    recipient,\n    family,\n    fees: new BigNumber(fees),\n    comment,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeTronTransaction = ({ amount, recipient, family, mode, resource, duration, votes, }) => ({\n    amount: amount.toString(),\n    recipient,\n    family,\n    mode,\n    resource,\n    duration,\n    votes,\n});\nexport const deserializeTronTransaction = ({ amount, recipient, family, mode, resource, duration, votes, }) => ({\n    amount: new BigNumber(amount),\n    recipient,\n    family,\n    mode,\n    resource,\n    duration,\n    votes,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport function serializeElrondTransaction({ amount, data, family, fees, gasLimit, mode, recipient, }) {\n    return {\n        family,\n        amount: amount.toString(),\n        recipient,\n        mode,\n        fees: fees ? fees.toString() : undefined,\n        data,\n        gasLimit,\n    };\n}\nexport function deserializeElrondTransaction({ amount, data, family, fees, gasLimit, mode, recipient, }) {\n    return {\n        family,\n        mode,\n        amount: new BigNumber(amount),\n        recipient,\n        fees: fees ? new BigNumber(fees) : undefined,\n        data,\n        gasLimit,\n    };\n}\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport function serializeCardanoTransaction({ amount, family, fees, memo, mode, recipient, }) {\n    return {\n        amount: amount.toString(),\n        family,\n        fees: fees ? fees.toString() : undefined,\n        memo,\n        mode,\n        recipient,\n    };\n}\nexport function deserializeCardanoTransaction({ amount, family, fees, memo, mode, recipient, }) {\n    return {\n        amount: new BigNumber(amount),\n        family,\n        fees: fees ? new BigNumber(fees) : undefined,\n        memo,\n        mode,\n        recipient,\n    };\n}\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport function serializeSolanaTransaction({ amount, family, model, recipient, }) {\n    return {\n        amount: amount.toString(),\n        family,\n        model: JSON.stringify(model),\n        recipient,\n    };\n}\nexport function deserializeSolanaTransaction({ family, amount, model, recipient, }) {\n    return {\n        amount: new BigNumber(amount),\n        family,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        model: JSON.parse(model),\n        recipient,\n    };\n}\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeVechainTransaction = ({ amount, recipient, family, estimatedFees, body, }) => ({\n    amount: amount.toString(),\n    recipient,\n    family,\n    estimatedFees,\n    body,\n});\nexport const deserializeVechainTransaction = ({ amount, recipient, family, estimatedFees, body, }) => ({\n    amount: new BigNumber(amount),\n    recipient,\n    family,\n    estimatedFees,\n    body,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeStacksTransaction = ({ amount, recipient, family, fee, nonce, memo, network, anchorMode, }) => ({\n    amount: amount.toString(),\n    recipient,\n    family,\n    fee: fee?.toString(),\n    nonce: nonce?.toString(),\n    memo,\n    network,\n    anchorMode,\n});\nexport const deserializeStacksTransaction = ({ amount, recipient, family, fee, nonce, memo, network, anchorMode, }) => ({\n    amount: new BigNumber(amount),\n    recipient,\n    family,\n    fee: fee ? new BigNumber(fee) : undefined,\n    nonce: nonce ? new BigNumber(nonce) : undefined,\n    memo,\n    network: network === \"mainnet\" ? network : \"testnet\",\n    anchorMode,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeInternetComputerTransaction = ({ amount, recipient, family, fees, memo, }) => ({\n    amount: amount.toFixed(),\n    recipient,\n    family,\n    fees: fees.toString(),\n    memo,\n});\nexport const deserializeInternetComputerTransaction = ({ amount, recipient, family, fees, memo, }) => ({\n    amount: new BigNumber(amount),\n    recipient,\n    family,\n    fees: new BigNumber(fees),\n    memo,\n});\n//# sourceMappingURL=serializer.js.map","import BigNumber from \"bignumber.js\";\nexport const serializeCasperTransaction = ({ amount, recipient, family, fees, transferId, }) => ({\n    amount: amount.toFixed(),\n    recipient,\n    family,\n    fees: fees.toString(),\n    transferId,\n});\nexport const deserializeCasperTransaction = ({ amount, recipient, family, fees, transferId, }) => ({\n    amount: new BigNumber(amount),\n    recipient,\n    family,\n    fees: new BigNumber(fees),\n    transferId,\n});\n//# sourceMappingURL=serializer.js.map","import { deserializeAlgorandTransaction, serializeAlgorandTransaction, } from \"./algorand/serializer\";\nimport { deserializeBitcoinTransaction, serializeBitcoinTransaction, } from \"./bitcoin/serializer\";\nimport { deserializeCeloTransaction, serializeCeloTransaction, } from \"./celo/serializer\";\nimport { deserializeCosmosTransaction, serializeCosmosTransaction, } from \"./cosmos/serializer\";\nimport { deserializeCryptoOrgTransaction, serializeCryptoOrgTransaction, } from \"./crypto_org/serializer\";\nimport { deserializeEthereumTransaction, serializeEthereumTransaction, } from \"./ethereum/serializer\";\nimport * as near from \"./near/serializer\";\nimport { deserializeHederaTransaction, serializeHederaTransaction, } from \"./hedera/serializer\";\nimport { deserializeFilecoinTransaction, serializeFilecoinTransaction, } from \"./filecoin/serializer\";\nimport * as neo from \"./neo/serializer\";\nimport { deserializePolkadotTransaction, serializePolkadotTransaction, } from \"./polkadot/serializer\";\nimport { deserializeRippleTransaction, serializeRippleTransaction, } from \"./ripple/serializer\";\nimport { deserializeStellarTransaction, serializeStellarTransaction, } from \"./stellar/serializer\";\nimport { deserializeTezosTransaction, serializeTezosTransaction, } from \"./tezos/serializer\";\nimport { deserializeTonTransaction, serializeTonTransaction, } from \"./ton/serializer\";\nimport { deserializeTronTransaction, serializeTronTransaction, } from \"./tron/serializer\";\nimport { deserializeElrondTransaction, serializeElrondTransaction, } from \"./elrond/serializer\";\nimport { deserializeCardanoTransaction, serializeCardanoTransaction, } from \"./cardano/serializer\";\nimport { deserializeSolanaTransaction, serializeSolanaTransaction, } from \"./solana/serializer\";\nimport { deserializeVechainTransaction, serializeVechainTransaction, } from \"./vechain/serializer\";\nimport { deserializeStacksTransaction, serializeStacksTransaction, } from \"./stacks/serializer\";\nimport { deserializeInternetComputerTransaction, serializeInternetComputerTransaction, } from \"./internet_computer/serializer\";\nimport { deserializeCasperTransaction, serializeCasperTransaction, } from \"./casper/serializer\";\n/**\n * Serialize an [[Transaction]] object in order to send it over JSON-RPC\n * protocol to the Ledger Live platform\n * @param transaction - The transaction object to serialize\n *\n * @returns The raw representation of the provided transaction object\n */\nexport function serializeTransaction(transaction) {\n    switch (transaction.family) {\n        case \"ethereum\":\n            return serializeEthereumTransaction(transaction);\n        case \"bitcoin\":\n            return serializeBitcoinTransaction(transaction);\n        case \"algorand\":\n            return serializeAlgorandTransaction(transaction);\n        case \"crypto_org\":\n            return serializeCryptoOrgTransaction(transaction);\n        case \"ripple\":\n            return serializeRippleTransaction(transaction);\n        case \"celo\":\n            return serializeCeloTransaction(transaction);\n        case \"cosmos\":\n            return serializeCosmosTransaction(transaction);\n        case \"hedera\":\n            return serializeHederaTransaction(transaction);\n        case \"filecoin\":\n            return serializeFilecoinTransaction(transaction);\n        case \"tezos\":\n            return serializeTezosTransaction(transaction);\n        case \"polkadot\":\n            return serializePolkadotTransaction(transaction);\n        case \"stellar\":\n            return serializeStellarTransaction(transaction);\n        case \"ton\":\n            return serializeTonTransaction(transaction);\n        case \"tron\":\n            return serializeTronTransaction(transaction);\n        case \"near\":\n            return near.serialize(transaction);\n        case \"neo\":\n            return neo.serialize(transaction);\n        case \"elrond\":\n            return serializeElrondTransaction(transaction);\n        case \"cardano\":\n            return serializeCardanoTransaction(transaction);\n        case \"solana\":\n            return serializeSolanaTransaction(transaction);\n        case \"vechain\":\n            return serializeVechainTransaction(transaction);\n        case \"stacks\":\n            return serializeStacksTransaction(transaction);\n        case \"internet_computer\":\n            return serializeInternetComputerTransaction(transaction);\n        case \"casper\":\n            return serializeCasperTransaction(transaction);\n        default: {\n            const exhaustiveCheck = transaction; // https://www.typescriptlang.org/docs/handbook/2/narrowing.html#exhaustiveness-checking\n            return exhaustiveCheck;\n            // throw new Error(\"Can't serialize transaction: family not supported\");\n        }\n    }\n}\n/**\n * Deserialize a [[RawTransaction]] object after it has been received over\n * JSON-RPC protocol from the Ledger Live platform\n * @param rawTransaction - The raw transaction representation to deserialize\n *\n * @returns The object transaction of the provided raw transaction representation\n */\nexport function deserializeTransaction(rawTransaction) {\n    switch (rawTransaction.family) {\n        case \"ethereum\":\n            return deserializeEthereumTransaction(rawTransaction);\n        case \"bitcoin\":\n            return deserializeBitcoinTransaction(rawTransaction);\n        case \"algorand\":\n            return deserializeAlgorandTransaction(rawTransaction);\n        case \"crypto_org\":\n            return deserializeCryptoOrgTransaction(rawTransaction);\n        case \"ripple\":\n            return deserializeRippleTransaction(rawTransaction);\n        case \"celo\":\n            return deserializeCeloTransaction(rawTransaction);\n        case \"cosmos\":\n            return deserializeCosmosTransaction(rawTransaction);\n        case \"hedera\":\n            return deserializeHederaTransaction(rawTransaction);\n        case \"filecoin\":\n            return deserializeFilecoinTransaction(rawTransaction);\n        case \"tezos\":\n            return deserializeTezosTransaction(rawTransaction);\n        case \"polkadot\":\n            return deserializePolkadotTransaction(rawTransaction);\n        case \"stellar\":\n            return deserializeStellarTransaction(rawTransaction);\n        case \"ton\":\n            return deserializeTonTransaction(rawTransaction);\n        case \"tron\":\n            return deserializeTronTransaction(rawTransaction);\n        case \"near\":\n            return near.deserialize(rawTransaction);\n        case \"neo\":\n            return neo.deserialize(rawTransaction);\n        case \"elrond\":\n            return deserializeElrondTransaction(rawTransaction);\n        case \"cardano\":\n            return deserializeCardanoTransaction(rawTransaction);\n        case \"solana\":\n            return deserializeSolanaTransaction(rawTransaction);\n        case \"vechain\":\n            return deserializeVechainTransaction(rawTransaction);\n        case \"stacks\":\n            return deserializeStacksTransaction(rawTransaction);\n        case \"internet_computer\":\n            return deserializeInternetComputerTransaction(rawTransaction);\n        case \"casper\":\n            return deserializeCasperTransaction(rawTransaction);\n        default: {\n            const exhaustiveCheck = rawTransaction; // https://www.typescriptlang.org/docs/handbook/2/narrowing.html#exhaustiveness-checking\n            return exhaustiveCheck;\n            // throw new Error(\"Can't deserialize transaction: family not supported\");\n        }\n    }\n}\n//# sourceMappingURL=serializer.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaAlgorandOperationMode = z.enum([\n    \"send\",\n    \"optIn\",\n    \"claimReward\",\n    \"optOut\",\n]);\nexport const schemaRawAlgorandTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.algorand),\n    mode: schemaAlgorandOperationMode,\n    fees: z.string().optional(),\n    assetId: z.string().optional(),\n    memo: z.string().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawBitcoinTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.bitcoin),\n    feePerByte: z.string().optional(),\n    opReturnDataHex: z.string().max(160).optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaOperationMode = z.enum([\n    \"send\",\n    \"lock\",\n    \"unlock\",\n    \"withdraw\",\n    \"vote\",\n    \"revoke\",\n    \"activate\",\n    \"register\",\n]);\nexport const schemaRawCeloTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.celo),\n    fees: z.string().optional().nullable(),\n    mode: schemaOperationMode,\n    index: z.number().optional().nullable(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaCosmosOperationMode = z.enum([\n    \"send\",\n    \"delegate\",\n    \"undelegate\",\n    \"redelegate\",\n    \"claimReward\",\n    \"claimRewardCompound\",\n]);\nconst cosmosDelegationInfo = z.object({\n    address: z.string(),\n    amount: z.string(),\n});\nexport const schemaRawCosmosTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.cosmos),\n    mode: schemaCosmosOperationMode,\n    fees: z.string().optional(),\n    gas: z.string().optional(),\n    memo: z.string().optional(),\n    sourceValidator: z.string().optional(),\n    validators: z.array(cosmosDelegationInfo).optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawCryptoOrgTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.crypto_org),\n    mode: z.string(),\n    fees: z.string().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawEthereumTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.ethereum),\n    nonce: z.number().optional(),\n    data: z.string().optional(),\n    gasPrice: z.string().optional(),\n    gasLimit: z.string().optional(),\n    maxPriorityFeePerGas: z.string().optional(),\n    maxFeePerGas: z.string().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawNearTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.near),\n    mode: z.string(),\n    fees: z.string().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawNeoTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.neo),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaPolkadotOperationMode = z.enum([\n    \"send\",\n    \"bond\",\n    \"unbond\",\n    \"rebond\",\n    \"withdrawUnbonded\",\n    \"setController\",\n    \"nominate\",\n    \"chill\",\n    \"claimReward\",\n]);\nexport const schemaPolkadotRewardDestination = z.enum([\n    \"Staked\",\n    \"Stash\",\n    \"Controller\",\n    \"Account\",\n    \"None\",\n]);\nexport const schemaRawPolkadotTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.polkadot),\n    mode: schemaPolkadotOperationMode,\n    fee: z.string().optional(),\n    era: z.number().optional(),\n    validators: z.array(z.string()).optional(),\n    rewardDestination: schemaPolkadotRewardDestination.optional(),\n    numOfSlashingSpans: z.number().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawRippleTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.ripple),\n    fee: z.string().optional(),\n    tag: z.number(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawSolanaTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.solana),\n    model: z.string(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const stellarMemoTypeEnum = z.enum([\n    \"MEMO_TEXT\",\n    \"MEMO_ID\",\n    \"MEMO_HASH\",\n    \"MEMO_RETURN\",\n]);\nexport const schemaRawStellarTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.stellar),\n    fees: z.string().optional(),\n    memoType: stellarMemoTypeEnum.optional(),\n    memoValue: z.string().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaTezosOperationMode = z.enum([\n    \"send\",\n    \"delegate\",\n    \"undelegate\",\n]);\nexport const schemaRawTezosTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.tezos),\n    mode: schemaTezosOperationMode,\n    fees: z.string().optional(),\n    gasLimit: z.string().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaTonComment = z.object({\n    isEncrypted: z.boolean(),\n    text: z.string(),\n});\nexport const schemaRawTonTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.ton),\n    fees: z.string(),\n    comment: schemaTonComment,\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaTronOperationMode = z.enum([\n    \"send\",\n    \"freeze\",\n    \"unfreeze\",\n    \"vote\",\n    \"claimReward\",\n    \"withdrawExpireUnfreeze\",\n    \"unDelegateResource\",\n    \"legacyUnfreeze\",\n]);\nexport const schemaTronResource = z.enum([\"BANDWIDTH\", \"ENERGY\"]);\nexport const schemaTronVotes = z.object({\n    address: z.string(),\n    voteCount: z.number(),\n});\nexport const schemaRawTronTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.tron),\n    mode: schemaTronOperationMode,\n    resource: schemaTronResource.optional(),\n    duration: z.number().optional(),\n    votes: z.array(schemaTronVotes).optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawHederaTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.hedera),\n    memo: z.string().max(100).optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawFilecoinTransaction = schemaTransactionCommon.extend({\n    data: z.string().optional(),\n    family: z.literal(schemaFamilies.enum.filecoin),\n    gasLimit: z.number(),\n    gasFeeCap: z.string(),\n    gasPremium: z.string(),\n    method: z.number(),\n    nonce: z.number(),\n    params: z.string().optional(),\n    version: z.number(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaOperationMode = z.enum([\n    \"send\",\n    \"delegate\",\n    \"reDelegateRewards\",\n    \"unDelegate\",\n    \"claimRewards\",\n    \"withdraw\",\n]);\nexport const schemaRawElrondTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.elrond),\n    mode: z.union([\n        z.literal(\"send\"),\n        z.literal(\"delegate\"),\n        z.literal(\"reDelegateRewards\"),\n        z.literal(\"unDelegate\"),\n        z.literal(\"claimRewards\"),\n        z.literal(\"withdraw\"),\n    ]),\n    fees: z.string().optional(),\n    data: z.string().optional(),\n    gasLimit: z.number(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawCardanoTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.cardano),\n    fees: z.string().optional(),\n    mode: z.string(),\n    memo: z.string().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\n// Generated from VeChain Thor Transaction types\nexport const schemaThorTransactionClause = z.object({\n    to: z.string().nullable(),\n    value: z.union([z.string(), z.number()]),\n    data: z.string(),\n});\n// Generated from VeChain Thor Transaction types\n// with Buffer type removed for `reserved.unused`\nexport const schemaThorTransactionBody = z.object({\n    chainTag: z.number(),\n    blockRef: z.string(),\n    expiration: z.number(),\n    clauses: z.array(schemaThorTransactionClause),\n    gasPriceCoef: z.number(),\n    gas: z.union([z.string(), z.number()]),\n    dependsOn: z.string().nullable(),\n    nonce: z.union([z.string(), z.number()]),\n    reserved: z\n        .object({\n        features: z.number().optional(),\n        unused: z.array(z.any()).optional(),\n    })\n        .optional(),\n});\nexport const schemaRawVechainTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.vechain),\n    estimatedFees: z.string(),\n    body: schemaThorTransactionBody,\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawStacksTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.stacks),\n    fee: z.string().optional(),\n    nonce: z.string().optional(),\n    memo: z.string().optional(),\n    network: z.string(),\n    anchorMode: z.number(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawInternetComputerTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.internet_computer),\n    fees: z.string(),\n    memo: z.string().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaFamilies, schemaTransactionCommon } from \"../common\";\nexport const schemaRawCasperTransaction = schemaTransactionCommon.extend({\n    family: z.literal(schemaFamilies.enum.casper),\n    fees: z.string(),\n    transferId: z.string().optional(),\n});\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { schemaRawAlgorandTransaction } from \"./algorand/validation\";\nimport { schemaRawBitcoinTransaction } from \"./bitcoin/validation\";\nimport { schemaRawCeloTransaction } from \"./celo/validation\";\nimport { schemaRawCosmosTransaction } from \"./cosmos/validation\";\nimport { schemaRawCryptoOrgTransaction } from \"./crypto_org/validation\";\nimport { schemaRawEthereumTransaction } from \"./ethereum/validation\";\nimport { schemaRawNearTransaction } from \"./near/validation\";\nimport { schemaRawNeoTransaction } from \"./neo/validation\";\nimport { schemaRawPolkadotTransaction } from \"./polkadot/validation\";\nimport { schemaRawRippleTransaction } from \"./ripple/validation\";\nimport { schemaRawSolanaTransaction } from \"./solana/validation\";\nimport { schemaRawStellarTransaction } from \"./stellar/validation\";\nimport { schemaRawTezosTransaction } from \"./tezos/validation\";\nimport { schemaRawTonTransaction } from \"./ton/validation\";\nimport { schemaRawTronTransaction } from \"./tron/validation\";\nimport { schemaRawHederaTransaction } from \"./hedera/validation\";\nimport { schemaRawFilecoinTransaction } from \"./filecoin/validation\";\nimport { schemaRawElrondTransaction } from \"./elrond/validation\";\nimport { schemaRawCardanoTransaction } from \"./cardano/validation\";\nimport { schemaRawVechainTransaction } from \"./vechain/validation\";\nimport { schemaRawStacksTransaction } from \"./stacks/validation\";\nimport { schemaRawInternetComputerTransaction } from \"./internet_computer/validation\";\nimport { schemaRawCasperTransaction } from \"./casper/validation\";\nexport const schemaRawTransaction = z.discriminatedUnion(\"family\", [\n    schemaRawAlgorandTransaction,\n    schemaRawBitcoinTransaction,\n    schemaRawCeloTransaction,\n    schemaRawCosmosTransaction,\n    schemaRawCryptoOrgTransaction,\n    schemaRawEthereumTransaction,\n    schemaRawHederaTransaction,\n    schemaRawFilecoinTransaction,\n    schemaRawNearTransaction,\n    schemaRawNeoTransaction,\n    schemaRawPolkadotTransaction,\n    schemaRawRippleTransaction,\n    schemaRawStellarTransaction,\n    schemaRawTezosTransaction,\n    schemaRawTonTransaction,\n    schemaRawTronTransaction,\n    schemaRawElrondTransaction,\n    schemaRawCardanoTransaction,\n    schemaRawSolanaTransaction,\n    schemaRawVechainTransaction,\n    schemaRawStacksTransaction,\n    schemaRawInternetComputerTransaction,\n    schemaRawCasperTransaction,\n]);\n//# sourceMappingURL=validation.js.map","/* istanbul ignore file */\n/* eslint-disable no-console */\n/**\n * Use for internal usage\n * @ignore\n */\nexport class Logger {\n    prefix = \"\";\n    constructor(namespace) {\n        this.prefix = namespace ? `[${namespace}] ` : \"\";\n    }\n    log(message, ...args) {\n        console.log(`%c${this.prefix}${message}`, \"background: #6490f1; color: #fff\", ...args);\n    }\n    warn(message, ...args) {\n        console.warn(`%c${this.prefix}${message}`, \"background: #6490f1; color: #f80\", ...args);\n    }\n    debug(message, ...args) {\n        console.debug(`%c${this.prefix}${message}`, \"background: #6490f1; color: #777\", ...args);\n    }\n    error(message, ...args) {\n        console.error(`%c${this.prefix}${message}`, \"background: #6490f1; color: #f00\", ...args);\n    }\n}\n//# sourceMappingURL=index.js.map","import { Logger } from \"../logger\";\nconst defaultLogger = new Logger(\"WindowMessage\");\nexport default class WindowMessageTransport {\n    target;\n    logger;\n    _onMessage;\n    constructor(target = window, logger = defaultLogger) {\n        this.target = target;\n        this.logger = logger;\n    }\n    connect = () => {\n        this.target.addEventListener(\"message\", this._onMessageEvent, false);\n        // @ts-expect-error: Workaround for android webview\n        this.target.document?.addEventListener(\"message\", this._onMessageEvent, false);\n        this.logger.debug(\"event listeners registered\");\n    };\n    disconnect = () => {\n        this.target.removeEventListener(\"message\", this._onMessageEvent, false);\n        // @ts-expect-error: Workaround for android webview\n        this.target.document?.removeEventListener(\"message\", this._onMessageEvent, false);\n        this.logger.debug(\"event listeners unregistered\");\n    };\n    _onMessageEvent = (event) => {\n        if (this._onMessage) {\n            this.logger.debug(\"received message event\", event);\n            if (event.data && typeof event.data === \"string\") {\n                try {\n                    const message = event.data;\n                    // TODO: find a better way to ensure message comes from LL\n                    if (Date.now() > 0) {\n                        this.logger.log(\"received message\", message);\n                        // FIXME\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        this._onMessage(message);\n                    }\n                    else {\n                        this.logger.debug(\"not a wallet API message\");\n                    }\n                }\n                catch (error) {\n                    this.logger.warn(\"parse error\");\n                    // FIXME\n                    if (error instanceof Error) {\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        this._onMessage(error.message);\n                    }\n                    // eslint-disable-next-line no-console\n                    console.error(\"unknown error\");\n                }\n            }\n            else {\n                this.logger.debug(\"ignoring message same origin\");\n            }\n        }\n        else {\n            this.logger.debug(\"no handler registered\");\n        }\n    };\n    set onMessage(handler) {\n        this._onMessage = handler;\n    }\n    get onMessage() {\n        return this._onMessage;\n    }\n    send = (message) => {\n        try {\n            // @ts-expect-error: injected value\n            if (this.target.ReactNativeWebView) {\n                this.logger.log(\"sending message (ReactNativeWebview)\", message);\n                // @ts-expect-error: injected value\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n                this.target.ReactNativeWebView.postMessage(message);\n            }\n            // @ts-expect-error: injected value\n            else if (this.target.ElectronWebview) {\n                this.logger.log(\"sending message (ElectronWebview)\", message);\n                // @ts-expect-error: injected value\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n                this.target.ElectronWebview.postMessage(message);\n            }\n            else {\n                this.logger.log(\"sending message\", message);\n                this.target.top?.postMessage(message, \"*\");\n            }\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.logger.error(\"unexpected error on send\", error);\n            return Promise.reject(error);\n        }\n    };\n}\n//# sourceMappingURL=WindowMessageTransport.js.map","/**\n * Abstract level of fees for a transaction\n */\nexport var FeesLevel;\n(function (FeesLevel) {\n    FeesLevel[\"Slow\"] = \"slow\";\n    FeesLevel[\"Medium\"] = \"medium\";\n    FeesLevel[\"Fast\"] = \"fast\";\n})(FeesLevel || (FeesLevel = {}));\nexport var DeviceModel;\n(function (DeviceModel) {\n    /**\n     * Represents the Ledger Blue hardware device\n     */\n    DeviceModel[\"Blue\"] = \"blue\";\n    /**\n     * Represents the Ledger Nano S hardware device\n     */\n    DeviceModel[\"NanoS\"] = \"nanoS\";\n    /**\n     * Represents the Ledger Nano X hardware device\n     */\n    DeviceModel[\"NanoX\"] = \"nanoX\";\n})(DeviceModel || (DeviceModel = {}));\n/**\n * Enum describing the different types of exchanges.\n */\nexport var ExchangeType;\n(function (ExchangeType) {\n    ExchangeType[ExchangeType[\"SWAP\"] = 0] = \"SWAP\";\n    ExchangeType[ExchangeType[\"SELL\"] = 1] = \"SELL\";\n    ExchangeType[ExchangeType[\"FUND\"] = 2] = \"FUND\";\n})(ExchangeType || (ExchangeType = {}));\n//# sourceMappingURL=index.js.map","import { z } from \"zod\";\n/*\n    This file define all the \"app level\" errors, feel free to define new errors\n    as we add new features to the Wallet API\n*/\nexport const schemaServerErrorCode = z.enum([\n    \"NOT_IMPLEMENTED_BY_WALLET\",\n    \"ACCOUNT_NOT_FOUND\",\n    \"CURRENCY_NOT_FOUND\",\n    \"PERMISSION_DENIED\",\n    \"UNKNOWN_ERROR\",\n    \"UNAUTHORIZED_STORE\",\n]);\n/*\n    NOT_IMPLEMENTED_BY_WALLET\n*/\nexport const schemaNotImplementedByWallet = z.object({\n    code: z.literal(schemaServerErrorCode.enum.NOT_IMPLEMENTED_BY_WALLET),\n    message: z.string(),\n    data: z.object({\n        methodId: z.string(),\n    }),\n});\n/*\n    ACCOUNT_NOT_FOUND\n*/\nexport const schemaAccountNotFound = z.object({\n    code: z.literal(schemaServerErrorCode.enum.ACCOUNT_NOT_FOUND),\n    message: z.string(),\n    data: z.object({\n        accountId: z.string(),\n    }),\n});\n/*\n    CURRENCY_NOT_FOUND\n*/\nexport const schemaCurrencyNotFound = z.object({\n    code: z.literal(schemaServerErrorCode.enum.CURRENCY_NOT_FOUND),\n    message: z.string(),\n    data: z.object({\n        currencyId: z.string(),\n    }),\n});\n/*\n    PERMISSION_DENIED\n*/\nexport const schemaPermissionDenied = z.object({\n    code: z.literal(schemaServerErrorCode.enum.PERMISSION_DENIED),\n    message: z.string(),\n    data: z.object({\n        methodId: z.string(),\n    }),\n});\n/*\n    UNKNOWN_ERROR\n*/\nexport const schemaUnknownErrorData = z.object({\n    name: z.string().optional(),\n    message: z.string().optional(),\n    stack: z.string().optional(),\n    cause: z.unknown().optional(),\n    code: z.string().optional(),\n});\nexport const schemaUnknownError = z.object({\n    code: z.literal(schemaServerErrorCode.enum.UNKNOWN_ERROR),\n    message: z.string(),\n    data: schemaUnknownErrorData.passthrough(),\n});\n/*\n    UNAUTHORIZED_STORE\n*/\nexport const schemaUnauthorizedStore = z.object({\n    code: z.literal(schemaServerErrorCode.enum.UNAUTHORIZED_STORE),\n    message: z.string(),\n    data: z.object({\n        storeId: z.string(),\n    }),\n});\nexport const schemaServerErrorData = z.discriminatedUnion(\"code\", [\n    schemaNotImplementedByWallet,\n    schemaAccountNotFound,\n    schemaCurrencyNotFound,\n    schemaPermissionDenied,\n    schemaUnknownError,\n    schemaUnauthorizedStore,\n]);\n//# sourceMappingURL=types.js.map","export function createNotImplementedByWallet(methodId) {\n    return {\n        code: \"NOT_IMPLEMENTED_BY_WALLET\",\n        message: \"called method is not implemented in the current wallet\",\n        data: {\n            methodId,\n        },\n    };\n}\nexport function createPermissionDenied(methodId) {\n    return {\n        code: \"PERMISSION_DENIED\",\n        message: \"you don't have the permission to call this method\",\n        data: {\n            methodId,\n        },\n    };\n}\nexport function createCurrencyNotFound(currencyId) {\n    return {\n        code: \"CURRENCY_NOT_FOUND\",\n        message: \"targeted currency is not supported in the current wallet\",\n        data: {\n            currencyId,\n        },\n    };\n}\nexport function createAccountNotFound(accountId) {\n    return {\n        code: \"ACCOUNT_NOT_FOUND\",\n        message: \"targeted account was not found in the current wallet\",\n        data: {\n            accountId,\n        },\n    };\n}\nexport function createUnknownError(error) {\n    return {\n        code: \"UNKNOWN_ERROR\",\n        message: \"an unhandled error was thrown\",\n        data: error,\n    };\n}\nexport function createUnauthorizedStore(storeId) {\n    return {\n        code: \"UNAUTHORIZED_STORE\",\n        message: \"you don't have the permission to call this method\",\n        data: {\n            storeId,\n        },\n    };\n}\n//# sourceMappingURL=creators.js.map","export class ServerError extends Error {\n    errorData;\n    constructor(errorData) {\n        super(errorData.message);\n        this.errorData = errorData;\n    }\n    /**\n     * Retrieve error code\n     * @returns error code\n     */\n    getCode() {\n        return this.errorData.code;\n    }\n    /**\n     * Retrieve underlying data info\n     * @returns data info\n     */\n    getData() {\n        return this.errorData;\n    }\n}\n//# sourceMappingURL=ServerError.js.map","export class RpcError extends Error {\n    err;\n    constructor(err) {\n        super(err.message);\n        this.err = err;\n    }\n    /**\n     * Retrieve error code\n     * @returns error code\n     */\n    getCode() {\n        return this.err.code;\n    }\n    /**\n     * Retrieve underlying data info\n     * @returns data info\n     */\n    getData() {\n        return this.err.data;\n    }\n}\n//# sourceMappingURL=RPCError.js.map","/**\n * Error code that may occur during WalletAPI server communication\n * @enum\n */\nexport var RpcErrorCode;\n(function (RpcErrorCode) {\n    /**\n     * Invalid JSON was received by the server.\n     * or An error occurred on the server while parsing the JSON text.\n     */\n    RpcErrorCode[RpcErrorCode[\"PARSE_ERROR\"] = -32700] = \"PARSE_ERROR\";\n    /**\n     * The JSON sent is not a valid Request object.\n     */\n    RpcErrorCode[RpcErrorCode[\"INVALID_REQUEST\"] = -32600] = \"INVALID_REQUEST\";\n    /**\n     * The method does not exist / is not available.\n     */\n    RpcErrorCode[RpcErrorCode[\"METHOD_NOT_FOUND\"] = -32601] = \"METHOD_NOT_FOUND\";\n    /**\n     * Invalid method parameter(s).\n     */\n    RpcErrorCode[RpcErrorCode[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n    /**\n     * Internal JSON-RPC error.\n     */\n    RpcErrorCode[RpcErrorCode[\"INTERNAL_ERROR\"] = -32603] = \"INTERNAL_ERROR\";\n    /**\n     * Reserved for implementation-defined server-errors.\n     */\n    RpcErrorCode[RpcErrorCode[\"SERVER_ERROR\"] = -32000] = \"SERVER_ERROR\";\n})(RpcErrorCode || (RpcErrorCode = {}));\n//# sourceMappingURL=types.js.map","import { z } from \"zod\";\nconst schemaRPCId = z.union([z.string(), z.number(), z.null()]);\nexport const schemaRPCRequest = z\n    .object({\n    jsonrpc: z.literal(\"2.0\"),\n    method: z.string(),\n    params: z.any(),\n    id: schemaRPCId.optional(),\n})\n    .strict();\nexport const schemaRPCResponseErrorData = z\n    .object({\n    code: z.number(),\n    message: z.string(),\n    data: z.any().optional(),\n})\n    .strict();\nexport const schemaRPCResponseSuccess = z\n    .object({\n    jsonrpc: z.literal(\"2.0\"),\n    id: schemaRPCId,\n    result: z.object({}).passthrough().optional(),\n})\n    .strict();\nexport const schemaRPCResponseError = z\n    .object({\n    jsonrpc: z.literal(\"2.0\"),\n    id: schemaRPCId,\n    error: schemaRPCResponseErrorData,\n})\n    .strict();\nexport const schemaRPCResponse = z.union([\n    schemaRPCResponseError,\n    schemaRPCResponseSuccess,\n]);\nexport const schemaRPCCall = z.union([schemaRPCRequest, schemaRPCResponse]);\n//# sourceMappingURL=validation.js.map","import { z } from \"zod\";\nimport { RpcError } from \"./RPCError\";\nimport { RpcErrorCode, } from \"./types\";\nimport { schemaRPCCall } from \"./validation\";\nexport function parseRPCCall(data) {\n    try {\n        const parsedData = JSON.parse(data);\n        const rpcCall = schemaRPCCall.parse(parsedData);\n        return rpcCall;\n    }\n    catch (error) {\n        if (error instanceof SyntaxError) {\n            throw new RpcError({\n                code: RpcErrorCode.PARSE_ERROR,\n                message: \"parse error\",\n            });\n        }\n        if (error instanceof z.ZodError) {\n            throw new RpcError({\n                code: RpcErrorCode.INVALID_REQUEST,\n                message: \"invalid request\",\n            });\n        }\n        throw error;\n    }\n}\nexport function createRpcRequest(params) {\n    return {\n        jsonrpc: \"2.0\",\n        ...params,\n    };\n}\nexport function createRpcResponse(params) {\n    return {\n        jsonrpc: \"2.0\",\n        ...params,\n    };\n}\n//# sourceMappingURL=helpers.js.map","/* eslint-disable no-continue */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\nconst errorClasses = {};\nconst deserializers = {};\nexport const addCustomErrorDeserializer = (name, deserializer) => {\n    deserializers[name] = deserializer;\n};\nexport const createCustomErrorClass = (name) => {\n    class CustomErrorClass extends Error {\n        constructor(message, fields, options) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            super(message || name, options);\n            // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n            Object.setPrototypeOf(this, CustomErrorClass.prototype);\n            this.name = name;\n            if (fields) {\n                for (const k in fields) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    this[k] = fields[k];\n                }\n            }\n            if (options && isObject(options) && \"cause\" in options && !(\"cause\" in this)) {\n                // .cause was specified but the superconstructor\n                // did not create an instance property.\n                const cause = options.cause;\n                this.cause = cause;\n                if (\"stack\" in cause) {\n                    this.stack = this.stack + \"\\nCAUSE: \" + cause.stack;\n                }\n            }\n        }\n    }\n    errorClasses[name] = CustomErrorClass;\n    return CustomErrorClass;\n};\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n// inspired from https://github.com/programble/errio/blob/master/index.js\nexport const deserializeError = (object) => {\n    if (object && typeof object === \"object\") {\n        try {\n            if (typeof object.message === \"string\") {\n                const msg = JSON.parse(object.message);\n                if (msg.message && msg.name) {\n                    object = msg;\n                }\n            }\n        }\n        catch (e) {\n            // nothing\n        }\n        let error;\n        if (typeof object.name === \"string\") {\n            const { name } = object;\n            const des = deserializers[name];\n            if (des) {\n                error = des(object);\n            }\n            else {\n                let constructor = name === \"Error\" ? Error : errorClasses[name];\n                if (!constructor) {\n                    console.warn(\"deserializing an unknown class '\" + name + \"'\");\n                    constructor = createCustomErrorClass(name);\n                }\n                error = Object.create(constructor.prototype);\n                try {\n                    for (const prop in object) {\n                        if (object.hasOwnProperty(prop)) {\n                            error[prop] = object[prop];\n                        }\n                    }\n                }\n                catch (e) {\n                    // sometimes setting a property can fail (e.g. .name)\n                }\n            }\n        }\n        else {\n            if (typeof object.message === \"string\") {\n                error = new Error(object.message);\n            }\n        }\n        if (error && !error.stack && Error.captureStackTrace) {\n            Error.captureStackTrace(error, deserializeError);\n        }\n        return error;\n    }\n    return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nexport const serializeError = (value) => {\n    if (!value)\n        return value;\n    if (typeof value === \"object\") {\n        return destroyCircular(value, []);\n    }\n    if (typeof value === \"function\") {\n        return `[Function: ${value.name || \"anonymous\"}]`;\n    }\n    return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n    const to = {};\n    seen.push(from);\n    for (const key of Object.keys(from)) {\n        const value = from[key];\n        if (typeof value === \"function\") {\n            continue;\n        }\n        if (!value || typeof value !== \"object\") {\n            to[key] = value;\n            continue;\n        }\n        if (seen.indexOf(from[key]) === -1) {\n            to[key] = destroyCircular(from[key], seen.slice(0));\n            continue;\n        }\n        to[key] = \"[Circular]\";\n    }\n    if (typeof from.name === \"string\") {\n        to.name = from.name;\n    }\n    if (typeof from.message === \"string\") {\n        to.message = from.message;\n    }\n    if (typeof from.stack === \"string\") {\n        to.stack = from.stack;\n    }\n    return to;\n}\n//# sourceMappingURL=helpers.js.map","import { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer, } from \"./helpers\";\nexport { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer };\nexport const AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nexport const AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nexport const ClaimRewardsFeesWarning = createCustomErrorClass(\"ClaimRewardsFeesWarning\");\nexport const CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nexport const DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const DeviceNeedsRestart = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const UnresponsiveDeviceError = createCustomErrorClass(\"UnresponsiveDeviceError\");\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\nexport const DeviceExtractOnboardingStateError = createCustomErrorClass(\"DeviceExtractOnboardingStateError\");\nexport const DeviceOnboardingStatePollingError = createCustomErrorClass(\"DeviceOnboardingStatePollingError\");\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nexport const FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nexport const FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidNonce = createCustomErrorClass(\"InvalidNonce\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nexport const LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nexport const LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\nexport const ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NetworkError = createCustomErrorClass(\"NetworkError\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\n// Error message specifically for the PTX swap flow\nexport const NotEnoughGasSwap = createCustomErrorClass(\"NotEnoughGasSwap\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nexport const GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nexport const PriorityFeeTooLow = createCustomErrorClass(\"PriorityFeeTooLow\");\nexport const PriorityFeeTooHigh = createCustomErrorClass(\"PriorityFeeTooHigh\");\nexport const PriorityFeeHigherThanMaxFee = createCustomErrorClass(\"PriorityFeeHigherThanMaxFee\");\nexport const MaxFeeTooLow = createCustomErrorClass(\"MaxFeeTooLow\");\nexport const PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nexport const PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nexport const RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\nexport const UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nexport const UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nexport const UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nexport const UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nexport const UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nexport const ExpertModeRequired = createCustomErrorClass(\"ExpertModeRequired\");\nexport const TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\nexport const TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\nexport const TransactionHasBeenValidatedError = createCustomErrorClass(\"TransactionHasBeenValidatedError\");\nexport const TransportExchangeTimeoutError = createCustomErrorClass(\"TransportExchangeTimeoutError\");\nexport const DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nexport const WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nexport const WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nexport const WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nexport const WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeNotLoadedSwap = createCustomErrorClass(\"FeeNotLoadedSwap\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const PendingOperation = createCustomErrorClass(\"PendingOperation\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const PeerRemovedPairing = createCustomErrorClass(\"PeerRemovedPairing\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\n// SpeedUp / Cancel EVM tx\nexport const ReplacementTransactionUnderpriced = createCustomErrorClass(\"ReplacementTransactionUnderpriced\");\n// Bitcoin family\nexport const OpReturnDataSizeLimit = createCustomErrorClass(\"OpReturnSizeLimit\");\nexport const DustLimit = createCustomErrorClass(\"DustLimit\");\n// Language\nexport const LanguageNotFound = createCustomErrorClass(\"LanguageNotFound\");\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nexport var HwTransportErrorType;\n(function (HwTransportErrorType) {\n    HwTransportErrorType[\"Unknown\"] = \"Unknown\";\n    HwTransportErrorType[\"LocationServicesDisabled\"] = \"LocationServicesDisabled\";\n    HwTransportErrorType[\"LocationServicesUnauthorized\"] = \"LocationServicesUnauthorized\";\n    HwTransportErrorType[\"BluetoothScanStartFailed\"] = \"BluetoothScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nexport class HwTransportError extends Error {\n    constructor(type, message) {\n        super(message);\n        this.name = \"HwTransportError\";\n        this.type = type;\n        // Needed as long as we target < ES6\n        Object.setPrototypeOf(this, HwTransportError.prototype);\n    }\n}\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport class TransportError extends Error {\n    constructor(message, id) {\n        const name = \"TransportError\";\n        super(message || name);\n        this.name = name;\n        this.message = message;\n        this.stack = new Error(message).stack;\n        this.id = id;\n    }\n}\naddCustomErrorDeserializer(\"TransportError\", e => new TransportError(e.message, e.id));\nexport const StatusCodes = {\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\n    CLA_NOT_SUPPORTED: 0x6e00,\n    CODE_BLOCKED: 0x9840,\n    CODE_NOT_INITIALIZED: 0x9802,\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n    CONTRADICTION_INVALIDATION: 0x9810,\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n    CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n    CUSTOM_IMAGE_EMPTY: 0x662e,\n    FILE_ALREADY_EXISTS: 0x6a89,\n    FILE_NOT_FOUND: 0x9404,\n    GP_AUTH_FAILED: 0x6300,\n    HALTED: 0x6faa,\n    INCONSISTENT_FILE: 0x9408,\n    INCORRECT_DATA: 0x6a80,\n    INCORRECT_LENGTH: 0x6700,\n    INCORRECT_P1_P2: 0x6b00,\n    INS_NOT_SUPPORTED: 0x6d00,\n    DEVICE_NOT_ONBOARDED: 0x6d07,\n    DEVICE_NOT_ONBOARDED_2: 0x6611,\n    INVALID_KCV: 0x9485,\n    INVALID_OFFSET: 0x9402,\n    LICENSING: 0x6f42,\n    LOCKED_DEVICE: 0x5515,\n    MAX_VALUE_REACHED: 0x9850,\n    MEMORY_PROBLEM: 0x9240,\n    MISSING_CRITICAL_PARAMETER: 0x6800,\n    NO_EF_SELECTED: 0x9400,\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n    OK: 0x9000,\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n    TECHNICAL_PROBLEM: 0x6f00,\n    UNKNOWN_APDU: 0x6d02,\n    USER_REFUSED_ON_DEVICE: 0x5501,\n    NOT_ENOUGH_SPACE: 0x5102,\n};\nexport function getAltStatusMessage(code) {\n    switch (code) {\n        // improve text of most common errors\n        case 0x6700:\n            return \"Incorrect length\";\n        case 0x6800:\n            return \"Missing critical parameter\";\n        case 0x6982:\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\n        case 0x6985:\n            return \"Condition of use not satisfied (denied by the user?)\";\n        case 0x6a80:\n            return \"Invalid data received\";\n        case 0x6b00:\n            return \"Invalid parameter received\";\n        case 0x5515:\n            return \"Locked device\";\n    }\n    if (0x6f00 <= code && code <= 0x6fff) {\n        return \"Internal error, please report\";\n    }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport class TransportStatusError extends Error {\n    /**\n     * @param statusCode The error status code coming from a Transport implementation\n     * @param options containing:\n     *  - canBeMappedToChildError: enable the mapping of TransportStatusError to an error extending/inheriting from it\n     *  . Ex: LockedDeviceError. Default to true.\n     */\n    constructor(statusCode, { canBeMappedToChildError = true } = {}) {\n        const statusText = Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n        const smsg = getAltStatusMessage(statusCode) || statusText;\n        const statusCodeStr = statusCode.toString(16);\n        const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n        super(message);\n        this.name = \"TransportStatusError\";\n        this.statusCode = statusCode;\n        this.statusText = statusText;\n        Object.setPrototypeOf(this, TransportStatusError.prototype);\n        // Maps to a LockedDeviceError\n        if (canBeMappedToChildError && statusCode === StatusCodes.LOCKED_DEVICE) {\n            return new LockedDeviceError(message);\n        }\n    }\n}\nexport class LockedDeviceError extends TransportStatusError {\n    constructor(message) {\n        super(StatusCodes.LOCKED_DEVICE, { canBeMappedToChildError: false });\n        if (message) {\n            this.message = message;\n        }\n        this.name = \"LockedDeviceError\";\n        Object.setPrototypeOf(this, LockedDeviceError.prototype);\n    }\n}\naddCustomErrorDeserializer(\"TransportStatusError\", e => new TransportStatusError(e.statusCode));\n//# sourceMappingURL=index.js.map","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { deserializeError, serializeError } from \"@ledgerhq/errors\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { z } from \"zod\";\nimport { ServerError, createUnknownError, schemaServerErrorData, } from \"../errors\";\nimport { RpcError } from \"./RPCError\";\nimport { createRpcResponse, parseRPCCall } from \"./helpers\";\nimport { RpcErrorCode } from \"./types\";\nexport class RpcNode {\n    transport;\n    requestHandlers;\n    ongoingRequests = {};\n    constructor(transport, requestHandlers) {\n        this.transport = transport;\n        this.requestHandlers = requestHandlers;\n        this.transport.onMessage = (message) => {\n            void this.handleMessage(message);\n        };\n    }\n    _request(request) {\n        return new Promise((resolve, reject) => {\n            if (!request.id) {\n                reject(new Error(\"requests need to have an id\"));\n                return;\n            }\n            const resolver = (response) => {\n                if (\"error\" in response) {\n                    if (response.error.code === RpcErrorCode.SERVER_ERROR) {\n                        const serverErrorData = schemaServerErrorData.parse(response.error.data);\n                        if (serverErrorData.code === \"UNKNOWN_ERROR\") {\n                            reject(deserializeError(serverErrorData.data));\n                            return;\n                        }\n                        reject(new ServerError(serverErrorData));\n                        return;\n                    }\n                    reject(new RpcError(response.error));\n                    return;\n                }\n                resolve(response.result);\n            };\n            this.ongoingRequests[request.id] = resolver;\n            this.transport.send(JSON.stringify(request));\n        });\n    }\n    _notify(request) {\n        this.transport.send(JSON.stringify(request));\n    }\n    request(method, params) {\n        const requestId = uuidv4();\n        return this._request({\n            id: requestId,\n            jsonrpc: \"2.0\",\n            method,\n            params,\n        });\n    }\n    notify(method, params) {\n        return this._notify({\n            jsonrpc: \"2.0\",\n            method,\n            params,\n        });\n    }\n    async handleRpcRequest(request) {\n        try {\n            const result = await this.onRequest(request);\n            if (request.id) {\n                const response = createRpcResponse({\n                    id: request.id,\n                    result,\n                });\n                this.transport.send(JSON.stringify(response));\n            }\n        }\n        catch (error) {\n            if (error instanceof z.ZodError) {\n                throw new RpcError({\n                    code: RpcErrorCode.INVALID_PARAMS,\n                    message: error.message,\n                    data: error.flatten(),\n                });\n            }\n            if (error instanceof ServerError) {\n                throw new RpcError({\n                    code: RpcErrorCode.SERVER_ERROR,\n                    message: \"unexpected server error\",\n                    data: error.getData(),\n                });\n            }\n            if (error instanceof RpcError) {\n                throw error;\n            }\n            let serializedError = serializeError(error);\n            serializedError =\n                typeof serializedError === \"string\" || !serializedError\n                    ? { message: serializedError }\n                    : serializedError;\n            throw new RpcError({\n                code: RpcErrorCode.SERVER_ERROR,\n                message: \"unexpected server error\",\n                data: createUnknownError(serializedError),\n            });\n        }\n    }\n    async handleMessage(message) {\n        let isResponse = false;\n        let callId;\n        try {\n            const rpcCall = parseRPCCall(message);\n            callId = rpcCall.id;\n            if (\"method\" in rpcCall) {\n                // message is a request\n                await this.handleRpcRequest(rpcCall);\n            }\n            else {\n                // message is a response\n                isResponse = true;\n                this.handleRpcResponse(rpcCall);\n            }\n        }\n        catch (error) {\n            if (isResponse) {\n                throw error;\n            }\n            if (error instanceof RpcError) {\n                const errorResponse = createRpcResponse({\n                    id: callId ?? null,\n                    error: {\n                        code: error.getCode(),\n                        message: error.message,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        data: error.getData(),\n                    },\n                });\n                this.transport.send(JSON.stringify(errorResponse));\n                return;\n            }\n            // TODO handle no RpcError (that should not happen btw)\n            throw error;\n        }\n    }\n    handleRpcResponse(response) {\n        if (!response.id) {\n            return;\n        }\n        const resolver = this.ongoingRequests[response.id];\n        if (!resolver) {\n            throw new Error(`no ongoingRequest ${response.id}`);\n        }\n        resolver(response);\n    }\n}\n//# sourceMappingURL=RpcNode.js.map","import { z } from \"zod\";\nimport { schemaRawAccount } from \"../../accounts\";\nconst schemaAccountListParams = z\n    .object({\n    currencyIds: z.array(z.string()).optional(),\n})\n    .optional();\nconst schemaAccountListResults = z.object({\n    rawAccounts: z.array(schemaRawAccount),\n});\nexport const schemaAccountList = {\n    params: schemaAccountListParams,\n    result: schemaAccountListResults,\n};\n//# sourceMappingURL=AccountList.js.map","import { z } from \"zod\";\nconst schemaAccountReceiveParams = z.object({\n    accountId: z.string(),\n    tokenCurrency: z.string().optional(),\n});\nconst schemaAccountReceiveResults = z.object({\n    address: z.string(),\n});\nexport const schemaAccountReceive = {\n    params: schemaAccountReceiveParams,\n    result: schemaAccountReceiveResults,\n};\n//# sourceMappingURL=AccountReceive.js.map","import { z } from \"zod\";\nimport { schemaRawAccount } from \"../../accounts\";\nconst schemaAccountRequestParams = z.object({\n    currencyIds: z.array(z.string()).optional(),\n});\nconst schemaAccountRequestResults = z.object({\n    rawAccount: schemaRawAccount,\n});\nexport const schemaAccountRequest = {\n    params: schemaAccountRequestParams,\n    result: schemaAccountRequestResults,\n};\n//# sourceMappingURL=AccountRequest.js.map","import { z } from \"zod\";\nconst schemaBitcoinGetAddressParams = z.object({\n    accountId: z.string(),\n    derivationPath: z.string().optional(),\n});\nconst schemaBitcoinGetAddressResults = z.object({\n    address: z.string(),\n});\nexport const schemaBitcoinGetAddress = {\n    params: schemaBitcoinGetAddressParams,\n    result: schemaBitcoinGetAddressResults,\n};\n//# sourceMappingURL=BitcoinGetAddress.js.map","import { z } from \"zod\";\nconst schemaBitcoinGetPublicKeyParams = z.object({\n    accountId: z.string(),\n    derivationPath: z.string().optional(),\n});\nconst schemaBitcoinGetPublicKeyResults = z.object({\n    publicKey: z.string(),\n});\nexport const schemaBitcoinGetPublicKey = {\n    params: schemaBitcoinGetPublicKeyParams,\n    result: schemaBitcoinGetPublicKeyResults,\n};\n//# sourceMappingURL=BitcoinGetPublicKey.js.map","import { z } from \"zod\";\nconst schemaBitcoinGetXPubParams = z.object({\n    accountId: z.string(),\n});\nconst schemaBitcoinGetXPubResults = z.object({\n    xPub: z.string(),\n});\nexport const schemaBitcoinGetXPub = {\n    params: schemaBitcoinGetXPubParams,\n    result: schemaBitcoinGetXPubResults,\n};\n//# sourceMappingURL=BitcoinGetXPub.js.map","import { z } from \"zod\";\nimport { schemaCurrency } from \"../../currencies\";\nconst schemaCurrencyListParams = z\n    .object({\n    currencyIds: z.array(z.string()).optional(),\n})\n    .optional();\nconst schemaCurrencyListResult = z.object({\n    currencies: z.array(schemaCurrency),\n});\nexport const schemaCurrencyList = {\n    params: schemaCurrencyListParams,\n    result: schemaCurrencyListResult,\n};\n//# sourceMappingURL=CurrencyList.js.map","import { z } from \"zod\";\nexport const schemaDeviceType = z.enum([\n    \"blue\",\n    \"nanoS\",\n    \"nanoSP\",\n    \"nanoX\",\n    \"stax\",\n    \"europa\",\n]);\n//# sourceMappingURL=Device.js.map","import { z } from \"zod\";\nconst schemaDeviceCloseParams = z.object({\n    transportId: z.string(),\n});\nconst schemaDeviceCloseResults = z.object({\n    transportId: z.string(),\n});\nexport const schemaDeviceClose = {\n    params: schemaDeviceCloseParams,\n    result: schemaDeviceCloseResults,\n};\n//# sourceMappingURL=DeviceClose.js.map","import { z } from \"zod\";\nconst schemaDeviceExchangeParams = z.object({\n    apduHex: z.string(),\n    transportId: z.string(),\n});\nconst schemaDeviceExchangeResults = z.object({\n    responseHex: z.string(),\n});\nexport const schemaDeviceExchange = {\n    params: schemaDeviceExchangeParams,\n    result: schemaDeviceExchangeResults,\n};\n//# sourceMappingURL=DeviceExchange.js.map","import { z } from \"zod\";\nconst schemaDeviceOpenParams = z.object({\n    /** ID of the device to select */\n    deviceId: z.string(),\n});\nconst schemaDeviceOpenResults = z.object({\n    transportId: z.string(),\n});\nexport const schemaDeviceOpen = {\n    params: schemaDeviceOpenParams,\n    result: schemaDeviceOpenResults,\n};\n//# sourceMappingURL=DeviceOpen.js.map","import { z } from \"zod\";\nimport { schemaDeviceType } from \"./Device\";\nconst schemaDeviceSelectParams = z.object({\n    /** Select the BOLOS App. If undefined selects BOLOS */\n    appName: z.string().optional(),\n    /**\n     * Checks the BOLOS App version range. If undefined no checks\n     * Can be any ranges supported here: https://github.com/npm/node-semver#ranges\n     */\n    appVersionRange: z.string().optional(),\n    /**\n     * Checks the BOLOS Firmware version range. If undefined no checks\n     * Can be any ranges supported here: https://github.com/npm/node-semver#ranges\n     */\n    firmwareVersionRange: z.string().optional(),\n    /**\n     * Checks if the device is seeded. If undefined no checks\n     */\n    seeded: z.boolean().optional(),\n    /**\n     * Checks if the device matches one of the types. If undefined no checks\n     */\n    devices: schemaDeviceType.array().nonempty().optional(),\n});\nconst schemaDeviceSelectResults = z.object({\n    deviceId: z.string(),\n});\nexport const schemaDeviceSelect = {\n    params: schemaDeviceSelectParams,\n    result: schemaDeviceSelectResults,\n};\n//# sourceMappingURL=DeviceSelect.js.map","import { z } from \"zod\";\nimport { schemaDeviceType } from \"./Device\";\nconst schemaDeviceTransportParams = z.object({\n    /** Select the BOLOS App. If undefined selects BOLOS */\n    appName: z.string().optional(),\n    /**\n     * Checks the BOLOS App version range. If undefined no checks\n     * Can be any ranges supported here: https://github.com/npm/node-semver#ranges\n     */\n    appVersionRange: z.string().optional(),\n    /**\n     * Checks the BOLOS Firmware version range. If undefined no checks\n     * Can be any ranges supported here: https://github.com/npm/node-semver#ranges\n     */\n    firmwareVersionRange: z.string().optional(),\n    /**\n     * Checks if the device is seeded. If undefined no checks\n     */\n    seeded: z.boolean().optional(),\n    /**\n     * Checks if the device matches one of the types. If undefined no checks\n     */\n    devices: schemaDeviceType.array().nonempty().optional(),\n});\nconst schemaDeviceTransportResults = z.object({\n    transportId: z.string(),\n});\nexport const schemaDeviceTransport = {\n    params: schemaDeviceTransportParams,\n    result: schemaDeviceTransportResults,\n};\n//# sourceMappingURL=DeviceTransport.js.map","import { z } from \"zod\";\nimport { schemaRawTransaction } from \"../../families\";\nconst schemaFeeStrategyType = z.enum([\"SLOW\", \"MEDIUM\", \"FAST\", \"CUSTOM\"]);\nconst schemaExchangeCompleteBaseParams = z.object({\n    provider: z.string(),\n    fromAccountId: z.string(),\n    rawTransaction: schemaRawTransaction,\n    hexBinaryPayload: z.string(),\n    hexSignature: z.string(),\n    feeStrategy: schemaFeeStrategyType,\n    tokenCurrency: z.string().optional(),\n});\nconst schemaExchangeCompleteFundParams = schemaExchangeCompleteBaseParams.extend({\n    exchangeType: z.literal(\"FUND\"),\n});\nconst schemaExchangeCompleteSellParams = schemaExchangeCompleteBaseParams.extend({\n    exchangeType: z.literal(\"SELL\"),\n});\nconst schemaExchangeCompleteSwapParams = schemaExchangeCompleteBaseParams.extend({\n    exchangeType: z.literal(\"SWAP\"),\n    toAccountId: z.string(),\n    swapId: z.string(),\n    rate: z.number(),\n});\nconst schemaExchangeCompleteParams = z.discriminatedUnion(\"exchangeType\", [\n    schemaExchangeCompleteFundParams,\n    schemaExchangeCompleteSellParams,\n    schemaExchangeCompleteSwapParams,\n]);\nconst schemaExchangeCompleteResults = z.object({\n    transactionHash: z.string(),\n});\nexport const schemaExchangeComplete = {\n    params: schemaExchangeCompleteParams,\n    result: schemaExchangeCompleteResults,\n};\n//# sourceMappingURL=ExchangeComplete.js.map","import { z } from \"zod\";\nconst schemaExchangeType = z.enum([\n    \"SWAP\",\n    \"SELL\",\n    \"FUND\",\n    \"SWAP_NG\",\n    \"SELL_NG\",\n    \"FUND_NG\",\n]);\nconst schemaExchangeStartParams = z.object({\n    exchangeType: schemaExchangeType,\n});\nconst schemaExchangeStartResults = z.object({\n    transactionId: z.string(),\n});\nexport const schemaExchangeStart = {\n    params: schemaExchangeStartParams,\n    result: schemaExchangeStartResults,\n};\n//# sourceMappingURL=ExchangeStart.js.map","import { z } from \"zod\";\nconst schemaMessageSignParams = z.object({\n    accountId: z.string(),\n    hexMessage: z.string(),\n    meta: z.record(z.string(), z.unknown()).optional(),\n});\nconst schemaMessageSignResults = z.object({\n    hexSignedMessage: z.string(),\n});\nexport const schemaMessageSign = {\n    params: schemaMessageSignParams,\n    result: schemaMessageSignResults,\n};\n//# sourceMappingURL=MessageSign.js.map","import { z } from \"zod\";\nconst schemaStorageGetParams = z.object({\n    key: z.string().min(1),\n    storeId: z.string().min(1).optional(),\n});\nconst schemaStorageGetResults = z.object({\n    value: z.string().optional(),\n});\nexport const schemaStorageGet = {\n    params: schemaStorageGetParams,\n    result: schemaStorageGetResults,\n};\n//# sourceMappingURL=StorageGet.js.map","import { z } from \"zod\";\nconst schemaStorageSetParams = z.object({\n    key: z.string(),\n    value: z.string(),\n    storeId: z.string().optional(),\n});\nconst schemaStorageSetResults = z.void().optional();\nexport const schemaStorageSet = {\n    params: schemaStorageSetParams,\n    result: schemaStorageSetResults,\n};\n//# sourceMappingURL=StorageSet.js.map","import { z } from \"zod\";\nimport { schemaRawTransaction } from \"../../families\";\nconst schemaTransactionOptions = z.object({\n    hwAppId: z.string().optional(),\n    dependencies: z.array(z.string()).optional(),\n});\nconst schemaTransactionSignParams = z.object({\n    accountId: z.string(),\n    rawTransaction: schemaRawTransaction,\n    options: schemaTransactionOptions.optional(),\n    meta: z.record(z.string(), z.unknown()).optional(),\n    tokenCurrency: z.string().optional(),\n});\nconst schemaTransactionSignResults = z.object({\n    signedTransactionHex: z.string(),\n});\nexport const schemaTransactionSign = {\n    params: schemaTransactionSignParams,\n    result: schemaTransactionSignResults,\n};\n//# sourceMappingURL=TransactionSign.js.map","import { z } from \"zod\";\nimport { schemaRawTransaction } from \"../../families\";\nconst schemaTransactionOptions = z.object({\n    hwAppId: z.string().optional(),\n    dependencies: z.array(z.string()).optional(),\n});\nconst schemaTransactionSignAndBroadcastParams = z.object({\n    accountId: z.string(),\n    rawTransaction: schemaRawTransaction,\n    options: schemaTransactionOptions.optional(),\n    meta: z.record(z.string(), z.unknown()).optional(),\n    tokenCurrency: z.string().optional(),\n});\nconst schemaTransactionSignAndBroadcastResults = z.object({\n    transactionHash: z.string(),\n});\nexport const schemaTransactionSignAndBroadcast = {\n    params: schemaTransactionSignAndBroadcastParams,\n    result: schemaTransactionSignAndBroadcastResults,\n};\n//# sourceMappingURL=TransactionSignAndBroadcast.js.map","import { z } from \"zod\";\nconst schemaWalletCapabilitiesParams = z.object({});\nconst schemaWalletCapabilitiesResults = z.object({\n    methodIds: z.array(z.string()),\n});\nexport const schemaWalletCapabilities = {\n    params: schemaWalletCapabilitiesParams,\n    result: schemaWalletCapabilitiesResults,\n};\n//# sourceMappingURL=WalletCapabilities.js.map","import { z } from \"zod\";\nconst schemaWalletInfoParams = z.object({});\nconst schemaWalletInfoResults = z.object({\n    tracking: z.boolean(),\n    wallet: z.object({\n        name: z.string(),\n        version: z.string(),\n    }),\n});\nexport const schemaWalletInfo = {\n    params: schemaWalletInfoParams,\n    result: schemaWalletInfoResults,\n};\n//# sourceMappingURL=WalletInfo.js.map","import { z } from \"zod\";\nconst schemaWalletUserIdParams = z.object({});\nconst schemaWalletUserIdResults = z.object({\n    userId: z.string(),\n});\nexport const schemaWalletUserId = {\n    params: schemaWalletUserIdParams,\n    result: schemaWalletUserIdResults,\n};\n//# sourceMappingURL=WalletUserId.js.map","import { z } from \"zod\";\nexport const schemaRPCMethod = z.enum([\n    \"account.list\",\n    \"account.receive\",\n    \"account.request\",\n    \"currency.list\",\n    \"device.close\",\n    \"device.exchange\",\n    \"device.transport\",\n    \"message.sign\",\n    \"transaction.sign\",\n    \"transaction.signAndBroadcast\",\n    \"wallet.capabilities\",\n    \"wallet.info\",\n    \"wallet.userId\",\n]);\n//# sourceMappingURL=methods.js.map","/* eslint-disable no-continue */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\nconst errorClasses = {};\nconst deserializers = {};\nexport const addCustomErrorDeserializer = (name, deserializer) => {\n    deserializers[name] = deserializer;\n};\nexport const createCustomErrorClass = (name) => {\n    class CustomErrorClass extends Error {\n        constructor(message, fields, options) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            super(message || name, options);\n            // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n            Object.setPrototypeOf(this, CustomErrorClass.prototype);\n            this.name = name;\n            if (fields) {\n                for (const k in fields) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    this[k] = fields[k];\n                }\n            }\n            if (options && isObject(options) && \"cause\" in options && !(\"cause\" in this)) {\n                // .cause was specified but the superconstructor\n                // did not create an instance property.\n                const cause = options.cause;\n                this.cause = cause;\n                if (\"stack\" in cause) {\n                    this.stack = this.stack + \"\\nCAUSE: \" + cause.stack;\n                }\n            }\n        }\n    }\n    errorClasses[name] = CustomErrorClass;\n    return CustomErrorClass;\n};\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n// inspired from https://github.com/programble/errio/blob/master/index.js\nexport const deserializeError = (object) => {\n    if (object && typeof object === \"object\") {\n        try {\n            if (typeof object.message === \"string\") {\n                const msg = JSON.parse(object.message);\n                if (msg.message && msg.name) {\n                    object = msg;\n                }\n            }\n        }\n        catch (e) {\n            // nothing\n        }\n        let error;\n        if (typeof object.name === \"string\") {\n            const { name } = object;\n            const des = deserializers[name];\n            if (des) {\n                error = des(object);\n            }\n            else {\n                let constructor = name === \"Error\" ? Error : errorClasses[name];\n                if (!constructor) {\n                    console.warn(\"deserializing an unknown class '\" + name + \"'\");\n                    constructor = createCustomErrorClass(name);\n                }\n                error = Object.create(constructor.prototype);\n                try {\n                    for (const prop in object) {\n                        if (object.hasOwnProperty(prop)) {\n                            error[prop] = object[prop];\n                        }\n                    }\n                }\n                catch (e) {\n                    // sometimes setting a property can fail (e.g. .name)\n                }\n            }\n        }\n        else {\n            if (typeof object.message === \"string\") {\n                error = new Error(object.message);\n            }\n        }\n        if (error && !error.stack && Error.captureStackTrace) {\n            Error.captureStackTrace(error, deserializeError);\n        }\n        return error;\n    }\n    return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nexport const serializeError = (value) => {\n    if (!value)\n        return value;\n    if (typeof value === \"object\") {\n        return destroyCircular(value, []);\n    }\n    if (typeof value === \"function\") {\n        return `[Function: ${value.name || \"anonymous\"}]`;\n    }\n    return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n    const to = {};\n    seen.push(from);\n    for (const key of Object.keys(from)) {\n        const value = from[key];\n        if (typeof value === \"function\") {\n            continue;\n        }\n        if (!value || typeof value !== \"object\") {\n            to[key] = value;\n            continue;\n        }\n        if (seen.indexOf(from[key]) === -1) {\n            to[key] = destroyCircular(from[key], seen.slice(0));\n            continue;\n        }\n        to[key] = \"[Circular]\";\n    }\n    if (typeof from.name === \"string\") {\n        to.name = from.name;\n    }\n    if (typeof from.message === \"string\") {\n        to.message = from.message;\n    }\n    if (typeof from.stack === \"string\") {\n        to.stack = from.stack;\n    }\n    return to;\n}\n//# sourceMappingURL=helpers.js.map","import { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer, } from \"./helpers\";\nexport { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer };\nexport const AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nexport const AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nexport const ClaimRewardsFeesWarning = createCustomErrorClass(\"ClaimRewardsFeesWarning\");\nexport const CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nexport const DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const DeviceNeedsRestart = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const UnresponsiveDeviceError = createCustomErrorClass(\"UnresponsiveDeviceError\");\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\nexport const DeviceExtractOnboardingStateError = createCustomErrorClass(\"DeviceExtractOnboardingStateError\");\nexport const DeviceOnboardingStatePollingError = createCustomErrorClass(\"DeviceOnboardingStatePollingError\");\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nexport const FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nexport const FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidNonce = createCustomErrorClass(\"InvalidNonce\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nexport const LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nexport const LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\nexport const ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NetworkError = createCustomErrorClass(\"NetworkError\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\n// Error message specifically for the PTX swap flow\nexport const NotEnoughGasSwap = createCustomErrorClass(\"NotEnoughGasSwap\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nexport const GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nexport const PriorityFeeTooLow = createCustomErrorClass(\"PriorityFeeTooLow\");\nexport const PriorityFeeTooHigh = createCustomErrorClass(\"PriorityFeeTooHigh\");\nexport const PriorityFeeHigherThanMaxFee = createCustomErrorClass(\"PriorityFeeHigherThanMaxFee\");\nexport const MaxFeeTooLow = createCustomErrorClass(\"MaxFeeTooLow\");\nexport const PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nexport const PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nexport const RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\nexport const UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nexport const UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nexport const UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nexport const UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nexport const UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nexport const ExpertModeRequired = createCustomErrorClass(\"ExpertModeRequired\");\nexport const TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\nexport const TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\nexport const TransactionHasBeenValidatedError = createCustomErrorClass(\"TransactionHasBeenValidatedError\");\nexport const TransportExchangeTimeoutError = createCustomErrorClass(\"TransportExchangeTimeoutError\");\nexport const DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nexport const WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nexport const WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nexport const WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nexport const WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeNotLoadedSwap = createCustomErrorClass(\"FeeNotLoadedSwap\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const PendingOperation = createCustomErrorClass(\"PendingOperation\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const PeerRemovedPairing = createCustomErrorClass(\"PeerRemovedPairing\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\n// SpeedUp / Cancel EVM tx\nexport const ReplacementTransactionUnderpriced = createCustomErrorClass(\"ReplacementTransactionUnderpriced\");\n// Bitcoin family\nexport const OpReturnDataSizeLimit = createCustomErrorClass(\"OpReturnSizeLimit\");\nexport const DustLimit = createCustomErrorClass(\"DustLimit\");\n// Language\nexport const LanguageNotFound = createCustomErrorClass(\"LanguageNotFound\");\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nexport var HwTransportErrorType;\n(function (HwTransportErrorType) {\n    HwTransportErrorType[\"Unknown\"] = \"Unknown\";\n    HwTransportErrorType[\"LocationServicesDisabled\"] = \"LocationServicesDisabled\";\n    HwTransportErrorType[\"LocationServicesUnauthorized\"] = \"LocationServicesUnauthorized\";\n    HwTransportErrorType[\"BluetoothScanStartFailed\"] = \"BluetoothScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nexport class HwTransportError extends Error {\n    constructor(type, message) {\n        super(message);\n        this.name = \"HwTransportError\";\n        this.type = type;\n        // Needed as long as we target < ES6\n        Object.setPrototypeOf(this, HwTransportError.prototype);\n    }\n}\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport class TransportError extends Error {\n    constructor(message, id) {\n        const name = \"TransportError\";\n        super(message || name);\n        this.name = name;\n        this.message = message;\n        this.stack = new Error(message).stack;\n        this.id = id;\n    }\n}\naddCustomErrorDeserializer(\"TransportError\", e => new TransportError(e.message, e.id));\nexport const StatusCodes = {\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\n    CLA_NOT_SUPPORTED: 0x6e00,\n    CODE_BLOCKED: 0x9840,\n    CODE_NOT_INITIALIZED: 0x9802,\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n    CONTRADICTION_INVALIDATION: 0x9810,\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n    CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n    CUSTOM_IMAGE_EMPTY: 0x662e,\n    FILE_ALREADY_EXISTS: 0x6a89,\n    FILE_NOT_FOUND: 0x9404,\n    GP_AUTH_FAILED: 0x6300,\n    HALTED: 0x6faa,\n    INCONSISTENT_FILE: 0x9408,\n    INCORRECT_DATA: 0x6a80,\n    INCORRECT_LENGTH: 0x6700,\n    INCORRECT_P1_P2: 0x6b00,\n    INS_NOT_SUPPORTED: 0x6d00,\n    DEVICE_NOT_ONBOARDED: 0x6d07,\n    DEVICE_NOT_ONBOARDED_2: 0x6611,\n    INVALID_KCV: 0x9485,\n    INVALID_OFFSET: 0x9402,\n    LICENSING: 0x6f42,\n    LOCKED_DEVICE: 0x5515,\n    MAX_VALUE_REACHED: 0x9850,\n    MEMORY_PROBLEM: 0x9240,\n    MISSING_CRITICAL_PARAMETER: 0x6800,\n    NO_EF_SELECTED: 0x9400,\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n    OK: 0x9000,\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n    TECHNICAL_PROBLEM: 0x6f00,\n    UNKNOWN_APDU: 0x6d02,\n    USER_REFUSED_ON_DEVICE: 0x5501,\n    NOT_ENOUGH_SPACE: 0x5102,\n};\nexport function getAltStatusMessage(code) {\n    switch (code) {\n        // improve text of most common errors\n        case 0x6700:\n            return \"Incorrect length\";\n        case 0x6800:\n            return \"Missing critical parameter\";\n        case 0x6982:\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\n        case 0x6985:\n            return \"Condition of use not satisfied (denied by the user?)\";\n        case 0x6a80:\n            return \"Invalid data received\";\n        case 0x6b00:\n            return \"Invalid parameter received\";\n        case 0x5515:\n            return \"Locked device\";\n    }\n    if (0x6f00 <= code && code <= 0x6fff) {\n        return \"Internal error, please report\";\n    }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport class TransportStatusError extends Error {\n    /**\n     * @param statusCode The error status code coming from a Transport implementation\n     * @param options containing:\n     *  - canBeMappedToChildError: enable the mapping of TransportStatusError to an error extending/inheriting from it\n     *  . Ex: LockedDeviceError. Default to true.\n     */\n    constructor(statusCode, { canBeMappedToChildError = true } = {}) {\n        const statusText = Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n        const smsg = getAltStatusMessage(statusCode) || statusText;\n        const statusCodeStr = statusCode.toString(16);\n        const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n        super(message);\n        this.name = \"TransportStatusError\";\n        this.statusCode = statusCode;\n        this.statusText = statusText;\n        Object.setPrototypeOf(this, TransportStatusError.prototype);\n        // Maps to a LockedDeviceError\n        if (canBeMappedToChildError && statusCode === StatusCodes.LOCKED_DEVICE) {\n            return new LockedDeviceError(message);\n        }\n    }\n}\nexport class LockedDeviceError extends TransportStatusError {\n    constructor(message) {\n        super(StatusCodes.LOCKED_DEVICE, { canBeMappedToChildError: false });\n        if (message) {\n            this.message = message;\n        }\n        this.name = \"LockedDeviceError\";\n        Object.setPrototypeOf(this, LockedDeviceError.prototype);\n    }\n}\naddCustomErrorDeserializer(\"TransportStatusError\", e => new TransportStatusError(e.statusCode));\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport EventEmitter from \"events\";\nimport { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError, } from \"@ledgerhq/errors\";\nimport { LocalTracer } from \"@ledgerhq/logs\";\nexport { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage };\nconst DEFAULT_LOG_TYPE = \"transport\";\n/**\n * The Transport class defines a generic interface for communicating with a Ledger hardware wallet.\n * There are different kind of transports based on the technology (channels like U2F, HID, Bluetooth, Webusb) and environment (Node, Web,...).\n * It is an abstract class that needs to be implemented.\n */\nclass Transport {\n    constructor({ context, logType } = {}) {\n        this.exchangeTimeout = 30000;\n        this.unresponsiveTimeout = 15000;\n        this.deviceModel = null;\n        this._events = new EventEmitter();\n        /**\n         * Send data to the device using the higher level API.\n         *\n         * @param {number} cla - The instruction class for the command.\n         * @param {number} ins - The instruction code for the command.\n         * @param {number} p1 - The first parameter for the instruction.\n         * @param {number} p2 - The second parameter for the instruction.\n         * @param {Buffer} data - The data to be sent. Defaults to an empty buffer.\n         * @param {Array<number>} statusList - A list of acceptable status codes for the response. Defaults to [StatusCodes.OK].\n         * @param {Object} options - Contains optional options for the exchange function\n         *  - abortTimeoutMs: stop the send after a given timeout. Another timeout exists\n         *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n         * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n         */\n        this.send = (cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [StatusCodes.OK], { abortTimeoutMs } = {}) => __awaiter(this, void 0, void 0, function* () {\n            const tracer = this.tracer.withUpdatedContext({ function: \"send\" });\n            if (data.length >= 256) {\n                tracer.trace(\"data.length exceeded 256 bytes limit\", { dataLength: data.length });\n                throw new TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n            }\n            tracer.trace(\"Starting an exchange\", { abortTimeoutMs });\n            const response = yield this.exchange(\n            // The size of the data is added in 1 byte just before `data`\n            Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]), { abortTimeoutMs });\n            tracer.trace(\"Received response from exchange\");\n            const sw = response.readUInt16BE(response.length - 2);\n            if (!statusList.some(s => s === sw)) {\n                throw new TransportStatusError(sw);\n            }\n            return response;\n        });\n        this._appAPIlock = null;\n        this.tracer = new LocalTracer(logType !== null && logType !== void 0 ? logType : DEFAULT_LOG_TYPE, context);\n    }\n    /**\n     * Send data to the device using a low level API.\n     * It's recommended to use the \"send\" method for a higher level API.\n     * @param {Buffer} apdu - The data to send.\n     * @param {Object} options - Contains optional options for the exchange function\n     *  - abortTimeoutMs: stop the exchange after a given timeout. Another timeout exists\n     *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n     * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n     */\n    exchange(_apdu, { abortTimeoutMs: _abortTimeoutMs } = {}) {\n        throw new Error(\"exchange not implemented\");\n    }\n    /**\n     * Send apdus in batch to the device using a low level API.\n     * The default implementation is to call exchange for each apdu.\n     * @param {Array<Buffer>} apdus - array of apdus to send.\n     * @param {Observer<Buffer>} observer - an observer that will receive the response of each apdu.\n     * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop sending apdus.\n     */\n    exchangeBulk(apdus, observer) {\n        let unsubscribed = false;\n        const unsubscribe = () => {\n            unsubscribed = true;\n        };\n        const main = () => __awaiter(this, void 0, void 0, function* () {\n            if (unsubscribed)\n                return;\n            for (const apdu of apdus) {\n                const r = yield this.exchange(apdu);\n                if (unsubscribed)\n                    return;\n                const status = r.readUInt16BE(r.length - 2);\n                if (status !== StatusCodes.OK) {\n                    throw new TransportStatusError(status);\n                }\n                observer.next(r);\n            }\n        });\n        main().then(() => !unsubscribed && observer.complete(), e => !unsubscribed && observer.error(e));\n        return { unsubscribe };\n    }\n    /**\n     * Set the \"scramble key\" for the next data exchanges with the device.\n     * Each app can have a different scramble key and it is set internally during instantiation.\n     * @param {string} key - The scramble key to set.\n     * deprecated This method is no longer needed for modern transports and should be migrated away from.\n     * no @ before deprecated as it breaks documentationjs on version 14.0.2\n     * https://github.com/documentationjs/documentation/issues/1596\n     */\n    setScrambleKey(_key) { }\n    /**\n     * Close the connection with the device.\n     *\n     * Note: for certain transports (hw-transport-node-hid-singleton for ex), once the promise resolved,\n     * the transport instance is actually still cached, and the device is disconnected only after a defined timeout.\n     * But for the consumer of the Transport, this does not matter and it can consider the transport to be closed.\n     *\n     * @returns {Promise<void>} A promise that resolves when the transport is closed.\n     */\n    close() {\n        return Promise.resolve();\n    }\n    /**\n     * Listen for an event on the transport instance.\n     * Transport implementations may have specific events. Common events include:\n     * \"disconnect\" : triggered when the transport is disconnected.\n     * @param {string} eventName - The name of the event to listen for.\n     * @param {(...args: Array<any>) => any} cb - The callback function to be invoked when the event occurs.\n     */\n    on(eventName, cb) {\n        this._events.on(eventName, cb);\n    }\n    /**\n     * Stop listening to an event on an instance of transport.\n     */\n    off(eventName, cb) {\n        this._events.removeListener(eventName, cb);\n    }\n    emit(event, ...args) {\n        this._events.emit(event, ...args);\n    }\n    /**\n     * Enable or not logs of the binary exchange\n     */\n    setDebugMode() {\n        console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n    }\n    /**\n     * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n     */\n    setExchangeTimeout(exchangeTimeout) {\n        this.exchangeTimeout = exchangeTimeout;\n    }\n    /**\n     * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n     */\n    setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n        this.unresponsiveTimeout = unresponsiveTimeout;\n    }\n    /**\n     * create() allows to open the first descriptor available or\n     * throw if there is none or if timeout is reached.\n     * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n     * @example\n    TransportFoo.create().then(transport => ...)\n     */\n    static create(openTimeout = 3000, listenTimeout) {\n        return new Promise((resolve, reject) => {\n            let found = false;\n            const sub = this.listen({\n                next: e => {\n                    found = true;\n                    if (sub)\n                        sub.unsubscribe();\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    this.open(e.descriptor, openTimeout).then(resolve, reject);\n                },\n                error: e => {\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    reject(e);\n                },\n                complete: () => {\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    if (!found) {\n                        reject(new TransportError(this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n                    }\n                },\n            });\n            const listenTimeoutId = listenTimeout\n                ? setTimeout(() => {\n                    sub.unsubscribe();\n                    reject(new TransportError(this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n                }, listenTimeout)\n                : null;\n        });\n    }\n    /**\n     * Wrapper to make an exchange \"atomic\" (blocking any other exchange)\n     *\n     * It also handles \"unresponsiveness\" by emitting \"unresponsive\" and \"responsive\" events.\n     *\n     * @param f The exchange job, using the transport to run\n     * @returns a Promise resolving with the output of the given job\n     */\n    exchangeAtomicImpl(f) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tracer = this.tracer.withUpdatedContext({\n                function: \"exchangeAtomicImpl\",\n                unresponsiveTimeout: this.unresponsiveTimeout,\n            });\n            if (this.exchangeBusyPromise) {\n                tracer.trace(\"Atomic exchange is already busy\");\n                throw new TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n            }\n            // Sets the atomic guard\n            let resolveBusy;\n            const busyPromise = new Promise(r => {\n                resolveBusy = r;\n            });\n            this.exchangeBusyPromise = busyPromise;\n            // The device unresponsiveness handler\n            let unresponsiveReached = false;\n            const timeout = setTimeout(() => {\n                tracer.trace(`Timeout reached, emitting Transport event \"unresponsive\"`, {\n                    unresponsiveTimeout: this.unresponsiveTimeout,\n                });\n                unresponsiveReached = true;\n                this.emit(\"unresponsive\");\n            }, this.unresponsiveTimeout);\n            try {\n                const res = yield f();\n                if (unresponsiveReached) {\n                    tracer.trace(\"Device was unresponsive, emitting responsive\");\n                    this.emit(\"responsive\");\n                }\n                return res;\n            }\n            finally {\n                tracer.trace(\"Finalize, clearing busy guard\");\n                clearTimeout(timeout);\n                if (resolveBusy)\n                    resolveBusy();\n                this.exchangeBusyPromise = null;\n            }\n        });\n    }\n    decorateAppAPIMethods(self, methods, scrambleKey) {\n        for (const methodName of methods) {\n            self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n        }\n    }\n    decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n        return (...args) => __awaiter(this, void 0, void 0, function* () {\n            const { _appAPIlock } = this;\n            if (_appAPIlock) {\n                return Promise.reject(new TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"));\n            }\n            try {\n                this._appAPIlock = methodName;\n                this.setScrambleKey(scrambleKey);\n                return yield f.apply(ctx, args);\n            }\n            finally {\n                this._appAPIlock = null;\n            }\n        });\n    }\n    /**\n     * Sets the context used by the logging/tracing mechanism\n     *\n     * Useful when re-using (cached) the same Transport instance,\n     * but with a new tracing context.\n     *\n     * @param context A TraceContext, that can undefined to reset the context\n     */\n    setTraceContext(context) {\n        this.tracer = this.tracer.withContext(context);\n    }\n    /**\n     * Updates the context used by the logging/tracing mechanism\n     *\n     * The update only overrides the key-value that are already defined in the current context.\n     *\n     * @param contextToAdd A TraceContext that will be added to the current context\n     */\n    updateTraceContext(contextToAdd) {\n        this.tracer.updateContext(contextToAdd);\n    }\n    /**\n     * Gets the tracing context of the transport instance\n     */\n    getTraceContext() {\n        return this.tracer.getContext();\n    }\n}\nTransport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\nTransport.ErrorMessage_NoDeviceFound = \"No Ledger device found\";\nexport default Transport;\n//# sourceMappingURL=Transport.js.map","import Transport from \"@ledgerhq/hw-transport\";\nimport { schemaDeviceClose, schemaDeviceExchange, } from \"@ledgerhq/wallet-api-core\";\n/**\n * Wallet API Transport implementation\n */\nexport class TransportWalletAPI extends Transport {\n    walletApi;\n    transportId;\n    constructor(walletApi, transportId) {\n        super();\n        this.transportId = transportId;\n        this.walletApi = walletApi;\n    }\n    /**\n     * Check if Wallet API transport is supported.\n     */\n    static isSupported = () => Promise.resolve(true);\n    /**\n     * This transport is not discoverable\n     */\n    static list = () => Promise.resolve([]);\n    static listen = (_observer) => ({\n        unsubscribe: () => {\n            return;\n        },\n    });\n    /**\n     * Create a Ledger transport with the Wallet API transport\n     */\n    static open({ walletApi, transportId, }) {\n        return Promise.resolve(new TransportWalletAPI(walletApi, transportId));\n    }\n    /**\n     * Exchange with the device using APDU protocol.\n     * @param apdu\n     * @returns a promise of apdu response\n     * @throws {@link RpcError} if an error occurred on server side\n     */\n    async exchange(apdu) {\n        const apduHex = apdu.toString(\"hex\");\n        const deviceExchangeResult = await this.walletApi.request(\"device.exchange\", {\n            transportId: this.transportId,\n            apduHex,\n        });\n        const safeResults = schemaDeviceExchange.result.parse(deviceExchangeResult);\n        return Buffer.from(safeResults.responseHex, \"hex\");\n    }\n    // eslint-disable-next-line class-methods-use-this\n    setScrambleKey() {\n        return;\n    }\n    /**\n     * Close the current transport communication.\n     *\n     * @throws {@link RpcError} if an error occurred on server side\n     */\n    async close() {\n        const deviceCloseResult = await this.walletApi.request(\"device.close\", {\n            transportId: this.transportId,\n        });\n        schemaDeviceClose.result.parse(deviceCloseResult);\n        // Should we check the transportId against the one from the class\n        // and throw an error in case of mismatch ?\n    }\n}\n//# sourceMappingURL=TransportWalletAPI.js.map","import { deserializeAccount, schemaAccountList, schemaAccountReceive, schemaAccountRequest, } from \"@ledgerhq/wallet-api-core\";\nexport class AccountModule {\n    client;\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * List accounts added by user on the connected wallet\n     *\n     * @param params - Filters for currencies\n     *\n     * @returns The list of accounts on the connected wallet\n     * @throws {@link RpcError} if an error occurred on server side\n     */\n    async list(params) {\n        const listAccountsResult = await this.client.request(\"account.list\", {\n            currencyIds: params?.currencyIds,\n        });\n        const safeResults = schemaAccountList.result.parse(listAccountsResult);\n        return safeResults.rawAccounts.map(deserializeAccount);\n    }\n    /**\n     * Ask the connected wallet for an account matching a specific set of critterias.\n     *\n     * @param params - Parameters of the request.\n     *\n     * @returns The account selected by the user\n     * @throws {@link RpcError} if an error occurred on server side\n     */\n    async request(params) {\n        const requestAccountsResult = await this.client.request(\"account.request\", {\n            currencyIds: params?.currencyIds,\n        });\n        const safeResults = schemaAccountRequest.result.parse(requestAccountsResult);\n        return deserializeAccount(safeResults.rawAccount);\n    }\n    /**\n     * Let user verify it's account address on his device through Ledger Live\n     *\n     * @param accountId - id of the account\n     *\n     * @returns The verified address or an error message if the verification doesn't succeed\n     */\n    async receive(accountId) {\n        const receiveAccountsResult = await this.client.request(\"account.receive\", {\n            accountId,\n        });\n        const safeResults = schemaAccountReceive.result.parse(receiveAccountsResult);\n        return safeResults.address;\n    }\n}\n//# sourceMappingURL=Account.js.map","import { schemaBitcoinGetAddress, schemaBitcoinGetPublicKey, schemaBitcoinGetXPub, } from \"@ledgerhq/wallet-api-core\";\nexport class BitcoinModule {\n    client;\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     *\n     * @param accountId id of the bitcoin account\n     * @param derivationPath The derivation path is a relative derivation path from the account\n     * e.g to get the first public address of an account, one will request for the “0/0“ derivation path\n     * @returns the address of the account for a given derivation path\n     *\n     * @throws {@link ServerError} if an error occurred on server side\n     */\n    async getAddress(accountId, derivationPath) {\n        const getAddressResult = await this.client.request(\"bitcoin.getAddress\", {\n            accountId,\n            derivationPath,\n        });\n        const safeResults = schemaBitcoinGetAddress.result.parse(getAddressResult);\n        return safeResults.address;\n    }\n    /**\n     *\n     * @param accountId id of the bitcoin account\n     * @param derivationPath The derivation path is a relative derivation path from the account\n     * e.g to get the first public key of an account, one will request for the “0/0“ derivation path\n     * @returns a raw hexadecimal public key of a bitcoin account at the given derivation path\n     *\n     * @throws {@link ServerError} if an error occurred on server side\n     */\n    async getPublicKey(accountId, derivationPath) {\n        const getPublicKeyResult = await this.client.request(\"bitcoin.getPublicKey\", {\n            accountId,\n            derivationPath,\n        });\n        const safeResults = schemaBitcoinGetPublicKey.result.parse(getPublicKeyResult);\n        return safeResults.publicKey;\n    }\n    /**\n     *\n     * @param accountId id of the bitcoin account\n     * @returns the xpub of the account\n     *\n     * @throws {@link ServerError} if an error occurred on server side\n     */\n    async getXPub(accountId) {\n        const getXPupResult = await this.client.request(\"bitcoin.getXPub\", {\n            accountId,\n        });\n        const safeResults = schemaBitcoinGetXPub.result.parse(getXPupResult);\n        return safeResults.xPub;\n    }\n}\n//# sourceMappingURL=Bitcoin.js.map","import { schemaCurrencyList } from \"@ledgerhq/wallet-api-core\";\nexport class CurrencyModule {\n    client;\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * List cryptocurrencies supported by the connected wallet, providing filters by name or ticker\n     *\n     * @param params - Filters for currencies\n     *\n     * @returns The list of corresponding cryptocurrencies\n     * @throws {@link RpcError} if an error occurred on server side\n     *\n     * @beta Filtering not yet implemented\n     */\n    async list(params) {\n        const listResult = await this.client.request(\"currency.list\", {\n            currencyIds: params?.currencyIds,\n        });\n        const safeResults = schemaCurrencyList.result.parse(listResult);\n        return safeResults.currencies;\n    }\n}\n//# sourceMappingURL=Currency.js.map","import { schemaDeviceOpen, schemaDeviceSelect, schemaDeviceTransport, } from \"@ledgerhq/wallet-api-core\";\nimport { TransportWalletAPI } from \"../TransportWalletAPI\";\nexport class DeviceModule {\n    client;\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Open low-level transport in the connected wallet\n     *\n     * @param params - Params for the transport\n     *\n     * @returns An instance of Transport compatible with @ledgerhq/hw-transport\n     * @throws {@link RpcError} if an error occurred on server side\n     */\n    async transport(params) {\n        const deviceTransportResult = await this.client.request(\"device.transport\", params);\n        const safeResults = schemaDeviceTransport.result.parse(deviceTransportResult);\n        return TransportWalletAPI.open({\n            walletApi: this.client,\n            transportId: safeResults.transportId,\n        });\n    }\n    /**\n     * Open low-level transport in the connected wallet\n     *\n     * @param params - Params to open the transport\n     *\n     * @returns An instance of Transport compatible with @ledgerhq/hw-transport\n     * @throws {@link RpcError} if an error occurred on server side\n     */\n    async open(params) {\n        const deviceOpenResult = await this.client.request(\"device.open\", params);\n        const safeResults = schemaDeviceOpen.result.parse(deviceOpenResult);\n        return TransportWalletAPI.open({\n            walletApi: this.client,\n            transportId: safeResults.transportId,\n        });\n    }\n    /**\n     * Select a device in the connected wallet\n     *\n     * @param params - Params to select and check the device\n     *\n     * @returns A deviceId to use with the `device.open` method\n     * @throws {@link RpcError} if an error occurred on server side\n     */\n    async select(params) {\n        const deviceSelectResult = await this.client.request(\"device.select\", params);\n        return schemaDeviceSelect.result.parse(deviceSelectResult);\n    }\n}\n//# sourceMappingURL=Device.js.map","import { schemaExchangeComplete, schemaExchangeStart, serializeTransaction, } from \"@ledgerhq/wallet-api-core\";\nexport class ExchangeModule {\n    client;\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * @alpha\n     * Start the exchange process by generating a nonce on Ledger device\n     * @param exchangeType - used by the exchange transport to discern between swap/sell/fund\n     *\n     * @returns - A transaction ID used to complete the exchange process\n     */\n    async start(exchangeType) {\n        const exchangeStartResult = await this.client.request(\"exchange.start\", {\n            exchangeType,\n        });\n        const safeResults = schemaExchangeStart.result.parse(exchangeStartResult);\n        return safeResults.transactionId;\n    }\n    /**\n     * @alpha\n     * Complete an exchange swap process by passing by the exchange content and its signature.\n     * User will be prompted on its device to approve the swap exchange operation.\n     * If the exchange is validated, the transaction is then signed and broadcasted to the network.\n     * @param provider - Used to verify the signature\n     * @param fromAccountId - Identifier of the account used as a source for the tx or parent account (for \"new token\")\n     * @param toAccountId - Identifier of the account or parent account (for \"new token\") used as a destination\n     * @param swapId - Identifier of the swap used by backend\n     * @param rate - Swap rate in the transaction\n     * @param tokenCurrency - \"new token\" used in the transaction, not listed yet in wallet-api list\n     * @param transaction - Transaction containing the recipient and amount\n     * @param binaryPayload - Blueprint of the data that we'll allow signing\n     * @param signature - Ensures the source of the payload\n     * @param feesStrategy - Slow / Medium / Fast\n     *\n     * @returns - The broadcasted transaction hash.\n     */\n    async completeSwap({ provider, fromAccountId, toAccountId, swapId, rate, transaction, binaryPayload, signature, feeStrategy, tokenCurrency, }) {\n        const exchangeCompleteResult = await this.client.request(\"exchange.complete\", {\n            exchangeType: \"SWAP\",\n            provider,\n            fromAccountId,\n            toAccountId,\n            swapId,\n            rate,\n            rawTransaction: serializeTransaction(transaction),\n            hexBinaryPayload: binaryPayload.toString(\"hex\"),\n            hexSignature: signature.toString(\"hex\"),\n            feeStrategy,\n            tokenCurrency,\n        });\n        const safeResults = schemaExchangeComplete.result.parse(exchangeCompleteResult);\n        return safeResults.transactionHash;\n    }\n    /**\n     * @alpha\n     * Complete an exchange sell process by passing by the exchange content and its signature.\n     * User will be prompted on its device to approve the sell exchange operation.\n     * If the exchange is validated, the transaction is then signed and broadcasted to the network.\n     * @param provider - Used to verify the signature\n     * @param fromAccountId - Identifier of the account used as a source for the tx\n     * @param transaction - Transaction containing the recipient and amount\n     * @param binaryPayload - Blueprint of the data that we'll allow signing\n     * @param signature - Ensures the source of the payload\n     * @param feesStrategy - Slow / Medium / Fast\n     *\n     * @returns - The broadcasted transaction hash.\n     */\n    async completeSell({ provider, fromAccountId, transaction, binaryPayload, signature, feeStrategy, }) {\n        const exchangeCompleteResult = await this.client.request(\"exchange.complete\", {\n            exchangeType: \"SELL\",\n            provider,\n            fromAccountId,\n            rawTransaction: serializeTransaction(transaction),\n            hexBinaryPayload: binaryPayload.toString(\"hex\"),\n            hexSignature: signature.toString(\"hex\"),\n            feeStrategy,\n        });\n        const safeResults = schemaExchangeComplete.result.parse(exchangeCompleteResult);\n        return safeResults.transactionHash;\n    }\n    /**\n     * @alpha\n     * Complete an exchange fund process by passing by the exchange content and its signature.\n     * User will be prompted on its device to approve the fund exchange operation.\n     * If the exchange is validated, the transaction is then signed and broadcasted to the network.\n     * @param provider - Used to verify the signature\n     * @param fromAccountId - Identifier of the account used as a source for the tx\n     * @param transaction - Transaction containing the recipient and amount\n     * @param binaryPayload - Blueprint of the data that we'll allow signing\n     * @param signature - Ensures the source of the payload\n     * @param feesStrategy - Slow / Medium / Fast\n     *\n     * @returns - The broadcasted transaction hash.\n     */\n    async completeFund({ provider, fromAccountId, transaction, binaryPayload, signature, feeStrategy, tokenCurrency, }) {\n        const exchangeCompleteResult = await this.client.request(\"exchange.complete\", {\n            exchangeType: \"FUND\",\n            provider,\n            fromAccountId,\n            rawTransaction: serializeTransaction(transaction),\n            hexBinaryPayload: binaryPayload.toString(\"hex\"),\n            hexSignature: signature.toString(\"hex\"),\n            feeStrategy,\n            tokenCurrency,\n        });\n        const safeResults = schemaExchangeComplete.result.parse(exchangeCompleteResult);\n        return safeResults.transactionHash;\n    }\n}\n//# sourceMappingURL=Exchange.js.map","import { schemaMessageSign } from \"@ledgerhq/wallet-api-core\";\nexport class MessageModule {\n    client;\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Let the user sign the provided message.\n     * In Ethereum context, this is an [EIP-191 message](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-191.md)\n     * or an [EIP-712 message](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @param accountId - Ledger Live id of the account\n     * @param message - Message the user should sign\n     *\n     * @returns Message signed\n     * @throws {@link RpcError} if an error occurred on server side\n     */\n    async sign(accountId, message, meta) {\n        const messageSignResult = await this.client.request(\"message.sign\", {\n            accountId,\n            hexMessage: message.toString(\"hex\"),\n            meta,\n        });\n        const safeResults = schemaMessageSign.result.parse(messageSignResult);\n        return Buffer.from(safeResults.hexSignedMessage, \"hex\");\n    }\n}\n//# sourceMappingURL=Message.js.map","import { schemaStorageGet, schemaStorageSet } from \"@ledgerhq/wallet-api-core\";\nexport class StorageModule {\n    client;\n    constructor(client) {\n        this.client = client;\n    }\n    async get(key, storeId) {\n        const storageGetResult = await this.client.request(\"storage.get\", {\n            key,\n            storeId,\n        });\n        const safeResults = schemaStorageGet.result.parse(storageGetResult);\n        return safeResults.value;\n    }\n    async set(key, value, storeId) {\n        const storageSetResult = await this.client.request(\"storage.set\", {\n            key,\n            value,\n            storeId,\n        });\n        const safeResults = schemaStorageSet.result.parse(storageSetResult);\n        return safeResults;\n    }\n}\n//# sourceMappingURL=Storage.js.map","import { schemaTransactionSign, schemaTransactionSignAndBroadcast, serializeTransaction, } from \"@ledgerhq/wallet-api-core\";\nexport class TransactionModule {\n    client;\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Let the user sign a transaction that won't be broadcasted by the connected wallet\n     * @param accountId - id of the account\n     * @param transaction - The transaction object in the currency family-specific format\n     * @param options - Extra parameters\n     *\n     * @returns The raw signed transaction\n     * @throws {@link RpcError} if an error occurred on server side\n     */\n    async sign(accountId, transaction, options, meta) {\n        const transactionSignResult = await this.client.request(\"transaction.sign\", {\n            accountId,\n            rawTransaction: serializeTransaction(transaction),\n            options,\n            meta,\n        });\n        const safeResults = schemaTransactionSign.result.parse(transactionSignResult);\n        return Buffer.from(safeResults.signedTransactionHex, \"hex\");\n    }\n    /**\n     * Let the user sign and broadcast a transaction\n     * @param accountId - id of the account\n     * @param transaction - The transaction object in the currency family-specific format\n     * @param options - Extra parameters\n     *\n     * @returns The transaction hash\n     * @throws {@link RpcError} if an error occurred on server side\n     */\n    async signAndBroadcast(accountId, transaction, options, meta) {\n        const transactionSignResult = await this.client.request(\"transaction.signAndBroadcast\", {\n            accountId,\n            rawTransaction: serializeTransaction(transaction),\n            options,\n            meta,\n        });\n        const safeResults = schemaTransactionSignAndBroadcast.result.parse(transactionSignResult);\n        return safeResults.transactionHash;\n    }\n}\n//# sourceMappingURL=Transaction.js.map","import { schemaWalletCapabilities, schemaWalletInfo, schemaWalletUserId, } from \"@ledgerhq/wallet-api-core\";\nexport class WalletModule {\n    client;\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     *\n     * @returns the userId\n     *\n     * @throws {@link ServerError} if an error occurred on server side\n     */\n    async userId() {\n        const userIdResult = await this.client.request(\"wallet.userId\", {});\n        const safeResults = schemaWalletUserId.result.parse(userIdResult);\n        return safeResults.userId;\n    }\n    /**\n     *\n     * @returns The wallet infos\n     *\n     * @throws {@link ServerError} if an error occurred on server side\n     */\n    async info() {\n        const infoResult = await this.client.request(\"wallet.info\", {});\n        const safeResults = schemaWalletInfo.result.parse(infoResult);\n        return safeResults;\n    }\n    /**\n     * List the wallet's implemented methodIds\n     *\n     * @returns The list of implemented method ids\n     * @throws {@link RpcError} if an error occurred on server side\n     *\n     * @beta Filtering not yet implemented\n     */\n    async capabilities() {\n        const walletCapabilitiesResult = await this.client.request(\"wallet.capabilities\", {});\n        const safeResults = schemaWalletCapabilities.result.parse(walletCapabilitiesResult);\n        return safeResults.methodIds;\n    }\n}\n//# sourceMappingURL=Wallet.js.map","import { Logger, RpcError, RpcErrorCode, RpcNode, } from \"@ledgerhq/wallet-api-core\";\nimport { AccountModule } from \"./modules/Account\";\nimport { BitcoinModule } from \"./modules/Bitcoin\";\nimport { CurrencyModule } from \"./modules/Currency\";\nimport { DeviceModule } from \"./modules/Device\";\nimport { ExchangeModule } from \"./modules/Exchange\";\nimport { MessageModule } from \"./modules/Message\";\nimport { StorageModule } from \"./modules/Storage\";\nimport { TransactionModule } from \"./modules/Transaction\";\nimport { WalletModule } from \"./modules/Wallet\";\nexport const defaultLogger = new Logger(\"Wallet-API-Client\");\n// temporary\nconst requestHandlers = {\n    \"event.account.updated\": (_request) => {\n        // eslint-disable-next-line no-console\n        console.log(\"accounts updated !\");\n        return Promise.resolve();\n    },\n};\n/**\n * WalletAPI Client which rely on WindowMessage communication\n */\nexport class WalletAPIClient extends RpcNode {\n    /**\n     * Instance of the Account module\n     */\n    account;\n    /**\n     * Instance of the Bitcoin module\n     */\n    bitcoin;\n    /**\n     * Instance of the Currency module\n     */\n    currency;\n    /**\n     * Instance of the Device module\n     */\n    device;\n    /**\n     * Instance of the Message module\n     */\n    message;\n    /**\n     * Instance of the Storage module\n     */\n    storage;\n    /**\n     * Instance of the Transaction module\n     */\n    transaction;\n    /**\n     * Instance of the Wallet module\n     */\n    wallet;\n    /**\n     * Instance of the Wallet module\n     */\n    exchange;\n    /**\n     * Instance of the Custom module\n     */\n    custom;\n    logger;\n    constructor(transport, logger = defaultLogger, getCustomModule, eventHandlers = {}) {\n        super(transport, { ...requestHandlers, ...eventHandlers });\n        this.logger = logger;\n        this.account = new AccountModule(this);\n        this.bitcoin = new BitcoinModule(this);\n        this.currency = new CurrencyModule(this);\n        this.device = new DeviceModule(this);\n        this.message = new MessageModule(this);\n        this.storage = new StorageModule(this);\n        this.transaction = new TransactionModule(this);\n        this.wallet = new WalletModule(this);\n        this.exchange = new ExchangeModule(this);\n        this.custom = (getCustomModule ? getCustomModule(this) : {});\n    }\n    setEventHandlers(eventHandlers) {\n        this.requestHandlers = { ...requestHandlers, ...eventHandlers };\n    }\n    onRequest(request) {\n        this.logger.log(request.method);\n        const handler = this.requestHandlers[request.method];\n        if (!handler) {\n            throw new RpcError({\n                code: RpcErrorCode.METHOD_NOT_FOUND,\n                message: \"method not found\",\n            });\n        }\n        return handler(request);\n    }\n}\n//# sourceMappingURL=WalletAPIClient.js.map","import type {\n  Account,\n  CryptoCurrency,\n  Currency,\n  ERC20TokenCurrency,\n  WalletAPIClient,\n} from \"@ledgerhq/wallet-api-client\";\nimport type { Chain } from \"@stakekit/rainbowkit\";\nimport { EitherAsync } from \"purify-ts\";\nimport type {\n  CosmosChainsMap,\n  EvmChainsMap,\n  MiscChainsMap,\n  SubstrateChainsMap,\n  SupportedLedgerFamiliesWithCurrency,\n  SupportedLedgerLiveFamilies,\n  SupportedSKChains,\n} from \"../../domain/types/chains\";\nimport { supportedLedgerFamiliesWithCurrency } from \"../../domain/types/chains\";\nimport type { GetEitherAsyncRight } from \"../../types\";\nimport { typeSafeObjectEntries } from \"../../utils\";\n\nexport const getFilteredSupportedLedgerFamiliesWithCurrency = ({\n  accounts,\n  ledgerCurrencies,\n  enabledChainsMap,\n}: {\n  accounts: Account[];\n  ledgerCurrencies: GetEitherAsyncRight<ReturnType<typeof getLedgerCurrencies>>;\n  enabledChainsMap: {\n    evm: Partial<EvmChainsMap>;\n    cosmos: Partial<CosmosChainsMap>;\n    misc: Partial<MiscChainsMap>;\n    substrate: Partial<SubstrateChainsMap>;\n  };\n}) => {\n  const { accountsFamilies, accountsCurrencies } = accounts.reduce(\n    (acc, next) => {\n      acc.accountsFamilies.add(ledgerCurrencies.get(next.currency));\n      acc.accountsCurrencies.add(next.currency);\n\n      return acc;\n    },\n    { accountsFamilies: new Set(), accountsCurrencies: new Set() }\n  );\n\n  const v = typeSafeObjectEntries(supportedLedgerFamiliesWithCurrency).reduce(\n    (acc, [k, v]) => {\n      const filtered = Object.keys(v).reduce((acc, key) => {\n        const item = v[key as keyof typeof v] as {\n          [K in keyof SupportedLedgerFamiliesWithCurrency]: SupportedLedgerFamiliesWithCurrency[K];\n        }[keyof SupportedLedgerFamiliesWithCurrency];\n\n        const chain =\n          enabledChainsMap.evm[\n            item.skChainName as unknown as EvmChainsMap[keyof EvmChainsMap][\"skChainName\"]\n          ]?.wagmiChain ||\n          enabledChainsMap.cosmos[\n            item.skChainName as unknown as CosmosChainsMap[keyof CosmosChainsMap][\"skChainName\"]\n          ]?.wagmiChain ||\n          enabledChainsMap.misc[\n            item.skChainName as unknown as MiscChainsMap[keyof MiscChainsMap][\"skChainName\"]\n          ]?.wagmiChain ||\n          enabledChainsMap.substrate[\n            item.skChainName as unknown as SubstrateChainsMap[keyof SubstrateChainsMap][\"skChainName\"]\n          ]?.wagmiChain;\n\n        if (!chain) return acc;\n\n        if (\n          accountsFamilies.has(item.family) &&\n          (key === \"*\" || accountsCurrencies.has(item.currencyId))\n        ) {\n          // biome-ignore lint/performance/noAccumulatingSpread: <explanation>\n          return { ...acc, [key]: { ...item, chain, enabled: true } };\n        }\n\n        // biome-ignore lint/performance/noAccumulatingSpread: <explanation>\n        return { ...acc, [key]: { ...item, chain, enabled: false } };\n      }, {} as MappedSupportedLedgerFamiliesWithCurrency);\n\n      // biome-ignore lint/performance/noAccumulatingSpread: <explanation>\n      return { ...acc, [k]: filtered };\n    },\n    {} as MappedSupportedLedgerFamiliesWithCurrency\n  );\n\n  type V = typeof v;\n  type Key = keyof V;\n\n  return Object.keys(v).reduce(\n    (acc, key) => {\n      const subItem = v[key as Key];\n\n      type SubItemKey = keyof typeof subItem;\n\n      const subItemMap = Object.keys(subItem).reduce((acc, subKey) => {\n        acc.set(subKey as SubItemKey, subItem[subKey as keyof typeof subItem]);\n\n        return acc;\n      }, new Map<SubItemKey, V[Key][SubItemKey]>());\n\n      acc.set(key as Key, subItemMap);\n\n      return acc;\n    },\n    new Map<\n      Key,\n      Map<\n        \"*\" | (string & {}),\n        {\n          currencyId: string;\n          family: SupportedLedgerLiveFamilies;\n          skChainName: SupportedSKChains;\n          chain: Chain;\n          enabled: boolean;\n        }\n      >\n    >()\n  );\n};\n\ntype MappedSupportedLedgerFamiliesWithCurrency = {\n  [Key in keyof SupportedLedgerFamiliesWithCurrency]: {\n    [K in keyof SupportedLedgerFamiliesWithCurrency[Key]]: SupportedLedgerFamiliesWithCurrency[Key][K] & {\n      chain: Chain;\n      enabled: boolean;\n    };\n  };\n};\n\n/**\n * Create Map<CryptoCurrency['id'], CryptoCurrency['family']>\n * then use TokenCurrency parent to get CryptoCurrency family\n * and add to map TokenCurrency['id'] => CryptoCurrency['family']\n */\nexport const getLedgerCurrencies = (walletAPIClient: WalletAPIClient) =>\n  EitherAsync(() =>\n    walletAPIClient.currency.list({\n      currencyIds: Object.values(supportedLedgerFamiliesWithCurrency).flatMap(\n        (chain) => Object.values(chain).map((currency) => currency.currencyId)\n      ),\n    })\n  )\n    .map((val) => {\n      return val.reduce(\n        (acc, next) => {\n          if (next.type === \"CryptoCurrency\") {\n            acc.cryptoCurrency.set(next.id, next.family);\n          } else {\n            acc.tokenCurrency.push(next);\n          }\n\n          return acc;\n        },\n        { cryptoCurrency: new Map(), tokenCurrency: [] } as {\n          cryptoCurrency: Map<Currency[\"id\"], CryptoCurrency[\"family\"]>;\n          tokenCurrency: ERC20TokenCurrency[];\n        }\n      );\n    })\n    .map((v) => {\n      v.tokenCurrency.forEach((t) => {\n        const parentCryptoCurrencyFamily = v.cryptoCurrency.get(t.parent);\n\n        if (parentCryptoCurrencyFamily) {\n          v.cryptoCurrency.set(t.id, parentCryptoCurrencyFamily);\n        }\n      });\n\n      return v.cryptoCurrency;\n    })\n    .mapLeft((e) => {\n      console.log(e);\n      return new Error(\"could not get currencies\");\n    });\n","import type { Account, Currency } from \"@ledgerhq/wallet-api-client\";\nimport {\n  WalletAPIClient,\n  WindowMessageTransport,\n  deserializeTransaction,\n} from \"@ledgerhq/wallet-api-client\";\nimport type {\n  Chain,\n  WalletDetailsParams,\n  WalletList,\n} from \"@stakekit/rainbowkit\";\nimport { EitherAsync, List, Maybe } from \"purify-ts\";\nimport { BehaviorSubject, map } from \"rxjs\";\nimport type { Address } from \"viem\";\nimport type { CreateConnectorFn } from \"wagmi\";\nimport { createConnector } from \"wagmi\";\nimport { images } from \"../../assets/images\";\nimport { skNormalizeChainId } from \"../../domain\";\nimport type {\n  SupportedLedgerLiveFamilies,\n  SupportedSKChains,\n} from \"../../domain/types/chains\";\nimport type { InitParams } from \"../../domain/types/init-params\";\nimport { isLedgerDappBrowserProvider } from \"../../utils\";\nimport { type ExtraProps, configMeta } from \"./ledger-live-connector-meta\";\nimport {\n  getFilteredSupportedLedgerFamiliesWithCurrency,\n  getLedgerCurrencies,\n} from \"./utils\";\n\nconst createLedgerLiveConnector = ({\n  walletDetailsParams,\n  enabledChainsMap,\n  queryParams,\n}: {\n  enabledChainsMap: EnabledChainsMap;\n  queryParams: InitParams;\n  walletDetailsParams: WalletDetailsParams;\n}) =>\n  createConnector<unknown, ExtraProps>((config) => {\n    const noAccountPlaceholder = \"N/A\" as Address;\n    const $filteredChains = new BehaviorSubject<Chain[]>([]);\n    const $disabledChains = new BehaviorSubject<Chain[]>([]);\n    const $currentAccount = new BehaviorSubject<Account | undefined>(undefined);\n\n    const $currentAccountId = $currentAccount.pipe(map((v) => v?.id));\n    let ledgerAccounts: Account[] = [];\n    const $accountsOnCurrentChain = new BehaviorSubject<Account[]>([]);\n    let currentChain: ChainItem | null = null;\n    let filteredSkSupportedChainsToCurrencyIdMap: Map<\n      Chain[\"id\"],\n      Currency[\"id\"]\n    > | null = null;\n    let filteredSkSupportedChainsValues: ReturnType<\n      typeof getFilteredSupportedLedgerFamiliesWithCurrency\n    > | null = null;\n\n    const transport = new WindowMessageTransport();\n    transport.connect();\n    const walletApiClient = new WalletAPIClient(transport);\n\n    const connect: ReturnType<CreateConnectorFn>[\"connect\"] = async () => {\n      config.emitter.emit(\"message\", { type: \"connecting\" });\n\n      /**\n       * Create Map<CryptoCurrency['id'], CryptoCurrency['family']>\n       * then use TokenCurrency parent to get CryptoCurrency family\n       * and add to map TokenCurrency['id'] => CryptoCurrency['family']\n       */\n      const ledgerCurrencies = (\n        await getLedgerCurrencies(walletApiClient)\n      ).unsafeCoerce();\n\n      const accounts = (\n        await EitherAsync(() => walletApiClient.account.list()).mapLeft((e) => {\n          console.log(e);\n          return new Error(\"could not get accounts\");\n        })\n      ).unsafeCoerce();\n\n      const filteredSupportedLedgerFamiliesWithCurrency =\n        getFilteredSupportedLedgerFamiliesWithCurrency({\n          ledgerCurrencies,\n          accounts,\n          enabledChainsMap,\n        });\n\n      filteredSkSupportedChainsToCurrencyIdMap = new Map(\n        [...filteredSupportedLedgerFamiliesWithCurrency.values()].flatMap((v) =>\n          [...v.values()].map((v) => [v.chain.id, v.currencyId])\n        )\n      );\n\n      filteredSkSupportedChainsValues =\n        filteredSupportedLedgerFamiliesWithCurrency;\n\n      const { enabled, disabled } = [\n        ...filteredSupportedLedgerFamiliesWithCurrency.values(),\n      ].reduce(\n        (acc, next) => {\n          next.forEach((v) => {\n            if (v.enabled) {\n              acc.enabled.push(v.chain);\n            } else {\n              acc.disabled.push(v.chain);\n            }\n          });\n\n          return acc;\n        },\n        { enabled: [] as Chain[], disabled: [] as Chain[] }\n      );\n\n      // Set chains to expose for switcher\n      $filteredChains.next([...enabled, ...disabled]);\n      $disabledChains.next(disabled);\n\n      ledgerAccounts = accounts;\n\n      const accountsWithChain = accounts.reduce(\n        (acc, next) => {\n          const family = ledgerCurrencies.get(next.currency);\n\n          if (!family) return acc;\n\n          const itemMap = filteredSupportedLedgerFamiliesWithCurrency.get(\n            family as SupportedLedgerLiveFamilies\n          );\n\n          if (!family || !itemMap) return acc;\n\n          const chainItem = itemMap.get(\"*\") || itemMap.get(next.currency);\n\n          if (chainItem) {\n            acc.push({ account: next, chainItem });\n          }\n\n          return acc;\n        },\n        [] as { account: Account; chainItem: ChainItem }[]\n      );\n\n      if (!accountsWithChain.length) {\n        const defaultChain = Maybe.fromNullable(\n          filteredSupportedLedgerFamiliesWithCurrency\n            .get(\"ethereum\")\n            ?.get(\"ethereum\")\n        ).extractNullable();\n\n        if (!defaultChain) throw new Error(\"Default chain not found\");\n\n        $accountsOnCurrentChain.next([]);\n        currentChain = defaultChain;\n\n        onAccountsChanged([noAccountPlaceholder as Address]);\n        onChainChanged(defaultChain.chain.id.toString());\n\n        return {\n          accounts: [noAccountPlaceholder as Address],\n          chainId: defaultChain.chain.id,\n        };\n      }\n\n      const preferredAccount = Maybe.fromNullable(queryParams.accountId)\n        .chain((accId) =>\n          Maybe.encase(() => {\n            const [, , , address] = accId.split(\":\");\n\n            return address;\n          })\n        )\n        .extractNullable();\n\n      const accountWithChain = List.find(\n        (v) =>\n          (!preferredAccount || v.account.address === preferredAccount) &&\n          v.chainItem.skChainName === queryParams.network,\n        accountsWithChain\n      )\n        .altLazy(() => List.head(accountsWithChain))\n        .toEither(new Error(\"Account not found\"))\n        .unsafeCoerce();\n\n      $currentAccount.next(accountWithChain.account);\n      currentChain = accountWithChain.chainItem;\n      $accountsOnCurrentChain.next(getAccountsOnCurrentChain().unsafeCoerce());\n\n      onAccountsChanged([accountWithChain.account.address as Address]);\n      onChainChanged(currentChain.chain.id.toString());\n\n      return {\n        accounts: [accountWithChain.account.address as Address],\n        chainId: currentChain.chain.id,\n      };\n    };\n\n    const getAccountsOnCurrentChain = () =>\n      Maybe.fromNullable(currentChain)\n        .toEither(new Error(\"Current chain not found\"))\n        .map((val) =>\n          ledgerAccounts.filter((a) => a.currency === val.currencyId)\n        );\n\n    const onAccountsChanged: ReturnType<CreateConnectorFn>[\"onAccountsChanged\"] =\n      (accounts) => {\n        if (accounts.length === 0) {\n          config.emitter.emit(\"disconnect\");\n        } else {\n          config.emitter.emit(\"change\", { accounts: accounts as Address[] });\n        }\n      };\n\n    const onChainChanged: ReturnType<CreateConnectorFn>[\"onChainChanged\"] = (\n      chainId\n    ) => {\n      config.emitter.emit(\"change\", { chainId: skNormalizeChainId(chainId) });\n    };\n\n    const onDisconnect: ReturnType<CreateConnectorFn>[\"onDisconnect\"] = () => {\n      config.emitter.emit(\"disconnect\");\n    };\n\n    const getProvider: ReturnType<CreateConnectorFn>[\"getProvider\"] =\n      async () => ({});\n\n    const isAuthorized: ReturnType<CreateConnectorFn>[\"isAuthorized\"] =\n      async () => isLedgerDappBrowserProvider();\n\n    const disconnect: ReturnType<CreateConnectorFn>[\"disconnect\"] = async () =>\n      transport.disconnect();\n\n    const getChainId: ReturnType<CreateConnectorFn>[\"getChainId\"] =\n      async () => {\n        const id = currentChain?.chain.id;\n\n        if (!id) throw new Error(\"Chain not found\");\n\n        return id;\n      };\n\n    const getAccounts: ReturnType<CreateConnectorFn>[\"getAccounts\"] =\n      async () => [$currentAccount.value?.address as Address];\n\n    const switchAccount = (account: Account) => {\n      $currentAccount.next(account);\n      onAccountsChanged([account.address as Address]);\n    };\n\n    const requestAndSwitchAccount = (chain: Chain) =>\n      EitherAsync.liftEither(\n        Maybe.fromNullable(\n          filteredSkSupportedChainsToCurrencyIdMap?.get(chain.id)\n        ).toEither(new Error(\"Chain not found\"))\n      )\n        .chain((currencyId) =>\n          EitherAsync(() =>\n            walletApiClient.account.request({ currencyIds: [currencyId] })\n          ).mapLeft((e) => {\n            console.log(e);\n            return new Error(\"could not request account\");\n          })\n        )\n        .chain((account) => {\n          ledgerAccounts.push(account);\n          $filteredChains.next([...$filteredChains.value, chain]);\n          $disabledChains.next(\n            $disabledChains.value.filter((c) => c.id !== chain.id)\n          );\n          return EitherAsync(() => switchChain({ chainId: chain.id }));\n        })\n        .mapLeft((e) => {\n          console.log(e);\n          return new Error(\"failed to switch to new chain\");\n        });\n\n    const switchChain: NonNullable<\n      ReturnType<CreateConnectorFn>[\"switchChain\"]\n    > = async ({ chainId }): Promise<Chain> => {\n      const currChain = currentChain;\n\n      if (!currChain || !filteredSkSupportedChainsValues)\n        throw new Error(\"Chain not found\");\n\n      const skSupportedChain = [...filteredSkSupportedChainsValues.values()]\n        .flatMap((v) => [...v.values()])\n        .find((v) => v.chain.id === chainId);\n\n      if (!skSupportedChain) throw new Error(\"Chain not found\");\n\n      if (\n        currChain.chain.id !== skSupportedChain.chain.id ||\n        !$currentAccount.value\n      ) {\n        currentChain = skSupportedChain;\n        const accountsOnCurrentChain =\n          getAccountsOnCurrentChain().unsafeCoerce();\n\n        $accountsOnCurrentChain.next(accountsOnCurrentChain);\n        $currentAccount.next(accountsOnCurrentChain[0]);\n      }\n\n      const currentAccount = $currentAccount.value;\n      if (!currentAccount) throw new Error(\"Account not found\");\n\n      onChainChanged(chainId.toString());\n      onAccountsChanged([currentAccount.address as Address]);\n\n      return skSupportedChain.chain;\n    };\n\n    return {\n      ...walletDetailsParams,\n      id: configMeta.id,\n      name: configMeta.name,\n      type: configMeta.type,\n      connect,\n      onAccountsChanged,\n      onChainChanged,\n      onDisconnect,\n      getProvider,\n      isAuthorized,\n      getChainId,\n      disconnect,\n      switchChain,\n      getAccounts,\n      switchAccount,\n      requestAndSwitchAccount,\n      walletApiClient,\n      $accountsOnCurrentChain,\n      $filteredChains: $filteredChains.asObservable(),\n      $currentAccountId,\n      $disabledChains: $disabledChains.asObservable(),\n      noAccountPlaceholder,\n      deserializeTransaction,\n    };\n  });\n\nexport const ledgerLiveConnector = ({\n  enabledChainsMap,\n  queryParams,\n}: {\n  enabledChainsMap: EnabledChainsMap;\n  queryParams: InitParams;\n}): WalletList[number] => ({\n  groupName: \"Ledger Live\",\n  wallets: [\n    () => ({\n      id: configMeta.id,\n      name: configMeta.name,\n      iconUrl: images.ledgerLogo,\n      iconBackground: \"#fff\",\n      hidden: () => !isLedgerDappBrowserProvider(),\n      createConnector: (walletDetailsParams) =>\n        createLedgerLiveConnector({\n          walletDetailsParams,\n          enabledChainsMap,\n          queryParams,\n        }),\n    }),\n  ],\n});\n\ntype ChainItem = {\n  currencyId: string;\n  family: SupportedLedgerLiveFamilies;\n  skChainName: SupportedSKChains;\n  chain: Chain;\n};\n\nexport type EnabledChainsMap = Parameters<\n  typeof getFilteredSupportedLedgerFamiliesWithCurrency\n>[0][\"enabledChainsMap\"];\n"],"names":["hasLift","source","isFunction","operate","init","liftedSource","err","createOperatorSubscriber","destination","onNext","onComplete","onError","onFinalize","OperatorSubscriber","_super","__extends","shouldUnsubscribe","_this","value","_a","closed_1","Subscriber","map","project","thisArg","subscriber","index","deserializeAccount","id","name","address","currency","balance","spendableBalance","blockHeight","lastSyncDate","parentAccountId","BigNumber","util","val","assertIs","_arg","assertNever","_x","items","obj","item","validKeys","k","filtered","e","object","keys","key","arr","checker","joinValues","array","separator","_","objectUtil","first","second","ZodParsedType","getParsedType","data","ZodIssueCode","quotelessJson","ZodError","issues","sub","subs","actualProto","_mapper","mapper","issue","fieldErrors","processError","error","curr","i","el","formErrors","errorMap","_ctx","message","overrideErrorMap","setErrorMap","getErrorMap","makeIssue","params","path","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","m","EMPTY_PATH","addIssueToContext","ctx","x","ParseStatus","status","results","arrayValue","INVALID","pairs","syncPairs","pair","finalObject","DIRTY","OK","isAborted","isDirty","isValid","isAsync","errorUtil","ParseInputLazyPath","parent","handleResult","result","processCreateParams","invalid_type_error","required_error","description","iss","ZodType","def","input","maybeAsyncResult","check","getIssueProperties","setError","refinementData","refinement","ZodEffects","ZodFirstPartyTypeKind","ZodOptional","ZodNullable","ZodArray","ZodPromise","option","ZodUnion","incoming","ZodIntersection","transform","defaultValueFunc","ZodDefault","ZodBranded","catchValueFunc","ZodCatch","This","target","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","emailRegex","_emojiRegex","emojiRegex","ipv4Regex","ipv6Regex","datetimeRegex","args","isValidIP","ip","version","ZodString","tooBig","tooSmall","regex","validation","options","minLength","maxLength","len","ch","min","max","floatSafeRemainder","step","valDecCount","stepDecCount","decCount","valInt","stepInt","ZodNumber","kind","inclusive","ZodBigInt","ZodBoolean","ZodDate","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","ZodUnknown","ZodNever","ZodVoid","schema","deepPartialify","ZodObject","newShape","fieldSchema","ZodTuple","shape","shapeKeys","extraKeys","keyValidator","unknownKeys","catchall","_b","_c","_d","defaultError","augmentation","merging","mask","newField","createZodEnum","handleResults","unionErrors","childCtx","dirty","types","getDiscriminator","type","ZodLazy","ZodLiteral","ZodEnum","ZodNativeEnum","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","discriminatorValues","mergeValues","a","b","aType","bType","bKeys","sharedKeys","newObj","sharedValue","newArray","itemA","itemB","handleParsed","parsedLeft","parsedRight","merged","left","right","itemIndex","rest","schemas","ZodRecord","keyType","valueType","third","ZodMap","finalMap","ZodSet","finalizeSet","elements","parsedSet","element","minSize","maxSize","size","ZodFunction","makeArgsIssue","makeReturnsIssue","returns","fn","me","parsedArgs","parsedReturns","returnType","func","getter","values","expectedValues","enumValues","opt","nativeEnumValues","promisified","effect","checkCtx","arg","processed","executeRefinement","acc","inner","base","preprocess","newCtx","ZodNaN","BRAND","inResult","custom","fatal","p","_fatal","p2","late","instanceOfType","cls","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","ostring","onumber","oboolean","coerce","NEVER","z","schemaRawAccount","schemaCurrencyType","schemaTokenStandard","schemaBaseCurrency","schemaCryptoCurrency","schemaTokenCurrency","schemaERC20TokenCurrency","schemaCurrency","schemaTransactionCommon","FAMILIES","schemaFamilies","serializeAlgorandTransaction","family","mode","fees","assetId","memo","amount","recipient","deserializeAlgorandTransaction","serializeBitcoinTransaction","feePerByte","opReturnData","deserializeBitcoinTransaction","opReturnDataHex","Buffer","serializeCeloTransaction","deserializeCeloTransaction","serializeCosmosTransaction","gas","sourceValidator","validators","deserializeCosmosTransaction","serializeCryptoOrgTransaction","deserializeCryptoOrgTransaction","serializeEthereumTransaction","nonce","gasPrice","gasLimit","maxPriorityFeePerGas","maxFeePerGas","deserializeEthereumTransaction","serialize","deserialize","serializeHederaTransaction","deserializeHederaTransaction","serializeFilecoinTransaction","method","gasFeeCap","gasPremium","deserializeFilecoinTransaction","serializePolkadotTransaction","fee","era","numOfSlashingSpans","rewardDestination","deserializePolkadotTransaction","serializeRippleTransaction","tag","deserializeRippleTransaction","serializeStellarTransaction","memoType","memoValue","deserializeStellarTransaction","serializeTezosTransaction","deserializeTezosTransaction","serializeTonTransaction","comment","deserializeTonTransaction","serializeTronTransaction","resource","duration","votes","deserializeTronTransaction","serializeElrondTransaction","deserializeElrondTransaction","serializeCardanoTransaction","deserializeCardanoTransaction","serializeSolanaTransaction","model","deserializeSolanaTransaction","serializeVechainTransaction","estimatedFees","body","deserializeVechainTransaction","serializeStacksTransaction","network","anchorMode","deserializeStacksTransaction","serializeInternetComputerTransaction","deserializeInternetComputerTransaction","serializeCasperTransaction","transferId","deserializeCasperTransaction","serializeTransaction","transaction","near.serialize","neo.serialize","deserializeTransaction","rawTransaction","near.deserialize","neo.deserialize","schemaAlgorandOperationMode","schemaRawAlgorandTransaction","schemaRawBitcoinTransaction","schemaOperationMode","schemaRawCeloTransaction","schemaCosmosOperationMode","cosmosDelegationInfo","schemaRawCosmosTransaction","schemaRawCryptoOrgTransaction","schemaRawEthereumTransaction","schemaRawNearTransaction","schemaRawNeoTransaction","schemaPolkadotOperationMode","schemaPolkadotRewardDestination","schemaRawPolkadotTransaction","schemaRawRippleTransaction","schemaRawSolanaTransaction","stellarMemoTypeEnum","schemaRawStellarTransaction","schemaTezosOperationMode","schemaRawTezosTransaction","schemaTonComment","schemaRawTonTransaction","schemaTronOperationMode","schemaTronResource","schemaTronVotes","schemaRawTronTransaction","schemaRawHederaTransaction","schemaRawFilecoinTransaction","schemaRawElrondTransaction","schemaRawCardanoTransaction","schemaThorTransactionClause","schemaThorTransactionBody","schemaRawVechainTransaction","schemaRawStacksTransaction","schemaRawInternetComputerTransaction","schemaRawCasperTransaction","schemaRawTransaction","Logger","namespace","__publicField","defaultLogger","WindowMessageTransport","logger","event","handler","FeesLevel","DeviceModel","ExchangeType","schemaServerErrorCode","schemaNotImplementedByWallet","schemaAccountNotFound","schemaCurrencyNotFound","schemaPermissionDenied","schemaUnknownErrorData","schemaUnknownError","schemaUnauthorizedStore","schemaServerErrorData","createUnknownError","ServerError","errorData","RpcError","RpcErrorCode","schemaRPCId","schemaRPCRequest","schemaRPCResponseErrorData","schemaRPCResponseSuccess","schemaRPCResponseError","schemaRPCResponse","schemaRPCCall","parseRPCCall","parsedData","createRpcResponse","errorClasses","deserializers","addCustomErrorDeserializer","deserializer","createCustomErrorClass","CustomErrorClass","fields","isObject","cause","deserializeError","msg","des","constructor","prop","serializeError","destroyCircular","from","seen","to","HwTransportErrorType","TransportError","StatusCodes","getAltStatusMessage","code","TransportStatusError","statusCode","canBeMappedToChildError","statusText","smsg","statusCodeStr","LockedDeviceError","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","offset","randomUUID","native","v4","buf","rnds","RpcNode","transport","requestHandlers","request","resolve","reject","resolver","response","serverErrorData","requestId","uuidv4","serializedError","isResponse","callId","rpcCall","errorResponse","schemaAccountListParams","schemaAccountListResults","schemaAccountList","schemaAccountReceiveParams","schemaAccountReceiveResults","schemaAccountReceive","schemaAccountRequestParams","schemaAccountRequestResults","schemaAccountRequest","schemaBitcoinGetAddressParams","schemaBitcoinGetAddressResults","schemaBitcoinGetAddress","schemaBitcoinGetPublicKeyParams","schemaBitcoinGetPublicKeyResults","schemaBitcoinGetPublicKey","schemaBitcoinGetXPubParams","schemaBitcoinGetXPubResults","schemaBitcoinGetXPub","schemaCurrencyListParams","schemaCurrencyListResult","schemaCurrencyList","schemaDeviceType","schemaDeviceCloseParams","schemaDeviceCloseResults","schemaDeviceClose","schemaDeviceExchangeParams","schemaDeviceExchangeResults","schemaDeviceExchange","schemaDeviceOpenParams","schemaDeviceOpenResults","schemaDeviceOpen","schemaDeviceSelectParams","schemaDeviceSelectResults","schemaDeviceSelect","schemaDeviceTransportParams","schemaDeviceTransportResults","schemaDeviceTransport","schemaFeeStrategyType","schemaExchangeCompleteBaseParams","schemaExchangeCompleteFundParams","schemaExchangeCompleteSellParams","schemaExchangeCompleteSwapParams","schemaExchangeCompleteParams","schemaExchangeCompleteResults","schemaExchangeComplete","schemaExchangeType","schemaExchangeStartParams","schemaExchangeStartResults","schemaExchangeStart","schemaMessageSignParams","schemaMessageSignResults","schemaMessageSign","schemaStorageGetParams","schemaStorageGetResults","schemaStorageGet","schemaStorageSetParams","schemaStorageSetResults","schemaStorageSet","schemaTransactionOptions","schemaTransactionSignParams","schemaTransactionSignResults","schemaTransactionSign","schemaTransactionSignAndBroadcastParams","schemaTransactionSignAndBroadcastResults","schemaTransactionSignAndBroadcast","schemaWalletCapabilitiesParams","schemaWalletCapabilitiesResults","schemaWalletCapabilities","schemaWalletInfoParams","schemaWalletInfoResults","schemaWalletInfo","schemaWalletUserIdParams","schemaWalletUserIdResults","schemaWalletUserId","TransportRaceCondition","__awaiter","_arguments","P","generator","adopt","fulfilled","rejected","DEFAULT_LOG_TYPE","Transport","context","logType","EventEmitter","cla","ins","p1","statusList","abortTimeoutMs","tracer","sw","s","LocalTracer","_apdu","_abortTimeoutMs","apdus","observer","unsubscribed","unsubscribe","apdu","r","_key","eventName","cb","exchangeTimeout","unresponsiveTimeout","openTimeout","listenTimeout","found","listenTimeoutId","f","resolveBusy","busyPromise","unresponsiveReached","timeout","res","self","methods","scrambleKey","methodName","_appAPIlock","contextToAdd","_TransportWalletAPI","walletApi","transportId","apduHex","deviceExchangeResult","safeResults","deviceCloseResult","_observer","TransportWalletAPI","AccountModule","client","listAccountsResult","requestAccountsResult","accountId","receiveAccountsResult","BitcoinModule","derivationPath","getAddressResult","getPublicKeyResult","getXPupResult","CurrencyModule","listResult","DeviceModule","deviceTransportResult","deviceOpenResult","deviceSelectResult","ExchangeModule","exchangeType","exchangeStartResult","provider","fromAccountId","toAccountId","swapId","rate","binaryPayload","signature","feeStrategy","tokenCurrency","exchangeCompleteResult","MessageModule","meta","messageSignResult","StorageModule","storeId","storageGetResult","storageSetResult","TransactionModule","transactionSignResult","WalletModule","userIdResult","infoResult","walletCapabilitiesResult","_request","WalletAPIClient","getCustomModule","eventHandlers","getFilteredSupportedLedgerFamiliesWithCurrency","accounts","ledgerCurrencies","enabledChainsMap","accountsFamilies","accountsCurrencies","next","v","typeSafeObjectEntries","supportedLedgerFamiliesWithCurrency","chain","subItem","subItemMap","subKey","getLedgerCurrencies","walletAPIClient","EitherAsync","parentCryptoCurrencyFamily","createLedgerLiveConnector","walletDetailsParams","queryParams","createConnector","config","noAccountPlaceholder","$filteredChains","BehaviorSubject","$disabledChains","$currentAccount","$currentAccountId","ledgerAccounts","$accountsOnCurrentChain","currentChain","filteredSkSupportedChainsToCurrencyIdMap","filteredSkSupportedChainsValues","walletApiClient","connect","filteredSupportedLedgerFamiliesWithCurrency","enabled","disabled","accountsWithChain","itemMap","chainItem","defaultChain","Maybe","onAccountsChanged","onChainChanged","preferredAccount","accId","accountWithChain","List","getAccountsOnCurrentChain","chainId","skNormalizeChainId","onDisconnect","getProvider","isAuthorized","isLedgerDappBrowserProvider","disconnect","getChainId","getAccounts","switchAccount","account","requestAndSwitchAccount","currencyId","c","switchChain","currChain","skSupportedChain","accountsOnCurrentChain","currentAccount","configMeta","ledgerLiveConnector","images"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110]}