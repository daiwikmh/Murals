import type { AmountArgumentOptionsDto, TokenBalanceScanResponseDto, YieldDto } from "@stakekit/api-hooks";
import BigNumber from "bignumber.js";
import type { Maybe } from "purify-ts";
import type { InitParams } from "./init-params";
export declare const getInitialToken: (args: {
    initQueryParams: Maybe<InitParams>;
    tokenBalances: TokenBalanceScanResponseDto[];
    defaultTokens: TokenBalanceScanResponseDto[];
}) => import("purify-ts/Maybe").Maybe<import("@stakekit/api-hooks").TokenDto>;
export declare const getInitialYield: (args: {
    initQueryParams: Maybe<InitParams>;
    yieldDtos: YieldDto[];
    tokenBalanceAmount: BigNumber;
}) => import("purify-ts/Maybe").Maybe<YieldDto>;
export declare const getInitMinStakeAmount: (yieldDto: YieldDto) => BigNumber;
export declare const getInitSelectedValidators: (args: {
    initQueryParams: Maybe<InitParams>;
    yieldDto: YieldDto;
}) => Map<string, import("@stakekit/api-hooks").ValidatorDto>;
export declare const isForceMaxAmount: (args: AmountArgumentOptionsDto) => boolean;
