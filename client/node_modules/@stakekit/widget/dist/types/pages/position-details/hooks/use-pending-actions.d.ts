import type { PendingActionDto, ValidatorDto, YieldBalanceDto, YieldDto } from "@stakekit/api-hooks";
import BigNumber from "bignumber.js";
import type { PendingActionAmountChange } from "../state/types";
export declare const usePendingActions: () => {
    onPendingActionAmountChange: (data: PendingActionAmountChange["data"]) => void;
    validatorAddressesHandling: {
        modalState: {
            isOpen: boolean;
            setOpen: (val: boolean) => void;
        };
        closeModal: () => void;
        openModal: (args: {
            yieldBalance: YieldBalanceDto;
            pendingActionDto: PendingActionDto;
        }) => void;
        onItemClick: (validator: ValidatorDto["address"]) => void;
        submitDisabled: boolean;
        selectedValidators: Set<ValidatorDto["address"]>;
        multiSelect: boolean;
        showValidatorsModal: true;
        yieldBalance: YieldBalanceDto;
        pendingActionDto: PendingActionDto;
    } | {
        modalState: {
            isOpen: boolean;
            setOpen: (val: boolean) => void;
        };
        closeModal: () => void;
        openModal: (args: {
            yieldBalance: YieldBalanceDto;
            pendingActionDto: PendingActionDto;
        }) => void;
        onItemClick: (validator: ValidatorDto["address"]) => void;
        submitDisabled: boolean;
        selectedValidators: Set<ValidatorDto["address"]>;
        multiSelect: boolean;
        showValidatorsModal: false;
        yieldBalance: null;
        pendingActionDto: null;
    };
    pendingActions: import("purify-ts/Maybe").Maybe<{
        amount: BigNumber | null;
        formattedAmount: string;
        pendingActionDto: PendingActionDto;
        yieldBalance: YieldBalanceDto & {
            tokenPriceInUsd: BigNumber;
        };
    }[]>;
    onPendingActionClick: ({ yieldBalance, pendingActionDto, }: {
        pendingActionDto: PendingActionDto;
        yieldBalance: YieldBalanceDto;
    }) => void;
    onValidatorsSubmit: (selectedValidators: string[]) => import("purify-ts").Either<Error, {
        yieldDto: YieldDto;
        selectedValidators: string[];
        pendingActionDto: PendingActionDto;
        yieldBalance: YieldBalanceDto;
    }>;
};
