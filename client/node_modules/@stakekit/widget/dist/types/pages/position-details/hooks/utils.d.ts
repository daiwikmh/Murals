import type { PendingActionDto, PendingActionRequestDto, ValidatorDto, YieldBalanceDto, YieldDto } from "@stakekit/api-hooks";
import type { Either } from "purify-ts";
import type { SKWallet } from "../../../domain/types";
import type { State } from "../state/types";
export declare const preparePendingActionRequestDto: ({ pendingActionsState, additionalAddresses, address, pendingActionDto, integration, yieldBalance, selectedValidators, }: {
    pendingActionsState: State["pendingActions"];
    address: SKWallet["address"];
    additionalAddresses: SKWallet["additionalAddresses"];
    pendingActionDto: PendingActionDto;
    yieldBalance: YieldBalanceDto;
    integration: YieldDto;
    selectedValidators: ValidatorDto["address"][];
}) => Either<Error, {
    requestDto: PendingActionRequestDto;
    integrationData: YieldDto;
    gasFeeToken: YieldDto["token"];
    address: NonNullable<SKWallet["address"]>;
    additionalAddresses: NonNullable<SKWallet["additionalAddresses"]> | undefined;
}>;
