import { Maybe } from "purify-ts";
export declare const useStakeReview: () => {
    token: import("purify-ts/Maybe").Maybe<import("@stakekit/api-hooks").TokenDto>;
    amount: string;
    fee: string;
    interestRate: string;
    yieldType: string;
    rewardToken: import("purify-ts/Maybe").Maybe<{
        logoUri: string;
        rewardTokens: import("@stakekit/api-hooks").TokenDto[];
        symbols: import("react/jsx-runtime").JSX.Element[];
        providerName: string;
    }>;
    metadata: import("purify-ts/Maybe").Maybe<import("@stakekit/api-hooks").YieldMetadataDto>;
    metaInfo: {
        showMetaInfo: true;
        metaInfoProps: {
            selectedStake: import("purify-ts/Maybe").Maybe<import("@stakekit/api-hooks").YieldDto>;
            selectedToken: import("purify-ts/Maybe").Maybe<import("@stakekit/api-hooks").TokenDto>;
            selectedValidators: Map<string, import("@stakekit/api-hooks").ValidatorDto>;
        };
    } | {
        showMetaInfo: false;
        metaInfoProps?: undefined;
    };
    isGasCheckWarning: boolean;
    gasCheckLoading: boolean;
    depositFee: Maybe<import("../types").FeesBps>;
    managementFee: Maybe<import("../types").FeesBps>;
    performanceFee: Maybe<import("../types").FeesBps>;
    feeConfigLoading: boolean;
};
