import type { FeesBps } from "@sk-widget/pages/review/types";
import type { TokenDto, YieldMetadataDto } from "@stakekit/api-hooks";
import type { Maybe } from "purify-ts";
import type { ComponentProps, ReactNode } from "react";
import type { RewardTokenDetails } from "../../../../components/molecules/reward-token-details";
import { MetaInfo } from "../../../components/meta-info";
export type MetaInfoProps = {
    showMetaInfo: true;
    metaInfoProps: ComponentProps<typeof MetaInfo>;
} | {
    showMetaInfo: false;
    metaInfoProps?: never;
};
type ReviewPageProps = {
    fee: string;
    title: string;
    token: Maybe<TokenDto>;
    metadata: Maybe<YieldMetadataDto>;
    info: ReactNode;
    rewardTokenDetailsProps: Maybe<ComponentProps<typeof RewardTokenDetails>>;
    isGasCheckError: boolean;
    loading?: boolean;
    depositFee: Maybe<FeesBps>;
    managementFee: Maybe<FeesBps>;
    performanceFee: Maybe<FeesBps>;
    feeConfigLoading?: boolean;
} & MetaInfoProps;
export declare const ReviewPage: ({ fee, title, token, metadata, info, rewardTokenDetailsProps, isGasCheckError, loading, depositFee, managementFee, performanceFee, feeConfigLoading, ...rest }: ReviewPageProps) => import("react/jsx-runtime").JSX.Element;
export {};
