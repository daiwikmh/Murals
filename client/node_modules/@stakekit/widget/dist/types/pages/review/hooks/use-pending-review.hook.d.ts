import { type ActionTypes } from "@stakekit/api-hooks";
import { Maybe } from "purify-ts";
export declare const usePendingActionReview: () => {
    integrationData: import("purify-ts/Maybe").Maybe<import("@stakekit/api-hooks").YieldDto>;
    title: import("purify-ts/Maybe").Maybe<string>;
    amount: string;
    fee: string;
    rewardTokenDetailsProps: import("purify-ts/Maybe").Maybe<{
        type: "pendingAction";
        pendingAction: ActionTypes;
        rewardToken: import("purify-ts/Maybe").Maybe<{
            logoUri: string;
            providerName: string;
            symbols: import("react/jsx-runtime").JSX.Element[];
            rewardTokens: import("@stakekit/api-hooks").TokenDto[];
        }>;
    }>;
    token: import("purify-ts/Maybe").Maybe<import("@stakekit/api-hooks").TokenDto>;
    metaInfo: {
        showMetaInfo: false;
        metaInfoProps?: never;
    };
    isGasCheckWarning: boolean;
    gasCheckLoading: boolean;
    depositFee: Maybe<import("../types").FeesBps>;
    managementFee: Maybe<import("../types").FeesBps>;
    performanceFee: Maybe<import("../types").FeesBps>;
    feeConfigLoading: boolean;
};
