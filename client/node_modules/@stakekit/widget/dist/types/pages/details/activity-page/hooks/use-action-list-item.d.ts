import { type ActionDto, type YieldDto } from "@stakekit/api-hooks";
import { Maybe } from "purify-ts";
type ActionYieldDto = {
    actionData: ActionDto;
    yieldData: YieldDto;
};
export declare const useActionListItem: (action: ActionYieldDto) => {
    integrationData: import("purify-ts/Maybe").Maybe<YieldDto>;
    providersDetails: Maybe<{
        logo: string | undefined;
        name: string;
        rewardRateFormatted: string;
        rewardRate: number | undefined;
        rewardType: import("@stakekit/api-hooks").RewardTypes;
        address?: string;
        stakedBalance?: import("@stakekit/api-hooks").ValidatorDto["stakedBalance"];
        votingPower?: import("@stakekit/api-hooks").ValidatorDto["votingPower"];
        commission?: import("@stakekit/api-hooks").ValidatorDto["commission"];
        website?: import("@stakekit/api-hooks").ValidatorDto["website"];
        status?: import("@stakekit/api-hooks").ValidatorDto["status"];
        preferred?: import("@stakekit/api-hooks").ValidatorDto["preferred"];
    }[]>;
    actionType: string | undefined;
    amount: import("purify-ts/Maybe").Maybe<string>;
    badgeLabel: string | undefined;
    badgeColor: "claim" | "pending" | "actionRequired" | undefined;
};
export {};
