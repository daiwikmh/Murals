import type { RecipeVariants } from "@vanilla-extract/recipes";
import { vars } from "../../../styles";
export declare const heading: import("@vanilla-extract/recipes").RuntimeFn<{
    level: {
        h1: {
            fontSize: typeof vars.heading.h1.mobile.fontSize;
            "@media": Record<string, {
                fontSize: typeof vars.heading.h1.mobile.fontSize;
            }>;
        };
        h2: {
            fontSize: typeof vars.heading.h1.mobile.fontSize;
            "@media": Record<string, {
                fontSize: typeof vars.heading.h1.mobile.fontSize;
            }>;
        };
        h3: {
            fontSize: typeof vars.heading.h1.mobile.fontSize;
            "@media": Record<string, {
                fontSize: typeof vars.heading.h1.mobile.fontSize;
            }>;
        };
        h4: {
            fontSize: typeof vars.heading.h1.mobile.fontSize;
            "@media": Record<string, {
                fontSize: typeof vars.heading.h1.mobile.fontSize;
            }>;
        };
    };
    weight: {
        normal: string;
        medium: string;
        semibold: string;
        bold: string;
        extrabold: string;
    };
}>;
export type HeadingVariants = RecipeVariants<typeof heading>;
export declare const textStyles: import("@vanilla-extract/recipes").RuntimeFn<{
    weight: {
        normal: string;
        medium: string;
        semibold: string;
        bold: string;
        extrabold: string;
    };
    type: {
        accent: string;
        regular: string;
        muted: string;
        inverted: string;
        white: string;
        danger: string;
    };
    size: {
        small: {
            fontSize: typeof vars.text.small.mobile.fontSize;
            "@media": Record<string, {
                fontSize: typeof vars.text.small.mobile.fontSize;
            }>;
        };
        large: {
            fontSize: typeof vars.text.small.mobile.fontSize;
            "@media": Record<string, {
                fontSize: typeof vars.text.small.mobile.fontSize;
            }>;
        };
        medium: {
            fontSize: typeof vars.text.small.mobile.fontSize;
            "@media": Record<string, {
                fontSize: typeof vars.text.small.mobile.fontSize;
            }>;
        };
    };
}>;
export type TextVariants = RecipeVariants<typeof textStyles>;
