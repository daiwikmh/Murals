import type { ValidatorDto, YieldDto } from "@stakekit/api-hooks";
import type { PropsWithChildren } from "react";
import type { SelectModalProps } from "../../atoms/select-modal";
type SelectValidatorProps = PropsWithChildren<Pick<SelectModalProps, "onClose" | "onOpen" | "state" | "trigger"> & {
    selectedValidators: Set<ValidatorDto["address"]>;
    onItemClick: (item: ValidatorDto) => void;
    onViewMoreClick?: () => void;
    validators: YieldDto["validators"];
    selectedStake: YieldDto;
    multiSelect: boolean;
} & ({
    onSearch: (value: string) => void;
    searchValue: string;
} | {
    onSearch?: never;
    searchValue?: never;
})>;
export declare const SelectValidator: ({ state, onClose, onOpen, trigger, selectedValidators, onItemClick, onViewMoreClick, validators, multiSelect, selectedStake, children, ...rest }: SelectValidatorProps) => import("react/jsx-runtime").JSX.Element;
export {};
