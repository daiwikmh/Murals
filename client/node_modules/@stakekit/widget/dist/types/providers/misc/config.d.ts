import type { Networks } from "@stakekit/common";
import type { Chain, WalletList } from "@stakekit/rainbowkit";
import type { QueryClient } from "@tanstack/react-query";
import { EitherAsync, Maybe } from "purify-ts";
import type { MiscChainsMap } from "../../domain/types/chains";
declare const queryFn: ({ enabledNetworks, forceWalletConnectOnly, }: {
    enabledNetworks: Set<Networks>;
    forceWalletConnectOnly: boolean;
}) => Promise<{
    miscChainsMap: Partial<MiscChainsMap>;
    miscChains: Chain[];
    connectors: Maybe<{
        groupName: string;
        wallets: WalletList[number]["wallets"];
    }>[];
}>;
export declare const getConfig: (opts: Parameters<typeof queryFn>[0] & {
    queryClient: QueryClient;
}) => EitherAsync<Error, {
    miscChainsMap: Partial<MiscChainsMap>;
    miscChains: Chain[];
    connectors: Maybe<{
        groupName: string;
        wallets: WalletList[number]["wallets"];
    }>[];
}>;
export {};
