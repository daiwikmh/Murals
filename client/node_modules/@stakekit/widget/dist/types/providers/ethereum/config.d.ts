import type { useYieldGetMyNetworksHook } from "@stakekit/api-hooks";
import type { Chain, WalletList } from "@stakekit/rainbowkit";
import type { QueryClient } from "@tanstack/react-query";
import { EitherAsync, Maybe } from "purify-ts";
import type { EvmChainsMap } from "../../domain/types/chains";
declare const queryFn: ({ queryClient, forceWalletConnectOnly, yieldGetMyNetworks, }: {
    queryClient: QueryClient;
    forceWalletConnectOnly: boolean;
    yieldGetMyNetworks: ReturnType<typeof useYieldGetMyNetworksHook>;
}) => Promise<{
    evmChainsMap: Partial<EvmChainsMap>;
    evmChains: Chain[];
    connector: Maybe<WalletList[number]>;
}>;
export declare const getConfig: (opts: Parameters<typeof queryFn>[0]) => EitherAsync<Error, {
    evmChainsMap: Partial<EvmChainsMap>;
    evmChains: Chain[];
    connector: Maybe<WalletList[number]>;
}>;
export {};
