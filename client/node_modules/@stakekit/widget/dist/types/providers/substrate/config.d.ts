import type { useYieldGetMyNetworksHook } from "@stakekit/api-hooks";
import type { QueryClient } from "@tanstack/react-query";
import { EitherAsync } from "purify-ts";
import type { SubstrateChainsMap } from "../../domain/types/chains";
declare const queryFn: ({ queryClient, yieldGetMyNetworks, }: {
    queryClient: QueryClient;
    yieldGetMyNetworks: ReturnType<typeof useYieldGetMyNetworksHook>;
}) => Promise<{
    substrateChainsMap: Partial<SubstrateChainsMap>;
    substrateChains: import("@stakekit/rainbowkit").Chain[];
}>;
export declare const getConfig: (opts: Parameters<typeof queryFn>[0]) => EitherAsync<Error, {
    substrateChainsMap: Partial<SubstrateChainsMap>;
    substrateChains: import("@stakekit/rainbowkit").Chain[];
}>;
export {};
