import type { TokenBalanceScanDto } from "@stakekit/api-hooks";
import { useTokenTokenBalancesScanHook } from "@stakekit/api-hooks";
import type { QueryClient } from "@tanstack/react-query";
import { EitherAsync } from "purify-ts";
export declare const useTokenBalancesScan: () => import("@tanstack/react-query").UseQueryResult<import("@stakekit/api-hooks").TokenBalanceScanResponseDto[], Error>;
export declare const getTokenBalancesScan: (params: Parameters<typeof queryFn>[0] & {
    queryClient: QueryClient;
}) => EitherAsync<Error, import("@stakekit/api-hooks").TokenBalanceScanResponseDto[]>;
declare const queryFn: ({ tokenBalanceScanDto, tokenTokenBalancesScan, }: {
    tokenBalanceScanDto: TokenBalanceScanDto;
    tokenTokenBalancesScan: ReturnType<typeof useTokenTokenBalancesScanHook>;
}) => EitherAsync<Error, import("@stakekit/api-hooks").TokenBalanceScanResponseDto[]>;
export declare const useInvalidateTokenBalances: () => () => Promise<void>;
export {};
