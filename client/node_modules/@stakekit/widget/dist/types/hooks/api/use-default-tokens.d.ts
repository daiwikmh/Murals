import type { TokenBalanceScanResponseDto } from "@stakekit/api-hooks";
import { useTokenGetTokensHook } from "@stakekit/api-hooks";
import type { QueryClient } from "@tanstack/react-query";
import { EitherAsync } from "purify-ts";
import type { SKWallet } from "../../domain/types";
export declare const useDefaultTokens: () => import("@tanstack/react-query").UseQueryResult<TokenBalanceScanResponseDto[], Error>;
export declare const getDefaultTokens: (params: Parameters<typeof queryFn>[0] & {
    queryClient: QueryClient;
}) => EitherAsync<Error, TokenBalanceScanResponseDto[]>;
declare const queryFn: ({ network, tokenGetTokens, }: {
    network: SKWallet["network"];
    tokenGetTokens: ReturnType<typeof useTokenGetTokensHook>;
}) => EitherAsync<unknown, TokenBalanceScanResponseDto[]>;
export {};
